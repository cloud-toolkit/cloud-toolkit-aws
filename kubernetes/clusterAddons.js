"use strict";
// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClusterAddons = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ClusterAddons is a component that manages the Lubernetes addons to setup a production-ready cluster.
 */
class ClusterAddons extends pulumi.ComponentResource {
    /**
     * Create a ClusterAddons resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.identityProvidersArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityProvidersArn'");
            }
            if ((!args || args.issuerUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuerUrl'");
            }
            if ((!args || args.k8sProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'k8sProvider'");
            }
            if ((!args || args.zoneArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneArns'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["identityProvidersArn"] = args ? args.identityProvidersArn : undefined;
            resourceInputs["ingress"] = args ? args.ingress : undefined;
            resourceInputs["issuerUrl"] = args ? args.issuerUrl : undefined;
            resourceInputs["k8sProvider"] = args ? args.k8sProvider : undefined;
            resourceInputs["zoneArns"] = args ? args.zoneArns : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["adminIngressNginx"] = undefined /*out*/;
            resourceInputs["argocd"] = undefined /*out*/;
            resourceInputs["awsLoadBalancerController"] = undefined /*out*/;
            resourceInputs["calico"] = undefined /*out*/;
            resourceInputs["certManager"] = undefined /*out*/;
            resourceInputs["clusterAutoscaler"] = undefined /*out*/;
            resourceInputs["dashboard"] = undefined /*out*/;
            resourceInputs["ebsCsiDriver"] = undefined /*out*/;
            resourceInputs["externalDns"] = undefined /*out*/;
        }
        else {
            resourceInputs["adminIngressNginx"] = undefined /*out*/;
            resourceInputs["argocd"] = undefined /*out*/;
            resourceInputs["awsLoadBalancerController"] = undefined /*out*/;
            resourceInputs["calico"] = undefined /*out*/;
            resourceInputs["certManager"] = undefined /*out*/;
            resourceInputs["clusterAutoscaler"] = undefined /*out*/;
            resourceInputs["dashboard"] = undefined /*out*/;
            resourceInputs["ebsCsiDriver"] = undefined /*out*/;
            resourceInputs["externalDns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterAddons.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
    /**
     * Returns true if the given object is an instance of ClusterAddons.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterAddons.__pulumiType;
    }
}
exports.ClusterAddons = ClusterAddons;
/** @internal */
ClusterAddons.__pulumiType = 'cloud-toolkit-aws:kubernetes:ClusterAddons';
//# sourceMappingURL=clusterAddons.js.map