"use strict";
// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * NodeGroup is a component that deploy a Node Group for a Kubernetes cluster.
 */
class NodeGroup extends pulumi.ComponentResource {
    /**
     * Create a NodeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterCA === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterCA'");
            }
            if ((!args || args.clusterEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterEndpoint'");
            }
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.clusterVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterVersion'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            resourceInputs["clusterCA"] = args ? args.clusterCA : undefined;
            resourceInputs["clusterEndpoint"] = args ? args.clusterEndpoint : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["maxCount"] = args ? args.maxCount : undefined;
            resourceInputs["maxUnavailable"] = args ? args.maxUnavailable : undefined;
            resourceInputs["minCount"] = args ? args.minCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["launchTemplate"] = undefined /*out*/;
            resourceInputs["nodeGroup"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["rolePolicyAttachments"] = undefined /*out*/;
        }
        else {
            resourceInputs["launchTemplate"] = undefined /*out*/;
            resourceInputs["nodeGroup"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["rolePolicyAttachments"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NodeGroup.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
    /**
     * Returns true if the given object is an instance of NodeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NodeGroup.__pulumiType;
    }
}
exports.NodeGroup = NodeGroup;
/** @internal */
NodeGroup.__pulumiType = 'cloud-toolkit-aws:kubernetes:NodeGroup';
//# sourceMappingURL=nodeGroup.js.map