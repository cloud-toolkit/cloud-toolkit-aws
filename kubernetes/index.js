"use strict";
// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeGroup = exports.Irsa = exports.IngressNginx = exports.ExternalDns = exports.Dashboard = exports.ClusterAutoscaler = exports.ClusterAddons = exports.Cluster = exports.CertManager = exports.Calico = exports.AwsLoadBalancerController = exports.AwsEbsCsiDriver = exports.ArgoCD = exports.ApplicationAddon = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ApplicationAddon = null;
exports.ArgoCD = null;
exports.AwsEbsCsiDriver = null;
exports.AwsLoadBalancerController = null;
exports.Calico = null;
exports.CertManager = null;
exports.Cluster = null;
exports.ClusterAddons = null;
exports.ClusterAutoscaler = null;
exports.Dashboard = null;
exports.ExternalDns = null;
exports.IngressNginx = null;
exports.Irsa = null;
exports.NodeGroup = null;
utilities.lazyLoad(exports, ["ApplicationAddon"], () => require("./applicationAddon"));
utilities.lazyLoad(exports, ["ArgoCD"], () => require("./argoCD"));
utilities.lazyLoad(exports, ["AwsEbsCsiDriver"], () => require("./awsEbsCsiDriver"));
utilities.lazyLoad(exports, ["AwsLoadBalancerController"], () => require("./awsLoadBalancerController"));
utilities.lazyLoad(exports, ["Calico"], () => require("./calico"));
utilities.lazyLoad(exports, ["CertManager"], () => require("./certManager"));
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["ClusterAddons"], () => require("./clusterAddons"));
utilities.lazyLoad(exports, ["ClusterAutoscaler"], () => require("./clusterAutoscaler"));
utilities.lazyLoad(exports, ["Dashboard"], () => require("./dashboard"));
utilities.lazyLoad(exports, ["ExternalDns"], () => require("./externalDns"));
utilities.lazyLoad(exports, ["IngressNginx"], () => require("./ingressNginx"));
utilities.lazyLoad(exports, ["Irsa"], () => require("./irsa"));
utilities.lazyLoad(exports, ["NodeGroup"], () => require("./nodeGroup"));
// Export enums:
__exportStar(require("../types/enums/kubernetes"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "cloud-toolkit-aws:kubernetes:ApplicationAddon":
                return new exports.ApplicationAddon(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:ArgoCD":
                return new exports.ArgoCD(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:AwsEbsCsiDriver":
                return new exports.AwsEbsCsiDriver(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:AwsLoadBalancerController":
                return new exports.AwsLoadBalancerController(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:Calico":
                return new exports.Calico(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:CertManager":
                return new exports.CertManager(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:ClusterAddons":
                return new exports.ClusterAddons(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:ClusterAutoscaler":
                return new exports.ClusterAutoscaler(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:Dashboard":
                return new exports.Dashboard(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:ExternalDns":
                return new exports.ExternalDns(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:IngressNginx":
                return new exports.IngressNginx(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:Irsa":
                return new exports.Irsa(name, undefined, { urn });
            case "cloud-toolkit-aws:kubernetes:NodeGroup":
                return new exports.NodeGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloud-toolkit-aws", "kubernetes", _module);
//# sourceMappingURL=index.js.map