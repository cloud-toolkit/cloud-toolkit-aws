name: cloud-toolkit-aws
license: Apache-2.0
logoUrl: null
displayName: Cloud Toolkit AWS
publisher: AstroKube
keywords:
  - pulumi
  - aws
  - cloud-toolkit
  - category/cloud
  - kind/component
pluginDownloadURL: github://api.github.com/cloud-toolkit/cloud-toolkit-aws
types:
  cloud-toolkit-aws:databases:MysqlVersion:
    description: Set of allowed versions for the database instance
    type: string
    enum:
      - name: V8_0
        value: "8.0"
      - name: V5_7
        value: "5.7"
  cloud-toolkit-aws:databases:MysqlStorageType:
    description: Set of storage type classes for database instance
    type: string
    enum:
      - name: standard
        value: standard
      - name: io1
        value: io1
      - name: gp2
        value: gp2
  cloud-toolkit-aws:email:NotificationTypes:
    description: >-
      Types of Email Notifications that are covered by Email Sender.

      * Bounce usually occurs when the recipient address does not exist, their inbox is full, the content of the message if flagged or other casuistics.

      * Complaint indicates that the recipient does not want the email that was sent to them. It is usually a proactive action and it is best to remove the recipient address from the mailing list whenever it is.

      * Delivery marks an email as correctly delivered.
    type: string
    enum:
      - name: Bounce
        value: Bounce
      - name: Complaint
        value: Complaint
      - name: Delivery
        value: Delivery
  cloud-toolkit-aws:kubernetes:ClusterSubnetsType:
    description: The subnet type
    type: string
    enum:
      - name: private
        value: private
      - name: public
        value: public
  cloud-toolkit-aws:serverless:DeadLetterQueueTypes:
    description: >-
      Dead Letter Queue type that will receive the faulty messages from
      the base Queue.

      Permissive - Messages will be sent to the Dead Letter Queue after 10 failed delivery attempts.

      Restrictive - Messages will be sent to the Dead Letter Queue after the first failed delivery attempt.
    type: string
    enum:
      - name: PERMISSIVE
        value: permissive
      - name: RESTRICTIVE
        value: restrictive
  cloud-toolkit-aws:storage:BucketVersioningState:
    description: >-
      Versioning object mode that is selected for the bucket.

      Enabled - Bucket keeps track of object versioning.

      Disabled - Bucket does not keep track of object versioning. Once versioning is Enabled we cannot Disabled versioning.

      Suspended - Once versioning is Enabled, this feature can be suspended
    type: string
    enum:
      - name: Enabled
        value: Enabled
      - name: Disabled
        value: Disabled
      - name: Suspended
        value: Suspended
  cloud-toolkit-aws:databases:AuroraMysql:
    properties:
      version:
        description: Version for database
        type: string
      database:
        description: Configuration parameters for the database
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlDatabase"
      instanceType:
        description: The instance type for the cluster
        type: string
      instancesCount:
        description: The number of instances to be created for Aurora cluster
        type: number
      logging:
        description: Logging configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlLogging"
      monitoring:
        description: Monitoring configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlMonitoring"
      networking:
        description: Networking configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlNetworking"
      backup:
        description: Backup configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlBackup"
    type: object
    required: []
  cloud-toolkit-aws:databases:AuroraMysqlDatabase:
    properties:
      name:
        description: The name of the database to create when the DB instance is created
        type: string
      username:
        description: Username for database admin user
        type: string
      passwordLength:
        description: Password length to login in the database
        type: number
    type: object
    required: []
  cloud-toolkit-aws:databases:AuroraMysqlBackup:
    properties:
      preferredWindow:
        description: Time window in which backups should be taken
        type: string
      retentionDays:
        description: Retention days for backups
        type: number
    type: object
    required: []
  cloud-toolkit-aws:databases:AuroraMysqlLogging:
    properties:
      audit:
        description: Enable audit logging
        type: boolean
      error:
        description: Enable error logging
        type: boolean
      general:
        description: Enable general logging
        type: boolean
      slowquery:
        description: Enable slowquery logging
        type: boolean
    type: object
    required: []
  cloud-toolkit-aws:databases:AuroraMysqlMonitoring:
    properties:
      enabled:
        description: Enable cluster alerting with CloudWatch
        type: boolean
      emails:
        description: Emails that will receive the alerts
        type: array
        items:
          description: Emails that will receive the alerts
          type: string
    type: object
    required: []
  cloud-toolkit-aws:databases:AuroraMysqlNetworking:
    properties:
      allowedCidr:
        description: Allowed CIDRs that connect to the cluster
        type: array
        items:
          description: Allowed CIDRs that connect to the cluster
          type: string
      allowInternet:
        description: Allow traffic from Internet
        type: boolean
      subnetIds:
        description: Subnets belonging to a Virtual Private Cloud where cluster must be
          deployed
        type: array
        items:
          description: Subnets belonging to a Virtual Private Cloud where cluster must be
            deployed
          type: string
      vpc:
        description: Virtual Private Cloud where instances must be deployed
        type: string
    type: object
    required: []
  cloud-toolkit-aws:databases:Mysql:
    properties:
      instance:
        description: Instance type to run the database instance
        type: string
      version:
        description: Version for database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlVersion"
      database:
        description: Configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlDatabase"
      storage:
        description: Storage configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlStorage"
      networking:
        description: Network configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlNetworking"
      backup:
        description: Backup configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlBackup"
    type: object
    required:
      - version
      - database
  cloud-toolkit-aws:databases:MysqlDatabase:
    properties:
      name:
        description: The name of the database to create when the DB instance is created
        type: string
      username:
        description: Username for database admin user
        type: string
      passwordLength:
        description: Password length to login in the database instance
        type: number
    type: object
    required:
      - name
      - username
  cloud-toolkit-aws:databases:MysqlBackup:
    properties:
      preferredWindow:
        description: Time window in which backups should be taken
        type: string
      retentionDays:
        description: Retention days for backups
        type: number
    type: object
    required: []
  cloud-toolkit-aws:databases:MysqlStorage:
    properties:
      size:
        description: Storage size allocated for database instance
        type: number
      type:
        description: Storage type class for database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlStorageType"
    type: object
    required: []
  cloud-toolkit-aws:databases:MysqlNetworking:
    properties:
      vpc:
        description: Virtual Private Cloud where database instance must be deployed
        type: string
      subnetIds:
        description: Subnets belonging to a Virtual Private Cloud where database
          instance must be deployed
        type: array
        items:
          description: Subnets belonging to a Virtual Private Cloud where database
            instance must be deployed
          type: string
      allowedCidr:
        description: Allowed CIDRs that connect to the database instance
        type: array
        items:
          description: Allowed CIDRs that connect to the database instance
          type: string
    type: object
    required: []
  cloud-toolkit-aws:email:AdditionalQueue:
    properties:
      arn:
        description: Amazon Resource Name for the Queue component.
        type: string
      url:
        description: Endpoint of the Queue component in AWS.
        type: string
    type: object
    required:
      - arn
      - url
  cloud-toolkit-aws:email:NotificationTypeQueues:
    properties:
      numberOfDefaultQueues:
        description: Number of default Queues that will be created and attached to a Topic.
        type: number
      defaultQueuesConfig:
        description: Configuration for the Default Queues. If left blank, Queues created
          for this Notification Type will be standard, non-fifo, with a Dead
          Letter Queue attached to them.
        $ref: "#/types/cloud-toolkit-aws:serverless:Queue"
      additionalQueues:
        description: Arguments to include Queues built and implemented outside of the
          Email Sender Component. Useful when subscribing a single Queue to two
          or more Topics or when migrating existing ones.
        type: array
        items:
          description: Arguments to include Queues built and implemented outside of the
            Email Sender Component. Useful when subscribing a single Queue to
            two or more Topics or when migrating existing ones.
          $ref: "#/types/cloud-toolkit-aws:email:AdditionalQueue"
    type: object
    required:
      - numberOfDefaultQueues
      - additionalQueues
  cloud-toolkit-aws:email:NotificationType:
    properties:
      enabled:
        description: Enables the feature.
        type: boolean
      includeOriginalHeaders:
        description: Include original headers on the stored messages in the Queue(s).
        type: boolean
      queues:
        description: >-
          Arguments to configure the Queues subscribed to the Notification
          Type Topic.

          If left blank, a default standard, non-fifo, Queue and a Dead Letter Queue that is attached to the former will be created.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationTypeQueues"
    type: object
    required:
      - enabled
  cloud-toolkit-aws:email:EmailSender:
    properties:
      identity:
        description: >-
          Address of the Domain or Email used to send the emails through
          Email Sender.

          If an Email address is provided, Email Sender will set a Simple Email Service Email Identity. Verification will need to be manual.

          Else, if a Domain address is configured, Email Sender will create a Simple Email Service Domain Identity. 

          By default, it will attempt to verify the Domain by looking the Route 53 Domain Registry in the AWS account that is applying the infrastructure changes.

          If the Domain is registered elsewhere, verification needs to be manual.
        type: string
      configureDNS:
        description: >-
          In the case of a Domain Identity, enables automatic verification by
          creating DKIM DNS Records in the domain registration on Route 53.

          If the domain is not registered in the Route 53 on the same AWS account that is applying the infrastructure changes, the process will fail unless this flag is set to False.
        type: boolean
      bounce:
        description: Arguments to manage incoming Bounce notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
      complaint:
        description: Arguments to manage incoming Complaint notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
      delivery:
        description: Arguments to manage incoming Delivery notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
    type: object
    required:
      - identity
  cloud-toolkit-aws:email:DnsDkimRecord:
    properties:
      name:
        description: Name of the Record.
        type: string
      token:
        description: Token of the Record.
        type: string
    type: object
    required:
      - name
      - token
  cloud-toolkit-aws:kubernetes:AdotApplicationLoggingItem:
    properties:
      dataRetention:
        description: Data retention expressed in days.
        type: number
    type: object
    required:
      - dataRetention
  cloud-toolkit-aws:kubernetes:AdotApplicationMetrics:
    properties:
      enabled:
        description: Enable metrics.
        type: boolean
      dataRetention:
        description: Data retention expressed in days.
        type: number
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:AdotApplication:
    properties:
      metrics:
        description: Configure metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      clusterName:
        description: The cluster name.
        type: string
      awsRegion:
        description: The AWS Region.
        type: string
    type: object
    required:
      - clusterName
      - awsRegion
  cloud-toolkit-aws:kubernetes:AdotOperator:
    properties: {}
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ApplicationAddon:
    properties:
      k8sProvider:
        description: Kubernetes provider used by Pulumi.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      name:
        description: The name of the instanced component.
        type: string
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      createNamespace:
        description: Create a new Namespace using the given name.
        type: boolean
    type: object
    required:
      - k8sProvider
      - name
      - namespace
  cloud-toolkit-aws:kubernetes:IrsaApplicationAddon:
    properties:
      identityProvidersArn:
        description: The OIDC Identity Provider arn used by the IRSA.
        type: array
        items:
          description: The OIDC Identity Provider arn used by the IRSA.
          type: string
      issuerUrl:
        description: The OIDC Identity Provider url used by the IRSA.
        type: string
      serviceAccountName:
        description: The Service Account name used in Kubernetes.
        type: string
    type: object
    required:
      - identityProvidersArn
      - issuerUrl
      - serviceAccountName
  cloud-toolkit-aws:kubernetes:ArgoCD:
    properties:
      hostname:
        description: The hostname to be used to expose ArgoCD with an Ingress.
        type: string
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:AwsLoadBalancerController:
    properties:
      clusterName:
        description: The Cluster name.
        type: string
    type: object
    required:
      - clusterName
  cloud-toolkit-aws:kubernetes:Calico:
    properties: {}
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:CertManager:
    properties:
      zoneArns:
        description: The list of DNS Zone arn to be used by CertManager.
        type: array
        items:
          description: The list of DNS Zone arn to be used by CertManager.
          type: string
    type: object
    required:
      - zoneArns
  cloud-toolkit-aws:kubernetes:ClusterAddons:
    properties:
      k8sProvider:
        description: The Pulumi provider used for Kubernetes resources.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      clusterName:
        description: The EKS Cluster name.
        type: string
      identityProvidersArn:
        description: The OIDC Identity Provider arn.
        type: array
        items:
          description: The OIDC Identity Provider arn.
          type: string
      issuerUrl:
        description: The OIDC Identity Provider url.
        type: string
      logging:
        description: Configure the cluster observability for logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      metrics:
        description: Configure the cluster observability for metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      ingress:
        description: The configuration for Ingress Controller.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAddonsIngress"
    type: object
    required:
      - k8sProvider
      - clusterName
      - identityProvidersArn
      - issuerUrl
  cloud-toolkit-aws:kubernetes:ClusterAddonsIngress:
    properties:
      admin:
        description: Configure the admin IngressController.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAddonsIngressItem"
      default:
        description: Configure the default IngressController.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAddonsIngressItem"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterAddonsIngressItem:
    properties:
      public:
        description: Use a public Load Balancer to expose the IngressController.
        type: boolean
      domain:
        description: The domain used to expose the IngressController.
        type: string
      whitelist:
        description: Set a whitelist to access the IngressController.
        type: array
        items:
          description: Set a whitelist to access the IngressController.
          type: string
      enableTlsTermination:
        description: Enable TLS termination in Load Balancer.
        type: boolean
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterAdmins:
    properties:
      name:
        description: The name for the group of Cluster Admins.
        type: string
      kubeconfig:
        description: Kubernetes provider used by Pulumi.
        type: string
      userArns:
        description: The list of AWS IAM User arns.
        type: array
        items:
          description: The list of AWS IAM User arns.
          type: string
    type: object
    required:
      - name
      - kubeconfig
      - userArns
  cloud-toolkit-aws:kubernetes:Cluster:
    properties:
      vpcId:
        description: The VPC ID where the cluster will be deployed
        type: string
      privateSubnetIds:
        description: The list of private subnet ids where for the EKS cluster. These
          subnets will be tagged for Kubernetes purposes.
        type: array
        items:
          description: The list of private subnet ids where for the EKS cluster. These
            subnets will be tagged for Kubernetes purposes.
          type: string
      publicSubnetIds:
        description: The list of public subnet ids where for the EKS cluster. These
          subnets will be tagged for Kubernetes purposes.
        type: array
        items:
          description: The list of public subnet ids where for the EKS cluster. These
            subnets will be tagged for Kubernetes purposes.
          type: string
      version:
        description: Desired Kubernetes version for control plane. Defaults to '1.23'.
        type: string
      api:
        description: Configure the Kubernetes cluster API.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterApi"
      nodeGroups:
        description: The NodeGroups to be assigned to this cluster.
        type: array
        items:
          description: The NodeGroups to be assigned to this cluster.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNodeGroup"
      oidcProviders:
        description: The OIDC Providers configuration.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterOidcProviders"
      addons:
        description: The addons installed in the cluster.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:Addons"
      networking:
        description: Configure the cluster networking.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNetworking"
      logging:
        description: Configure the cluster observability for logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      metrics:
        description: Configure the cluster observability for metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      authentication:
        description: Configure authentication integrated with AWS IAM.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAuthentication"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterAuthentication:
    properties:
      accounts:
        description: The list of AWS Accounts that can authenticate with the API Server.
        type: array
        items:
          description: The list of AWS Accounts that can authenticate with the API Server.
          type: string
      clusterAdmins:
        description: The list of AWS IAM Users names to be configured as cluster-admin.
        type: array
        items:
          description: The list of AWS IAM Users names to be configured as cluster-admin.
          type: string
      roles:
        description: The list of AWS IAM Roles that can authenticate with the API server.
        type: array
        items:
          description: The list of AWS IAM Roles that can authenticate with the API server.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorRole"
      users:
        description: The list of AWS IAM Users that can authenticate with the API server.
        type: array
        items:
          description: The list of AWS IAM Users that can authenticate with the API server.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorUser"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterNetworking:
    properties:
      admin:
        description: Configure the access to admin applications.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNetworkingIngress"
      default:
        description: Configure the access to applications.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNetworkingIngress"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterNetworkingIngress:
    properties:
      public:
        description: Use a public Load Balancer to expose the IngressController.
        type: boolean
      domain:
        description: The domain used to expose the IngressController.
        type: string
      whitelist:
        description: Set a whitelist to access the IngressController.
        type: array
        items:
          description: Set a whitelist to access the IngressController.
          type: string
      enableTlsTermination:
        description: Enable TLS termination in Load Balancer.
        type: boolean
    type: object
    required:
      - domain
  cloud-toolkit-aws:kubernetes:Addons:
    properties:
      enabled:
        description: Enable the ClusterAddons.
        type: boolean
    type: object
    required:
      - enabled
  cloud-toolkit-aws:kubernetes:ClusterApi:
    properties:
      public:
        description: Configure the public endpoint for the Kubernetes API.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterPublicApi"
      private:
        description: Configure the private endpoint for the Kubernetes API.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterPrivateApi"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterPublicApi:
    properties:
      enabled:
        description: Enable the public endpoint for Kubernetes API.
        type: boolean
      whitelist:
        description: The list of CIDR that will be allowed to reach the public endpoint
          for Kubernetes API.
        type: array
        items:
          description: The list of CIDR that will be allowed to reach the public endpoint
            for Kubernetes API.
          type: string
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterPrivateApi:
    properties:
      enabled:
        description: Enable the private endpoint for Kubernetes API.
        type: boolean
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ClusterNodeGroup:
    properties:
      name:
        description: The Node Group name.
        type: string
      subnetsType:
        description: The subnets type to be used to deploy the Node Groups.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterSubnetsType"
      instanceType:
        description: The EC2 Instance Type to be used to create the Nodes.
        type: string
      minCount:
        description: The minimum number of nodes running in the node group. Defaults to 1.
        type: number
      maxCount:
        description: The maxium number of nodes running in the node group. Defaults to 2.
        type: number
      maxUnavailable:
        description: The maximum number of nodes unavailable at once during a version
          update. Defaults to 1.
        type: number
    type: object
    required:
      - name
      - minCount
      - maxCount
      - maxUnavailable
  cloud-toolkit-aws:kubernetes:ClusterOidcProviders:
    properties:
      enableDefaultProvider:
        description: Enable the default OIDC Provider that is used in the cluster to let
          Service Accounts to authenticate against AWS with a given IAM Role.
        type: boolean
    type: object
    required:
      - enableDefaultProvider
  cloud-toolkit-aws:kubernetes:ClusterAutoscaler:
    properties:
      clusterName:
        description: The Cluster name.
        type: string
    type: object
    required:
      - clusterName
  cloud-toolkit-aws:kubernetes:Dashboard:
    properties:
      hostname:
        description: The hostname associated with the dashboard.
        type: string
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:AwsEbsCsiDriver:
    properties: {}
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:ExternalDns:
    properties:
      zoneArns:
        description: The list of DNS Zone arn to be used by ExternalDns.
        type: array
        items:
          description: The list of DNS Zone arn to be used by ExternalDns.
          type: string
    type: object
    required:
      - zoneArns
  cloud-toolkit-aws:kubernetes:FluentbitLoggingItem:
    properties:
      dataRetention:
        description: Data retention expressed in days.
        type: number
      enabled:
        description: Enable logging.
        type: boolean
    type: object
    required:
      - enabled
  cloud-toolkit-aws:kubernetes:FluentbitLogging:
    properties:
      applications:
        description: Configure applications logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLoggingItem"
      dataplane:
        description: Configure data plane logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLoggingItem"
      host:
        description: Configure host logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLoggingItem"
    type: object
    required: []
  cloud-toolkit-aws:kubernetes:Fluentbit:
    properties:
      logging:
        description: Configure logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      clusterName:
        description: The cluster name.
        type: string
      awsRegion:
        description: The AWS Region.
        type: string
    type: object
    required:
      - clusterName
      - awsRegion
  cloud-toolkit-aws:kubernetes:IamAuthenticator:
    properties:
      accounts:
        description: List of AWS Accounts allowed to authenticate in the cluster.
        type: array
        items:
          description: List of AWS Accounts allowed to authenticate in the cluster.
          type: string
      clusterArn:
        description: The EKS Cluster ARN.
        type: string
      kubeconfig:
        description: The Kubeconfig to access to the cluster.
        type: string
      roles:
        description: The list of AWS IAM Roles to generate the aws-auth ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Roles to generate the aws-auth ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorRole"
      nodeGroupRoles:
        description: The list of AWS IAM Roles for NodeGroups to generate the aws-auth
          ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Roles for NodeGroups to generate the aws-auth
            ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorRole"
      users:
        description: The list of AWS IAM Users to generate the aws-auth ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Users to generate the aws-auth ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorUser"
      clusterAdmins:
        description: The list of AWS IAM Users names to be configured as cluster-admin.
        type: array
        items:
          description: The list of AWS IAM Users names to be configured as cluster-admin.
          type: string
    type: object
    required:
      - clusterArn
      - kubeconfig
  cloud-toolkit-aws:kubernetes:IamAuthenticatorRole:
    properties:
      rolearn:
        description: The AWS IAM Role arn.
        type: string
      groups:
        description: The list of Kubernetes groups to be associated with the AWS IAM Role.
        type: array
        items:
          description: The list of Kubernetes groups to be associated with the AWS IAM Role.
          type: string
      username:
        description: The Kubernetes username to be associated with the AWS IAM Role.
        type: string
    type: object
    required:
      - rolearn
      - username
  cloud-toolkit-aws:kubernetes:IamAuthenticatorUser:
    properties:
      userarn:
        description: The AWS IAM User arn.
        type: string
      groups:
        description: The list of Kubernetes groups to be associated with the AWS IAM User.
        type: array
        items:
          description: The list of Kubernetes groups to be associated with the AWS IAM User.
          type: string
      username:
        description: The Kubernetes username to be associated with the AWS IAM User.
        type: string
    type: object
    required:
      - userarn
      - username
  cloud-toolkit-aws:kubernetes:IngressNginx:
    properties:
      tls:
        description: The domain associated to the IngressController.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:IngressNginxTls"
      className:
        description: The Ingress class name.
        type: string
      whitelist:
        description: The whitelist of CIDR to access to the Ingress Controller.
        type: array
        items:
          description: The whitelist of CIDR to access to the Ingress Controller.
          type: string
      public:
        description: Expose the IngressController with a public Load Balancer.
        type: boolean
      default:
        description: Set this IngressController with the defaul IngressClass.
        type: boolean
    type: object
    required:
      - className
  cloud-toolkit-aws:kubernetes:IngressNginxTls:
    properties:
      enabled:
        description: Enable the signed Certificate.
        type: boolean
      domain:
        description: The domain to be used to create a signed Certificate.
        type: string
      zoneId:
        description: The Zone id.
        type: string
    type: object
    required:
      - domain
      - zoneId
  cloud-toolkit-aws:kubernetes:Irsa:
    properties:
      identityProvidersArn:
        description: The OIDC Identity Provider arn used by the IRSA.
        type: array
        items:
          description: The OIDC Identity Provider arn used by the IRSA.
          type: string
      issuerUrl:
        description: The OIDC Identity Provider url used by the IRSA.
        type: string
      k8sProvider:
        description: Kubernetes provider used by Pulumi.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      serviceAccountName:
        description: The Service Account name used in Kubernetes.
        type: string
      policies:
        description: The list of Policies to be associated to the Irsa.
        type: array
        items:
          description: The list of Policies to be associated to the Irsa.
          type: string
    type: object
    required:
      - identityProvidersArn
      - issuerUrl
      - k8sProvider
      - namespace
      - serviceAccountName
      - policies
  cloud-toolkit-aws:kubernetes:NodeGroup:
    properties:
      name:
        description: The name that identies the resource.
        type: string
      clusterVersion:
        description: The Kubernetes cluster version.
        type: string
      clusterEndpoint:
        description: The Kubernetes cluster endpoint.
        type: string
      clusterCA:
        description: The CA used by the Kubernetes cluster.
        type: string
      clusterName:
        description: The Kubernetes cluster name.
        type: string
      subnetIds:
        description: The list of subnets ids where the nodes will be deployed.
        type: array
        items:
          description: The list of subnets ids where the nodes will be deployed.
          type: string
      instanceType:
        description: The aws instance type to use for the nodes. Defaults to "t3.medium".
        type: string
      minCount:
        description: The minimum number of nodes running in the node group. Defaults to 1.
        type: number
      maxCount:
        description: The maxium number of nodes running in the node group. Defaults to 2.
        type: number
      maxUnavailable:
        description: The maximum number of nodes unavailable at once during a version
          update. Defaults to 1.
        type: number
    type: object
    required:
      - name
      - clusterVersion
      - clusterEndpoint
      - clusterCA
      - clusterName
      - subnetIds
  cloud-toolkit-aws:kubernetes:Project:
    properties:
      name:
        description: The Project name.
        type: string
      resources:
        description: The cluster resources to be assigned to the project.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ProjectResources"
      kubeconfig:
        description: The kubeconfig to access the kubernetes cluster.
        type: string
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      adminUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'admin' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'admin' role.
          type: string
      editUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'edit' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'edit' role.
          type: string
      viewUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'view' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'view' role.
          type: string
    type: object
    required:
      - name
      - kubeconfig
      - namespace
  cloud-toolkit-aws:kubernetes:ProjectResources:
    properties:
      cpu:
        description: Amount of reserved CPU.
        type: string
      memory:
        description: Amount of reserved Memory.
        type: string
      limitCpu:
        description: Amount of CPU limit.
        type: string
      limitMemory:
        description: Amount of Memory limit.
        type: string
    type: object
    required: []
  cloud-toolkit-aws:landingzone:AccountIam:
    properties:
      alias:
        description: The alias to be used for IAM.
        type: string
      passwordPolicy:
        description: The IAM password policy configuration.
        $ref: "#/types/cloud-toolkit-aws:landingzone:AccountPasswordPolicy"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:AccountPasswordPolicy:
    properties:
      enabled:
        description: Enable the creation of IAM Password Policy. Defaults to 'true'.
        type: boolean
      rules:
        description: The rules to be applied to the IAM Password Policy
        $ref: "#/types/cloud-toolkit-aws:landingzone:AccountPasswordPolicyRules"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:AccountPasswordPolicyRules:
    properties:
      allowUsersToChangePassword:
        description: Whether to allow users to change their own password. Defaults to
          'true'.
        type: boolean
      hardExpiry:
        description: Whether users are prevented from setting a new password after their
          password has expired (i.e., require administrator reset). Defaults to
          'true'.
        type: boolean
      maxPasswordAge:
        description: The number of days that an user password is valid. Defaults to '90'.
        type: number
      minimumPasswordLength:
        description: Minimum length to require for user passwords. Defaults to '14'.
        type: number
      passwordReusePrevention:
        description: The number of previous passwords that users are prevented from
          reusing. Defaults to '0'.
        type: number
      requireLowercaseCharacters:
        description: Whether to require lowercase characters for user passwords.
          Defaults to 'true'.
        type: boolean
      requireNumbers:
        description: Whether to require numbers for user passwords. Defaults to 'true'.
        type: boolean
      requireSymbols:
        description: Whether to require symbols for user passwords. Defaults to 'true'.
        type: boolean
      requireUppercaseCharacters:
        description: Whether to require uppercase characters for user passwords.
          Defaults to 'true'.
        type: boolean
    type: object
    required: []
  cloud-toolkit-aws:landingzone:AuditLogging:
    properties:
      retentionDays:
        description: The data retention in days. Defaults to '7'.
        type: number
      region:
        description: The region to be used to store the data.
        type: string
      bucketProvider:
        description: The AWS provider to used to create the Bucket.
        $ref: /aws/v5.10.0/schema.json#/provider
      cloudwatch:
        description: Store the audit logs in CloudWatch to enable easy searching.
        $ref: "#/types/cloud-toolkit-aws:landingzone:AuditLoggingCloudWatch"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:AuditLoggingCloudWatch:
    properties:
      enabled:
        description: Enable storing audit logs in CloudWatch. Defaults to 'false'.
        type: boolean
      retentionDays:
        description: The data retention in days. Defaults to '1'.
        type: number
    type: object
    required:
      - enabled
  cloud-toolkit-aws:landingzone:IamTrustedAccount:
    properties:
      roles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustedAccountRole"
      trustingAccountId:
        description: ""
        type: string
      trustingAccountName:
        description: ""
        type: string
    type: object
    required:
      - roles
      - trustingAccountId
      - trustingAccountName
  cloud-toolkit-aws:landingzone:IamTrustedAccountRole:
    properties:
      name:
        description: ""
        type: string
    type: object
    required:
      - name
  cloud-toolkit-aws:landingzone:IamTrustedAccountRoleGroupMapping:
    properties:
      roleName:
        description: ""
        type: string
      group:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fgroup:Group
    type: object
    required:
      - roleName
      - group
  cloud-toolkit-aws:landingzone:IamTrustedAccountRoleGroupPolicyMapping:
    properties:
      roleName:
        description: ""
        type: string
      groupPolicy:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fgroupPolicy:GroupPolicy
    type: object
    required:
      - roleName
      - groupPolicy
  cloud-toolkit-aws:landingzone:IamTrustingAccount:
    properties:
      delegatedAccountIds:
        description: ""
        type: array
        items:
          description: ""
          type: string
      delegatedRoles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustingAccountRole"
    type: object
    required:
      - delegatedAccountIds
  cloud-toolkit-aws:landingzone:IamTrustingAccountRole:
    properties:
      name:
        description: ""
        type: string
      policyNames:
        description: ""
        type: array
        items:
          description: ""
          type: string
    type: object
    required:
      - name
      - policyNames
  cloud-toolkit-aws:landingzone:IamTrustingAccountRoleMapping:
    properties:
      roleName:
        description: ""
        type: string
      role:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
    type: object
    required:
      - roleName
      - role
  cloud-toolkit-aws:landingzone:IamTrustingAccountRolePolicyAttachmentMapping:
    properties:
      roleName:
        description: ""
        type: string
      rolePolicyAttachment:
        description: ""
        type: array
        items:
          description: ""
          $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
    type: object
    required:
      - roleName
      - rolePolicyAttachment
  cloud-toolkit-aws:landingzone:LandingZone:
    properties:
      organization:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:Organization"
      audit:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneAudit"
      iam:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneIam"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:LandingZoneAudit:
    properties:
      enabled:
        description: Enable audit logging. Defaults to 'true'.
        type: boolean
      accountName:
        description: Select the Organization account to be used to store the audit logs.
        type: string
      retentionDays:
        description: The data retention in days. Defaults to '7'.
        type: number
      cloudwatch:
        description: Store the audit logs in CloudWatch to enable easy searching.
        $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneAuditCloudWatch"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:LandingZoneAuditCloudWatch:
    properties:
      enabled:
        description: Enable storing audit logs in CloudWatch. Defaults to 'false'.
        type: boolean
      retentionDays:
        description: The data retention in days. Defaults to '1'.
        type: number
    type: object
    required:
      - enabled
  cloud-toolkit-aws:landingzone:LandingZoneIam:
    properties:
      accountName:
        description: ""
        type: string
      roles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneIamRole"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:LandingZoneIamRole:
    properties:
      name:
        description: ""
        type: string
      policyNames:
        description: ""
        type: array
        items:
          description: ""
          type: string
    type: object
    required:
      - name
      - policyNames
  cloud-toolkit-aws:landingzone:Organization:
    properties:
      organizationId:
        description: The organization ID to import the Organization in the stack. If not
          set a new AWS Organization will be created. Defaults to undefined.
        type: string
      policies:
        description: The Organization policies to be applied.
        $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationPolicies"
      accounts:
        description: The list of AWS Account to be configured in the Organization.
        type: array
        items:
          description: The list of AWS Account to be configured in the Organization.
          $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationAccount"
      services:
        description: The list of AWS Service Access Principals enabled in the organization.
        type: array
        items:
          description: The list of AWS Service Access Principals enabled in the
            organization.
          type: string
      enabledPolicies:
        description: The list of enabled Organizations Policies in the organization.
        type: array
        items:
          description: The list of enabled Organizations Policies in the organization.
          type: string
      featureSet:
        description: The FeatureSet in the Organization..
        type: string
    type: object
    required: []
  cloud-toolkit-aws:landingzone:OrganizationPolicies:
    properties:
      denyLeaveOrganization:
        description: Deny IAM Account to leave the organization. Enabled by default.
        $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationPolicy"
    type: object
    required: []
  cloud-toolkit-aws:landingzone:OrganizationPolicy:
    properties:
      enabled:
        description: Enable the policy/
        type: boolean
      policyId:
        description: Import the policy with the given id
        type: string
    type: object
    required: []
  cloud-toolkit-aws:landingzone:OrganizationAccount:
    properties:
      name:
        description: The name of the IAM Account.
        type: string
      email:
        description: The email associated to the IAM Account.
        type: string
      adminRoleName:
        description: Admin role for the IAM Account.
        type: string
      ou:
        description: ""
        type: string
      accountId:
        description: The AWS Account ID to be used to import the Account in the
          Organization. If not set, a new AWS Account will be created.
        type: string
      parentId:
        description: The parentId of the imported account.
        type: string
      iam:
        description: The configuration for IAM.
        $ref: "#/types/cloud-toolkit-aws:landingzone:AccountIam"
    type: object
    required:
      - name
      - email
      - iam
  cloud-toolkit-aws:landingzone:OrganizationalUnitMapping:
    properties:
      accountName:
        description: ""
        type: string
      organizationalUnit:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:organizations%2forganizationalUnit:OrganizationalUnit
    type: object
    required:
      - accountName
      - organizationalUnit
  cloud-toolkit-aws:landingzone:OrganizationAccountProviderMapping:
    properties:
      accountName:
        description: ""
        type: string
      provider:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/provider
    type: object
    required:
      - accountName
      - provider
  cloud-toolkit-aws:landingzone:AccountMapping:
    properties:
      accountName:
        description: ""
        type: string
      account:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:organizations%2faccount:Account
    type: object
    required:
      - accountName
      - account
  cloud-toolkit-aws:serverless:DeadLetterQueueType:
    properties:
      enable:
        description: Enables the feature.
        type: boolean
      type:
        description: Dead Letter Queue type attached to the component to create.
        $ref: "#/types/cloud-toolkit-aws:serverless:DeadLetterQueueTypes"
      existingDeadLetterQueueArn:
        description: Placing a Queue ARN will set said already existing Queue as a Dead
          Letter Queue for the new one.
        type: string
      messageRetentionSeconds:
        description: The amount of time that a message will be stored in the Dead Letter
          Queue without being deleted. Minimum is 60 seconds (1 minutes) and
          Maximum 1,209,600 (14 days) seconds. By default a message is retained
          4 days.
        type: number
    type: object
    required:
      - enable
      - type
  cloud-toolkit-aws:serverless:Queue:
    properties:
      isFifo:
        description: Set to true to create the Queue as FiFo. False for a Standard Queue.
        type: boolean
      DeadLetterQueueTypeArgs:
        description: Dead Letter Queue attached to the component to create.
        $ref: "#/types/cloud-toolkit-aws:serverless:DeadLetterQueueType"
      maxMessageSize:
        description: The limit for a Queue message size in bytes. Minimum is 1 byte (1
          character) and Maximum 262,144 bytes (256 KiB). By default a message
          can be 256 KiB large.
        type: number
      messageRetentionSeconds:
        description: The amount of time that a message will be stored in the Queue
          without being deleted. Minimum is 60 seconds (1 minutes) and Maximum
          1,209,600 (14 days) seconds. By default a message is retained 4 days.
        type: number
      policy:
        description: Custom policy for the Queue.
        type: string
    type: object
    required: []
  cloud-toolkit-aws:serverless:StaticWeb:
    properties:
      domain:
        description: Set to true to add an alias to wwww.<domain>
        type: string
      includeWWW:
        description: Set to true to add an alias to wwww.<domain>
        type: boolean
      configureDNS:
        description: Set to true to configure DNS
        type: boolean
      cache:
        description: Cloud Front distribution cache
        $ref: "#/types/cloud-toolkit-aws:serverless:CdnCache"
      dns:
        description: DNS configuration
        $ref: "#/types/cloud-toolkit-aws:serverless:CdnDns"
      priceClass:
        description: Cloud Front distribution priceClass
        type: string
    type: object
    required: []
  cloud-toolkit-aws:serverless:CdnCache:
    properties:
      ttl:
        description: Cloud Front distribution cache time to live
        type: number
    type: object
    required:
      - ttl
  cloud-toolkit-aws:serverless:CdnDns:
    properties:
      ttl:
        description: DNS time to live
        type: number
    type: object
    required:
      - ttl
  cloud-toolkit-aws:serverless:DNSRecords:
    properties:
      domainRecord:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:route53%2frecord:Record
      wwwDomainRecord:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:route53%2frecord:Record
    type: object
    required:
      - domainRecord
  cloud-toolkit-aws:storage:Bucket:
    properties:
      bucketName:
        description: Configures bucket name in AWS.
        type: string
      bucketNamePrefix:
        description: Configures a random bucket name in AWS but specifying a prefix name.
        type: string
      public:
        description: Set to true to allow policies that may provide access to anyone.
        type: boolean
      versioning:
        description: Set a certain versioning mode for bucket objects
        $ref: "#/types/cloud-toolkit-aws:storage:BucketVersioningState"
      encryption:
        description: Configures encryption parameters for the bucket
        $ref: "#/types/cloud-toolkit-aws:storage:BucketEncryption"
      replication:
        description: Configures replication parameters for the bucket
        $ref: "#/types/cloud-toolkit-aws:storage:BucketReplication"
      website:
        description: Configures a static webpage using bucket files
        $ref: "#/types/cloud-toolkit-aws:storage:BucketWebsite"
    type: object
    required: []
  cloud-toolkit-aws:storage:BucketEncryption:
    properties:
      enabled:
        description: ""
        type: boolean
      customKeyId:
        description: ""
        type: string
    type: object
    required:
      - enabled
  cloud-toolkit-aws:storage:BucketReplication:
    properties:
      bucketArn:
        description: ""
        type: string
    type: object
    required:
      - bucketArn
  cloud-toolkit-aws:storage:BucketWebsite:
    properties:
      errorDocument:
        description: ""
        type: string
      indexDocument:
        description: ""
        type: string
    type: object
    required:
      - errorDocument
      - indexDocument
  cloud-toolkit-aws:commons:Certificate:
    properties:
      domain:
        description: ""
        type: string
      additionalDomains:
        description: ""
        type: array
        items:
          description: ""
          type: string
      zoneId:
        description: ""
        type: string
    type: object
    required:
      - domain
      - zoneId
resources:
  cloud-toolkit-aws:commons:Certificate:
    description: Certificate is a component that manages an ACM Certificate with the
      DNS validation.
    properties:
      certificate:
        description: The ACM Certificates used for TLS encryption.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:acm%2fcertificate:Certificate
      dnsRecords:
        description: The DNS Records.
        type: array
        items:
          description: The DNS Records.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:route53%2frecord:Record
      provider:
        description: The Pulumi Provider to create the Certificate.
        $ref: /aws/v5.10.0/schema.json#/provider
    required:
      - certificate
      - dnsRecords
      - provider
    inputProperties:
      domain:
        description: ""
        type: string
      additionalDomains:
        description: ""
        type: array
        items:
          description: ""
          type: string
      zoneId:
        description: ""
        type: string
    requiredInputs:
      - domain
      - zoneId
    isComponent: true
    type: object
  cloud-toolkit-aws:databases:AuroraMysql:
    description: ""
    properties:
      cluster:
        description: The RDS Cluster
        $ref: /aws/v5.10.0/schema.json#/resources/aws:rds%2fcluster:Cluster
      password:
        description: Random password generated for admin user
        $ref: /random/v4.8.2/schema.json#/resources/random:index/randomPassword:RandomPassword
      secret:
        description: Component that protects and stores admin password in AWS
        $ref: /aws/v5.10.0/schema.json#/resources/aws:secretsmanager%2fsecret:Secret
      secretVersion:
        description: Component that protects and stores admin password in AWS
        $ref: /aws/v5.10.0/schema.json#/resources/aws:secretsmanager%2fsecretVersion:SecretVersion
      instances:
        description: Cluster instances associated to the cluster
        type: array
        items:
          description: Cluster instances associated to the cluster
          $ref: /aws/v5.10.0/schema.json#/resources/aws:rds%2fclusterInstance:ClusterInstance
      alarms:
        description: CloudWatch alarms that monitor the RDS Cluter
        type: array
        items:
          description: CloudWatch alarms that monitor the RDS Cluter
          $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2fmetricAlarm:MetricAlarm
      topic:
        description: SNS Topic used for CloudWatch alerts
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopic:Topic
      topicSubscriptions:
        description: TopicSubscriptions to alerts by email
        type: array
        items:
          description: TopicSubscriptions to alerts by email
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopicSubscription:TopicSubscription
      subnetGroup:
        description: The SubnetGroup that reprents the list of subnets where the cluster
          is deployed
        $ref: /aws/v5.10.0/schema.json#/resources/aws:rds%2fsubnetGroup:SubnetGroup
      securityGroup:
        description: The SecurityGroup associated to the cluster to manage traffic
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2fsecurityGroup:SecurityGroup
      securityGroupRule:
        description: The rules associated SecurityGroup to allow incoming traffic
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2fsecurityGroupRule:SecurityGroupRule
    required:
      - cluster
      - password
      - secret
      - secretVersion
      - instances
      - alarms
      - topicSubscriptions
      - securityGroup
      - securityGroupRule
    inputProperties:
      version:
        description: Version for database
        type: string
      database:
        description: Configuration parameters for the database
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlDatabase"
      instanceType:
        description: The instance type for the cluster
        type: string
      instancesCount:
        description: The number of instances to be created for Aurora cluster
        type: number
      logging:
        description: Logging configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlLogging"
      monitoring:
        description: Monitoring configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlMonitoring"
      networking:
        description: Networking configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlNetworking"
      backup:
        description: Backup configuration parameters for Aurora cluster
        $ref: "#/types/cloud-toolkit-aws:databases:AuroraMysqlBackup"
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:databases:Mysql:
    description: Cloud Toolkit component for Mysql instances.
    properties:
      instancePassword:
        description: Random password generated for admin user
        $ref: /random/v4.8.2/schema.json#/resources/random:index/randomPassword:RandomPassword
      instance:
        description: Underlying database instance for this component
        $ref: /aws/v5.10.0/schema.json#/resources/aws:rds%2finstance:Instance
      securityGroup:
        description: Security Group attached to this database instance
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2fsecurityGroup:SecurityGroup
      ingressSecurityGroupRules:
        description: Security rules to allow connections to this databse instance
        type: array
        items:
          description: Security rules to allow connections to this databse instance
          $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2fsecurityGroupRule:SecurityGroupRule
      subnetGroup:
        description: Set of subnets in which database instance will be deployed
        $ref: /aws/v5.10.0/schema.json#/resources/aws:rds%2fsubnetGroup:SubnetGroup
      secret:
        description: Component that protects and stores admin password in AWS
        $ref: /aws/v5.10.0/schema.json#/resources/aws:secretsmanager%2fsecret:Secret
      secretVersion:
        description: |-
          
          Component that updates secrets in AWS
        $ref: /aws/v5.10.0/schema.json#/resources/aws:secretsmanager%2fsecretVersion:SecretVersion
    required:
      - instancePassword
      - instance
      - securityGroup
      - ingressSecurityGroupRules
      - secret
      - secretVersion
    inputProperties:
      instance:
        description: Instance type to run the database instance
        type: string
      version:
        description: Version for database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlVersion"
      database:
        description: Configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlDatabase"
      storage:
        description: Storage configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlStorage"
      networking:
        description: Network configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlNetworking"
      backup:
        description: Backup configuration parameters for the database instance
        $ref: "#/types/cloud-toolkit-aws:databases:MysqlBackup"
    requiredInputs:
      - version
      - database
    isComponent: true
    type: object
  cloud-toolkit-aws:email:EmailSender:
    description: >-
      Cloud Toolkit component for an Email Sender. Creates a Simple Email
      Service Email or Domain Identity alongside Simple Notification Service
      Topics and Simple Queue Service Queues to manage bounce, complaints or
      delivered messages.

      In the case of building a Domain Identity, if it is registered in the Route 53 on the AWS account that is applying the infrastructure changes, Cloud Toolkit can verify it automatically by creating the DKIM DNS Records.
    properties:
      resourceGroups:
        description: Resource Groups that contain the underlying components such as
          Topics or Queues that belong to the Email Sender.
        type: array
        items:
          description: Resource Groups that contain the underlying components such as
            Topics or Queues that belong to the Email Sender.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:resourcegroups%2fgroup:Group
      domainIdentity:
        description: Domain Identity component. Left blank if an Email Identity was used
          instead.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2fdomainIdentity:DomainIdentity
      emailIdentity:
        description: Email Identity component. Left blank if a Domain Identity was used
          instead.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2femailIdentity:EmailIdentity
      address:
        description: Address of the Identity, regardless if it is a Domain or an Email.
        type: string
      domainDKIM:
        description: Domain DKIM. Only applies for Domain Identities.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2fdomainDkim:DomainDkim
      dnsDkimRecords:
        description: DNS DKIM Records. Only applies for Domain Identities.
        type: array
        items:
          description: DNS DKIM Records. Only applies for Domain Identities.
          $ref: "#/types/cloud-toolkit-aws:email:DnsDkimRecord"
      dnsZoneId:
        description: DNS zone identifier in Route 53 for the Domain. Only applies for
          Domain Identities that are registered using Route 53.
        type: string
      dnsRecords:
        description: DNS records stored in the Domain registration in Route 53. Only
          applies for Domain Identities that are registered using Route 53.
        type: array
        items:
          description: DNS records stored in the Domain registration in Route 53. Only
            applies for Domain Identities that are registered using Route 53.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:route53%2frecord:Record
      bounceTopic:
        description: SNS Topic for bounced emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopic:Topic
      bounceIdentityNotificationTopic:
        description: Identity Notification Topic for bounced emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2fidentityNotificationTopic:IdentityNotificationTopic
      bounceQueues:
        description: SQS Queues subscribed to the SNS Topic that receives bounced
          emails. These Queues were created automatically by the Email Sender
          component.
        type: array
        items:
          description: SQS Queues subscribed to the SNS Topic that receives bounced
            emails. These Queues were created automatically by the Email Sender
            component.
          $ref: "#/resources/cloud-toolkit-aws:serverless:Queue"
      bounceAdditionalQueues:
        description: Additional SQS Queues subscribed to the SNS Topic that receives
          bounced emails. These Queues were created outside the Email Sender
          component.
        type: array
        items:
          description: Additional SQS Queues subscribed to the SNS Topic that receives
            bounced emails. These Queues were created outside the Email Sender
            component.
          $ref: "#/types/cloud-toolkit-aws:email:AdditionalQueue"
      bounceAdditionalQueuesPolicies:
        description: Queue Policies attached to the externally provided Bounce SQS Queues.
        type: array
        items:
          description: Queue Policies attached to the externally provided Bounce SQS Queues.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sqs%2fqueuePolicy:QueuePolicy
      bounceTopicSubscriptions:
        description: SNS subscriptions of the SQS Queues to the Bounce SNS Topic.
        type: array
        items:
          description: SNS subscriptions of the SQS Queues to the Bounce SNS Topic.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopicSubscription:TopicSubscription
      complaintTopic:
        description: SNS Topic for complained emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopic:Topic
      complaintIdentityNotificationTopic:
        description: Identity Notification Topic for complained emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2fidentityNotificationTopic:IdentityNotificationTopic
      complaintQueues:
        description: SQS Queues subscribed to the SNS Topic that receives complained
          emails. These Queues were created automatically by the Email Sender
          component.
        type: array
        items:
          description: SQS Queues subscribed to the SNS Topic that receives complained
            emails. These Queues were created automatically by the Email Sender
            component.
          $ref: "#/resources/cloud-toolkit-aws:serverless:Queue"
      complaintAdditionalQueues:
        description: Additional SQS Queues subscribed to the SNS Topic that receives
          complained emails. These Queues were created outside the Email Sender
          component.
        type: array
        items:
          description: Additional SQS Queues subscribed to the SNS Topic that receives
            complained emails. These Queues were created outside the Email
            Sender component.
          $ref: "#/types/cloud-toolkit-aws:email:AdditionalQueue"
      complaintAdditionalQueuesPolicies:
        description: Queue Policies attached to the externally provided Complaint SQS
          Queues.
        type: array
        items:
          description: Queue Policies attached to the externally provided Complaint SQS
            Queues.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sqs%2fqueuePolicy:QueuePolicy
      complaintTopicSubscriptions:
        description: SNS subscriptions of the SQS Queues to the Complaint SNS Topic.
        type: array
        items:
          description: SNS subscriptions of the SQS Queues to the Complaint SNS Topic.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopicSubscription:TopicSubscription
      deliveryTopic:
        description: SNS Topic for delivered emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopic:Topic
      deliveryIdentityNotificationTopic:
        description: Identity Notification Topic for delivered emails.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ses%2fidentityNotificationTopic:IdentityNotificationTopic
      deliveryQueues:
        description: SQS Queues subscribed to the SNS Topic that receives delivered
          emails. These Queues were created automatically by the Email Sender
          component.
        type: array
        items:
          description: SQS Queues subscribed to the SNS Topic that receives delivered
            emails. These Queues were created automatically by the Email Sender
            component.
          $ref: "#/resources/cloud-toolkit-aws:serverless:Queue"
      deliveryAdditionalQueues:
        description: Additional SQS Queues subscribed to the SNS Topic that receives
          delivered emails. These Queues were created outside the Email Sender
          component.
        type: array
        items:
          description: Additional SQS Queues subscribed to the SNS Topic that receives
            delivered emails. These Queues were created outside the Email Sender
            component.
          $ref: "#/types/cloud-toolkit-aws:email:AdditionalQueue"
      deliveryAdditionalQueuesPolicies:
        description: Queue Policies attached to the externally provided Delivery SQS Queues.
        type: array
        items:
          description: Queue Policies attached to the externally provided Delivery SQS
            Queues.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sqs%2fqueuePolicy:QueuePolicy
      deliveryTopicSubscriptions:
        description: SNS subscriptions of the SQS Queues to the Delivery SNS Topic.
        type: array
        items:
          description: SNS subscriptions of the SQS Queues to the Delivery SNS Topic.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:sns%2ftopicSubscription:TopicSubscription
      senderPolicy:
        description: Policy that when attached to an user, allows them to send messages
          using the Email Sender Identity.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
      notificationsPolicy:
        description: Policy that when attached to an user, allows them to read the
          notification messages in the Queues.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
    required:
      - resourceGroups
      - address
      - dnsDkimRecords
      - dnsRecords
      - bounceQueues
      - bounceAdditionalQueues
      - bounceAdditionalQueuesPolicies
      - bounceTopicSubscriptions
      - complaintQueues
      - complaintAdditionalQueues
      - complaintAdditionalQueuesPolicies
      - complaintTopicSubscriptions
      - deliveryQueues
      - deliveryAdditionalQueues
      - deliveryAdditionalQueuesPolicies
      - deliveryTopicSubscriptions
      - senderPolicy
    inputProperties:
      identity:
        description: >-
          Address of the Domain or Email used to send the emails through
          Email Sender.

          If an Email address is provided, Email Sender will set a Simple Email Service Email Identity. Verification will need to be manual.

          Else, if a Domain address is configured, Email Sender will create a Simple Email Service Domain Identity. 

          By default, it will attempt to verify the Domain by looking the Route 53 Domain Registry in the AWS account that is applying the infrastructure changes.

          If the Domain is registered elsewhere, verification needs to be manual.
        type: string
      configureDNS:
        description: >-
          In the case of a Domain Identity, enables automatic verification by
          creating DKIM DNS Records in the domain registration on Route 53.

          If the domain is not registered in the Route 53 on the same AWS account that is applying the infrastructure changes, the process will fail unless this flag is set to False.
        type: boolean
      bounce:
        description: Arguments to manage incoming Bounce notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
      complaint:
        description: Arguments to manage incoming Complaint notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
      delivery:
        description: Arguments to manage incoming Delivery notifications.
        $ref: "#/types/cloud-toolkit-aws:email:NotificationType"
    requiredInputs:
      - identity
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:AdotApplication:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      logGroupMetrics:
        description: ""
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2flogGroup:LogGroup
      irsa:
        description: ""
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
    required:
      - application
    inputProperties:
      metrics:
        description: Configure metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      clusterName:
        description: The cluster name.
        type: string
      awsRegion:
        description: The AWS Region.
        type: string
    requiredInputs:
      - clusterName
      - awsRegion
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:AdotOperator:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
    required:
      - application
    inputProperties: {}
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ApplicationAddon:
    description: IRSAAddon is a component that deploy an HelmChart as ArgoCD Application.
    properties: {}
    required: []
    inputProperties:
      k8sProvider:
        description: Kubernetes provider used by Pulumi.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      name:
        description: The name of the instanced component.
        type: string
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      createNamespace:
        description: Create a new Namespace using the given name.
        type: boolean
    requiredInputs:
      - k8sProvider
      - name
      - namespace
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ArgoCD:
    description: ArgoCD is a component that deploy the ArgoCD application in the cluster.
    properties:
      adminPassword:
        description: The inital admin password.
        $ref: /random/v4.8.2/schema.json#/resources/random:index/randomPassword:RandomPassword
      chart:
        description: The Helm Chart used to deploy ArgoCD.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:helm.sh/v3:Release
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
    required:
      - adminPassword
      - chart
      - namespace
    inputProperties:
      hostname:
        description: The hostname to be used to expose ArgoCD with an Ingress.
        type: string
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:AwsLoadBalancerController:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      irsa:
        description: ""
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
    required:
      - application
      - irsa
    inputProperties:
      clusterName:
        description: The Cluster name.
        type: string
    requiredInputs:
      - clusterName
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Calico:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      installation:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      installationCrd:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:yaml:ConfigFile
    required:
      - application
      - installation
      - installationCrd
    inputProperties: {}
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:CertManager:
    description: ""
    properties:
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: The ArgoCD Application to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      irsa:
        description: The IAM roles for service accounts.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
    required:
      - application
      - irsa
    inputProperties:
      zoneArns:
        description: The list of DNS Zone arn to be used by CertManager.
        type: array
        items:
          description: The list of DNS Zone arn to be used by CertManager.
          type: string
    requiredInputs:
      - zoneArns
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Cluster:
    description: Cluster is a component that deploys a production-ready Kubernetes
      cluster. It setups the AWS IAM and netwokring, as well many Kubernetes
      services to run application in production.
    properties:
      subnetTags:
        description: EC2 Tags used for provisioning Load Balancers.
        type: array
        items:
          description: EC2 Tags used for provisioning Load Balancers.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2ftag:Tag
      provisionerRole:
        description: The IAM Role to provision EKS cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      provisionerRolePolicy:
        description: The IAM Role Polity to provision EKS cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicy:RolePolicy
      provisionerProvider:
        description: The Provider to provision EKS cluster.
        $ref: /aws/v5.10.0/schema.json#/provider
      role:
        description: The IAM Role assumed by the EKS Cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      rolePolicyAttachment:
        description: The IAM Role Policy Attachment to assign the IAM Policies to the
          IAM Role.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
      securityGroup:
        description: The Security Group associated to the EKS Cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2fsecurityGroup:SecurityGroup
      cluster:
        description: The EKS Cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:eks%2fcluster:Cluster
      kubeconfig:
        description: The kubeconfig content for this cluster.
        type: string
      provider:
        description: The Kubernetes provider for this cluster.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      nodeGroups:
        description: The Node Groups associated to the cluster.
        type: array
        items:
          description: The Node Groups associated to the cluster.
          $ref: "#/resources/cloud-toolkit-aws:kubernetes:NodeGroup"
      defaultOidcProvider:
        description: The default OIDC Provider.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fopenIdConnectProvider:OpenIdConnectProvider
      cniChart:
        description: The VPC CNI Chart installed in the cluster.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:helm.sh/v3:Release
      clusterAddons:
        description: The VPC CNI Chart installed in the cluster.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:ClusterAddons"
      iamAuthenticator:
        description: The IAM Authenticator to integrate AWS IAM with Kubernetes
          authentication.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:IamAuthenticator"
    required:
      - subnetTags
      - provisionerRole
      - provisionerRolePolicy
      - provisionerProvider
      - role
      - rolePolicyAttachment
      - securityGroup
      - cluster
      - kubeconfig
      - provider
      - nodeGroups
      - cniChart
      - iamAuthenticator
    inputProperties:
      vpcId:
        description: The VPC ID where the cluster will be deployed
        type: string
      privateSubnetIds:
        description: The list of private subnet ids where for the EKS cluster. These
          subnets will be tagged for Kubernetes purposes.
        type: array
        items:
          description: The list of private subnet ids where for the EKS cluster. These
            subnets will be tagged for Kubernetes purposes.
          type: string
      publicSubnetIds:
        description: The list of public subnet ids where for the EKS cluster. These
          subnets will be tagged for Kubernetes purposes.
        type: array
        items:
          description: The list of public subnet ids where for the EKS cluster. These
            subnets will be tagged for Kubernetes purposes.
          type: string
      version:
        description: Desired Kubernetes version for control plane. Defaults to '1.23'.
        type: string
      api:
        description: Configure the Kubernetes cluster API.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterApi"
      nodeGroups:
        description: The NodeGroups to be assigned to this cluster.
        type: array
        items:
          description: The NodeGroups to be assigned to this cluster.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNodeGroup"
      oidcProviders:
        description: The OIDC Providers configuration.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterOidcProviders"
      addons:
        description: The addons installed in the cluster.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:Addons"
      networking:
        description: Configure the cluster networking.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterNetworking"
      logging:
        description: Configure the cluster observability for logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      metrics:
        description: Configure the cluster observability for metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      authentication:
        description: Configure authentication integrated with AWS IAM.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAuthentication"
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ClusterAddons:
    description: ClusterAddons is a component that manages the Lubernetes addons to
      setup a production-ready cluster.
    properties:
      argocd:
        description: The ArgoCD addon.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:ArgoCD"
      certManager:
        description: The CertManager addon.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:CertManager"
      adminIngressNginx:
        description: The IngressNginx addon used for admin access.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:IngressNginx"
      defaultIngressNginx:
        description: The IngressNginx addon used for default access.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:IngressNginx"
      externalDns:
        description: The ExternalDns addon.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:ExternalDns"
      dashboard:
        description: The Kubernetes dashboard addon.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Dashboard"
      calico:
        description: The Calico addon used to manage network policies.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Calico"
      ebsCsiDriver:
        description: The EBS CSI driver that allows to create volumes using the block
          storage service of AWS.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:AwsEbsCsiDriver"
      clusterAutoscaler:
        description: The Kubernetes ClusterAutoscaler addon.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:ClusterAutoscaler"
      awsLoadBalancerController:
        description: The AWS LoadBalancer Controller.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:AwsLoadBalancerController"
      adminZoneArn:
        description: Route53 Zone arn used for admin IngressController.
        type: string
      adminZoneId:
        description: Route53 Zone id used for admin IngressController.
        type: string
      defaultZoneArn:
        description: Route53 Zone arn used for default IngressController.
        type: string
      defaultZoneId:
        description: Route53 Zone id used for default IngressController.
        type: string
      adotApplication:
        description: The OpenTelemetry (ADOT) application that sends metrics to CloudWatch.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:AdotApplication"
      adotOperator:
        description: The OpenTelemetry (ADOT) operator that sends logs to CloudWatch.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:AdotOperator"
      fluentbit:
        description: The OpenTelemetry (ADOT) application that sends metrics to CloudWatch.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Fluentbit"
    required:
      - argocd
      - certManager
      - externalDns
      - dashboard
      - calico
      - ebsCsiDriver
      - clusterAutoscaler
      - awsLoadBalancerController
      - adotApplication
      - adotOperator
      - fluentbit
    inputProperties:
      k8sProvider:
        description: The Pulumi provider used for Kubernetes resources.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      clusterName:
        description: The EKS Cluster name.
        type: string
      identityProvidersArn:
        description: The OIDC Identity Provider arn.
        type: array
        items:
          description: The OIDC Identity Provider arn.
          type: string
      issuerUrl:
        description: The OIDC Identity Provider url.
        type: string
      logging:
        description: Configure the cluster observability for logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      metrics:
        description: Configure the cluster observability for metrics.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:AdotApplicationMetrics"
      ingress:
        description: The configuration for Ingress Controller.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ClusterAddonsIngress"
    requiredInputs:
      - k8sProvider
      - clusterName
      - identityProvidersArn
      - issuerUrl
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ClusterAdmins:
    description: ClusterAdmins is a component that create the resources in the
      Cluster for a set of AWS IAM Users and Roles, managing the access with the
      integration with AWS IAM.
    properties:
      provider:
        description: The Kubernetes provider used to provision Kubernetes resources.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      clusterRoleBinding:
        description: The Kubernetes ClusterRoleBinding to associate the ClusterRole to
          the project.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding
    required:
      - provider
      - clusterRoleBinding
    inputProperties:
      name:
        description: The name for the group of Cluster Admins.
        type: string
      kubeconfig:
        description: Kubernetes provider used by Pulumi.
        type: string
      userArns:
        description: The list of AWS IAM User arns.
        type: array
        items:
          description: The list of AWS IAM User arns.
          type: string
    requiredInputs:
      - name
      - kubeconfig
      - userArns
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ClusterAutoscaler:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      irsa:
        description: ""
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
    required:
      - application
      - irsa
    inputProperties:
      clusterName:
        description: The Cluster name.
        type: string
    requiredInputs:
      - clusterName
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Dashboard:
    description: Dashboard used to view the status of the Kubernetes cluster.
    properties:
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: Application component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
    required:
      - application
    inputProperties:
      hostname:
        description: The hostname associated with the dashboard.
        type: string
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:AwsEbsCsiDriver:
    description: ""
    properties:
      namespace:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      irsa:
        description: ""
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
    required:
      - application
      - irsa
    inputProperties: {}
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:ExternalDns:
    description: ExternalDns is a component to manage DNS records according to the
      Ingresses created in the cluster.
    properties:
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      irsa:
        description: The IAM roles for service accounts.
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
    required:
      - application
      - irsa
    inputProperties:
      zoneArns:
        description: The list of DNS Zone arn to be used by ExternalDns.
        type: array
        items:
          description: The list of DNS Zone arn to be used by ExternalDns.
          type: string
    requiredInputs:
      - zoneArns
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Fluentbit:
    description: Fluentbit is a component that deploy the Fluentbit component to
      send logs to AWS CloudWatch.
    properties:
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      logGroupApplicationLog:
        description: The AWS CloudWatch LogGroup where application logs are stored.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2flogGroup:LogGroup
      logGroupDataplaneLog:
        description: The AWS CloudWatch LogGroup where dataplane logs are stored.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2flogGroup:LogGroup
      logGroupHostLog:
        description: The AWS CloudWatch LogGroup where Hosts logs are stored.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2flogGroup:LogGroup
      irsa:
        description: IRSA for Fluentbit component
        $ref: "#/resources/cloud-toolkit-aws:kubernetes:Irsa"
      application:
        description: ""
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
    required: []
    inputProperties:
      logging:
        description: Configure logging.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:FluentbitLogging"
      clusterName:
        description: The cluster name.
        type: string
      awsRegion:
        description: The AWS Region.
        type: string
    requiredInputs:
      - clusterName
      - awsRegion
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:IamAuthenticator:
    description: IamAuthenticator is a component that integrates the AWS IAM service
      with the Kubernetes authentication system. He receives a list of AWS IAM
      users and roles to enable their authentication to the cluster.
    properties:
      clusterAdminUserGroupMemberships:
        description: The list of AWS IAM UserGroupMemebership to provide cluster-admin
          access to the given users.
        type: array
        items:
          description: The list of AWS IAM UserGroupMemebership to provide cluster-admin
            access to the given users.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fuserGroupMembership:UserGroupMembership
      clusterAdminGroup:
        description: The AWS IAM Group that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fgroup:Group
      clusterAdminGroupPolicy:
        description: The AWS IAM Group Policy that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fgroupPolicy:GroupPolicy
      clusterAdminRolePolicy:
        description: The AWS IAM Group Policy that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicy:RolePolicy
      clusterAdminRole:
        description: The AWS IAM Role that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      clusterUserPolicy:
        description: The AWS IAM Group Policy that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
      clusterUserPolicyAttachment:
        description: The AWS IAM Group Policy that has admin permission in the cluster.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicyAttachment:PolicyAttachment
      configMap:
        description: The Path applied to the authentication ConfigMap.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:ConfigMap
      provider:
        description: The Kubernetes provider.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
    required:
      - clusterAdminUserGroupMemberships
      - clusterAdminGroup
      - clusterAdminGroupPolicy
      - clusterAdminRolePolicy
      - clusterAdminRole
      - clusterUserPolicy
      - configMap
      - provider
    inputProperties:
      accounts:
        description: List of AWS Accounts allowed to authenticate in the cluster.
        type: array
        items:
          description: List of AWS Accounts allowed to authenticate in the cluster.
          type: string
      clusterArn:
        description: The EKS Cluster ARN.
        type: string
      kubeconfig:
        description: The Kubeconfig to access to the cluster.
        type: string
      roles:
        description: The list of AWS IAM Roles to generate the aws-auth ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Roles to generate the aws-auth ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorRole"
      nodeGroupRoles:
        description: The list of AWS IAM Roles for NodeGroups to generate the aws-auth
          ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Roles for NodeGroups to generate the aws-auth
            ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorRole"
      users:
        description: The list of AWS IAM Users to generate the aws-auth ConfigMap.
        type: array
        items:
          description: The list of AWS IAM Users to generate the aws-auth ConfigMap.
          $ref: "#/types/cloud-toolkit-aws:kubernetes:IamAuthenticatorUser"
      clusterAdmins:
        description: The list of AWS IAM Users names to be configured as cluster-admin.
        type: array
        items:
          description: The list of AWS IAM Users names to be configured as cluster-admin.
          type: string
    requiredInputs:
      - clusterArn
      - kubeconfig
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:IngressNginx:
    description: IngressNginx is a component that deploy the Nginx IngressController
      to expose applications over HTTP/HTTPS.
    properties:
      namespace:
        description: The Namespace used to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      application:
        description: The ArgoCD Application to deploy the component.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:apiextensions.k8s.io:CustomResource
      certificate:
        description: The ACM Certificates used for TLS encryption.
        $ref: "#/resources/cloud-toolkit-aws:commons:Certificate"
    required:
      - application
    inputProperties:
      tls:
        description: The domain associated to the IngressController.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:IngressNginxTls"
      className:
        description: The Ingress class name.
        type: string
      whitelist:
        description: The whitelist of CIDR to access to the Ingress Controller.
        type: array
        items:
          description: The whitelist of CIDR to access to the Ingress Controller.
          type: string
      public:
        description: Expose the IngressController with a public Load Balancer.
        type: boolean
      default:
        description: Set this IngressController with the defaul IngressClass.
        type: boolean
    requiredInputs:
      - className
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Irsa:
    description: The Irsa component create an IAM roles for service accounts on AWS
      and Kubernetes.
    properties:
      name:
        description: ""
        type: string
      role:
        description: The IAM Role.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      policies:
        description: The list of IAM Policies.
        type: array
        items:
          description: The list of IAM Policies.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
      rolePolicyAttachments:
        description: The list of IAM Policy Attachments to associate the Roles and Policies.
        type: array
        items:
          description: The list of IAM Policy Attachments to associate the Roles and
            Policies.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
      serviceAccount:
        description: The ServiceAccount created in Kubernetes.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:ServiceAccount
    required:
      - name
      - role
      - policies
      - rolePolicyAttachments
      - serviceAccount
    inputProperties:
      identityProvidersArn:
        description: The OIDC Identity Provider arn used by the IRSA.
        type: array
        items:
          description: The OIDC Identity Provider arn used by the IRSA.
          type: string
      issuerUrl:
        description: The OIDC Identity Provider url used by the IRSA.
        type: string
      k8sProvider:
        description: Kubernetes provider used by Pulumi.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      serviceAccountName:
        description: The Service Account name used in Kubernetes.
        type: string
      policies:
        description: The list of Policies to be associated to the Irsa.
        type: array
        items:
          description: The list of Policies to be associated to the Irsa.
          type: string
    requiredInputs:
      - identityProvidersArn
      - issuerUrl
      - k8sProvider
      - namespace
      - serviceAccountName
      - policies
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:NodeGroup:
    description: NodeGroup is a component that deploy a Node Group for a Kubernetes cluster.
    properties:
      role:
        description: The IAM Role assumed by the EKS Nodes.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      rolePolicyAttachments:
        description: The list of IAM Role Policy Attachment used to attach IAM Roles to
          the EKS Node Group.
        type: array
        items:
          description: The list of IAM Role Policy Attachment used to attach IAM Roles to
            the EKS Node Group.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
      launchTemplate:
        description: The EC2 Launch Template used to provision nodes.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:ec2%2flaunchTemplate:LaunchTemplate
      nodeGroup:
        description: The EKS Node Group.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:eks%2fnodeGroup:NodeGroup
    required:
      - role
      - rolePolicyAttachments
      - launchTemplate
      - nodeGroup
    inputProperties:
      name:
        description: The name that identies the resource.
        type: string
      clusterVersion:
        description: The Kubernetes cluster version.
        type: string
      clusterEndpoint:
        description: The Kubernetes cluster endpoint.
        type: string
      clusterCA:
        description: The CA used by the Kubernetes cluster.
        type: string
      clusterName:
        description: The Kubernetes cluster name.
        type: string
      subnetIds:
        description: The list of subnets ids where the nodes will be deployed.
        type: array
        items:
          description: The list of subnets ids where the nodes will be deployed.
          type: string
      instanceType:
        description: The aws instance type to use for the nodes. Defaults to "t3.medium".
        type: string
      minCount:
        description: The minimum number of nodes running in the node group. Defaults to 1.
        type: number
      maxCount:
        description: The maxium number of nodes running in the node group. Defaults to 2.
        type: number
      maxUnavailable:
        description: The maximum number of nodes unavailable at once during a version
          update. Defaults to 1.
        type: number
    requiredInputs:
      - name
      - clusterVersion
      - clusterEndpoint
      - clusterCA
      - clusterName
      - subnetIds
    isComponent: true
    type: object
  cloud-toolkit-aws:kubernetes:Project:
    description: Project is a component that create the resources in the Cluster for
      a set of AWS IAM Users and Roles, managing the access with the integration
      with AWS IAM.
    properties:
      provider:
        description: The Kubernetes provider used to provision Kubernetes resources.
        $ref: /kubernetes/v3.21.2/schema.json#/provider
      namespace:
        description: The Namespace used by the project.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:Namespace
      resourceQuota:
        description: ResourceQuota for the provisioned Namespace.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:core/v1:ResourceQuota
      clusterRole:
        description: The Kubernetes ClusterRole used to grant minimal access to the cluster.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:ClusterRole
      clusterRoleBinding:
        description: The Kubernetes ClusterRoleBinding to associate the ClusterRole to
          the project.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding
      adminRoleBinding:
        description: The Kubernetes RoleBinding for admin users.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:RoleBinding
      editRoleBinding:
        description: The Kubernetes RoleBinding for edit users.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:RoleBinding
      viewRoleBinding:
        description: The Kubernetes RoleBinding for view users.
        $ref: /kubernetes/v3.21.2/schema.json#/resources/kubernetes:rbac.authorization.k8s.io/v1:RoleBinding
    required:
      - provider
      - namespace
      - resourceQuota
      - clusterRole
      - clusterRoleBinding
      - adminRoleBinding
      - editRoleBinding
      - viewRoleBinding
    inputProperties:
      name:
        description: The Project name.
        type: string
      resources:
        description: The cluster resources to be assigned to the project.
        $ref: "#/types/cloud-toolkit-aws:kubernetes:ProjectResources"
      kubeconfig:
        description: The kubeconfig to access the kubernetes cluster.
        type: string
      namespace:
        description: The Namespace name where the addon will be installed.
        type: string
      adminUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'admin' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'admin' role.
          type: string
      editUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'edit' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'edit' role.
          type: string
      viewUserArns:
        description: The list of AWS IAM User arns that can access to this project with
          'view' role.
        type: array
        items:
          description: The list of AWS IAM User arns that can access to this project with
            'view' role.
          type: string
    requiredInputs:
      - name
      - kubeconfig
      - namespace
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:AccountIam:
    description: Cluster is a component that configure the IAM service for a given account.
    properties:
      alias:
        description: The IAM Account Alias.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2faccountAlias:AccountAlias
      passwordPolicy:
        description: The IAM Account Password policy.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2faccountPasswordPolicy:AccountPasswordPolicy
    required: []
    inputProperties:
      alias:
        description: The alias to be used for IAM.
        type: string
      passwordPolicy:
        description: The IAM password policy configuration.
        $ref: "#/types/cloud-toolkit-aws:landingzone:AccountPasswordPolicy"
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:AuditLogging:
    description: ""
    properties:
      cloudWatchLogGroup:
        description: The CloudWatch Log Group used to store the data.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2flogGroup:LogGroup
      cloudWatchRole:
        description: The IAM Role used by Cloud Trail to write to CloudWatch..
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      cloudWatchPolicy:
        description: The IAM Policy used by the IAM Role for Cloud Trail.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
      cloudWatchRolePolicyAttachment:
        description: The IAM Role Policy Attachments that attach the IAM Role with the
          IAM Policy.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
      cloudWatchDashboard:
        description: The CloudWatch dashboard to review the audit logs.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudwatch%2fdashboard:Dashboard
      bucket:
        description: The S3 Bucket used to store the data.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketV2:BucketV2
      bucketAcl:
        description: The S3 Bucket ACL.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketAclV2:BucketAclV2
      bucketPublicAccessBlock:
        description: The S3 Bucket Public Access Block to make data private.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketPublicAccessBlock:BucketPublicAccessBlock
      bucketLifecycleConfiguration:
        description: The S3 Bucket Lifecycle Configuration to configure data retention
          on S3 Bucket.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2
      bucketPolicy:
        description: The S3 Bucket policy.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketPolicy:BucketPolicy
      trail:
        description: The Cloud Trail.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudtrail%2ftrail:Trail
      organizationId:
        description: The AWS Organization id.
        type: string
      organizationMasterAccountId:
        description: The AWS Organization master account id.
        type: string
    required:
      - bucket
      - bucketAcl
      - bucketPublicAccessBlock
      - bucketLifecycleConfiguration
      - bucketPolicy
      - trail
      - organizationId
      - organizationMasterAccountId
    inputProperties:
      retentionDays:
        description: The data retention in days. Defaults to '7'.
        type: number
      region:
        description: The region to be used to store the data.
        type: string
      bucketProvider:
        description: The AWS provider to used to create the Bucket.
        $ref: /aws/v5.10.0/schema.json#/provider
      cloudwatch:
        description: Store the audit logs in CloudWatch to enable easy searching.
        $ref: "#/types/cloud-toolkit-aws:landingzone:AuditLoggingCloudWatch"
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:IamTrustedAccount:
    description: ""
    properties:
      roleGroups:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustedAccountRoleGroupMapping"
      roleGroupPolicies:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustedAccountRoleGroupPolicyMa\
            pping"
    required:
      - roleGroups
      - roleGroupPolicies
    inputProperties:
      roles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustedAccountRole"
      trustingAccountId:
        description: ""
        type: string
      trustingAccountName:
        description: ""
        type: string
    requiredInputs:
      - roles
      - trustingAccountId
      - trustingAccountName
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:IamTrustingAccount:
    description: ""
    properties:
      delegatedRoles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustingAccountRoleMapping"
      delegatedRolePolicyAttachments:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustingAccountRolePolicyAttach\
            mentMapping"
    required:
      - delegatedRoles
      - delegatedRolePolicyAttachments
    inputProperties:
      delegatedAccountIds:
        description: ""
        type: array
        items:
          description: ""
          type: string
      delegatedRoles:
        description: ""
        type: array
        items:
          description: ""
          $ref: "#/types/cloud-toolkit-aws:landingzone:IamTrustingAccountRole"
    requiredInputs:
      - delegatedAccountIds
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:LandingZone:
    description: Create a Landing Zone with the Organization, the AuditLogging, the
      AWS Accounts and the
    properties:
      organization:
        description: The Organization components.
        $ref: "#/resources/cloud-toolkit-aws:landingzone:Organization"
      auditLogging:
        description: The AuditLogging component.
        $ref: "#/resources/cloud-toolkit-aws:landingzone:AuditLogging"
    required:
      - organization
    inputProperties:
      organization:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:Organization"
      audit:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneAudit"
      iam:
        description: ""
        $ref: "#/types/cloud-toolkit-aws:landingzone:LandingZoneIam"
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:landingzone:Organization:
    description: Organization is the component that configure the AWS Orgazination,
      AWS Accounts and AWS Organization Policies.
    properties:
      organization:
        description: The AWS Organization.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:organizations%2forganization:Organization
      accountIds:
        description: The list of AWS Accounts inside the Organization.
        type: array
        items:
          description: The list of AWS Accounts inside the Organization.
          type: string
      policies:
        description: The list of Policies used in the Organization.
        type: array
        items:
          description: The list of Policies used in the Organization.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:organizations%2fpolicy:Policy
      policyAttachments:
        description: The list of Policy Attachments used in the Organization.
        type: array
        items:
          description: The list of Policy Attachments used in the Organization.
          $ref: /aws/v5.10.0/schema.json#/resources/aws:organizations%2fpolicyAttachment:PolicyAttachment
      organizationalUnits:
        description: The list Organizatoinal Units.
        type: array
        items:
          description: The list Organizatoinal Units.
          $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationalUnitMapping"
      accounts:
        description: The list of Accounts.
        type: array
        items:
          description: The list of Accounts.
          $ref: "#/types/cloud-toolkit-aws:landingzone:AccountMapping"
      accountProviders:
        description: The list of AWS Provider for the managed accounts by this component.
        type: array
        items:
          description: The list of AWS Provider for the managed accounts by this component.
          $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationAccountProviderMapping"
    required:
      - organization
      - accountIds
      - policies
      - policyAttachments
      - organizationalUnits
      - accounts
      - accountProviders
    inputProperties:
      organizationId:
        description: The organization ID to import the Organization in the stack. If not
          set a new AWS Organization will be created. Defaults to undefined.
        type: string
      policies:
        description: The Organization policies to be applied.
        $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationPolicies"
      accounts:
        description: The list of AWS Account to be configured in the Organization.
        type: array
        items:
          description: The list of AWS Account to be configured in the Organization.
          $ref: "#/types/cloud-toolkit-aws:landingzone:OrganizationAccount"
      services:
        description: The list of AWS Service Access Principals enabled in the organization.
        type: array
        items:
          description: The list of AWS Service Access Principals enabled in the
            organization.
          type: string
      enabledPolicies:
        description: The list of enabled Organizations Policies in the organization.
        type: array
        items:
          description: The list of enabled Organizations Policies in the organization.
          type: string
      featureSet:
        description: The FeatureSet in the Organization..
        type: string
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:serverless:Queue:
    description: Cloud Toolkit component for Queues. Creates a Simple Queue Service
      Queue alongside a Dead Letter Queue for faulty message deliveries.
    properties:
      sqsQueue:
        description: Simple Queue Service Queue underline the component.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sqs%2fqueue:Queue
      deadLetterQueue:
        description: Dead Letter Queue associated with the component. Messages that were
          not delivered will be sent here.
        $ref: /aws/v5.10.0/schema.json#/resources/aws:sqs%2fqueue:Queue
    required:
      - sqsQueue
    inputProperties:
      isFifo:
        description: Set to true to create the Queue as FiFo. False for a Standard Queue.
        type: boolean
      DeadLetterQueueTypeArgs:
        description: Dead Letter Queue attached to the component to create.
        $ref: "#/types/cloud-toolkit-aws:serverless:DeadLetterQueueType"
      maxMessageSize:
        description: The limit for a Queue message size in bytes. Minimum is 1 byte (1
          character) and Maximum 262,144 bytes (256 KiB). By default a message
          can be 256 KiB large.
        type: number
      messageRetentionSeconds:
        description: The amount of time that a message will be stored in the Queue
          without being deleted. Minimum is 60 seconds (1 minutes) and Maximum
          1,209,600 (14 days) seconds. By default a message is retained 4 days.
        type: number
      policy:
        description: Custom policy for the Queue.
        type: string
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:serverless:StaticWeb:
    description: ""
    properties:
      name:
        description: Staticweb name
        type: string
      eastRegion:
        description: AWS eastRegion provider. It is required to create and validate
          certificates
        $ref: /aws/v5.10.0/schema.json#/provider
      contentBucket:
        description: Content bucket
        $ref: "#/resources/cloud-toolkit-aws:storage:Bucket"
      logsBucket:
        description: Logs bucket
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucket:Bucket
      contentBucketPolicy:
        description: Bucket policy to connect Cloud Front distribution
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketPolicy:BucketPolicy
      originAccessIdentity:
        description: OriginAccessIdentity to have access to content bucket
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudfront%2foriginAccessIdentity:OriginAccessIdentity
      distribution:
        description: CloudFront Distribution
        $ref: /aws/v5.10.0/schema.json#/resources/aws:cloudfront%2fdistribution:Distribution
      certificate:
        description: CloudFront Distribution
        $ref: /aws/v5.10.0/schema.json#/resources/aws:acm%2fcertificate:Certificate
      domainValidationOptions:
        description: CloudFront Distribution
        type: array
        items:
          description: CloudFront Distribution
          $ref: /aws/v5.10.0/schema.json#/types/aws:acm%2fCertificateDomainValidationOption:CertificateDomainValidationOption
      certificateValidation:
        description: AWS certificate validation
        $ref: /aws/v5.10.0/schema.json#/resources/aws:acm%2fcertificateValidation:CertificateValidation
      DNSRecords:
        description: DNS Records to expose staticweb
        $ref: "#/types/cloud-toolkit-aws:serverless:DNSRecords"
      DNSRecordsForValidation:
        description: DNS Records to validate the certificate
        $ref: "#/types/cloud-toolkit-aws:serverless:DNSRecords"
    required:
      - name
      - eastRegion
      - contentBucket
      - logsBucket
      - contentBucketPolicy
      - originAccessIdentity
      - distribution
    inputProperties:
      domain:
        description: Set to true to add an alias to wwww.<domain>
        type: string
      includeWWW:
        description: Set to true to add an alias to wwww.<domain>
        type: boolean
      configureDNS:
        description: Set to true to configure DNS
        type: boolean
      cache:
        description: Cloud Front distribution cache
        $ref: "#/types/cloud-toolkit-aws:serverless:CdnCache"
      dns:
        description: DNS configuration
        $ref: "#/types/cloud-toolkit-aws:serverless:CdnDns"
      priceClass:
        description: Cloud Front distribution priceClass
        type: string
    requiredInputs: []
    isComponent: true
    type: object
  cloud-toolkit-aws:storage:Bucket:
    description: Cloud Toolkit component for Bcukets. Creates a Simple Bucket for
      object storage
    properties:
      role:
        description: Required role for managing bucket
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frole:Role
      bucket:
        description: Instance of our Bucket
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketV2:BucketV2
      bucketPublicAccess:
        description: Controls that IAM policies complies with bucket visibility (public
          or private)
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketPublicAccessBlock:BucketPublicAccessBlock
      bucketPublicAccessPolicy:
        description: Policy to make public all objects if bucket visibility is public
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketPolicy:BucketPolicy
      bucketOwnership:
        description: Enforce that bucket owner is all bucket objects
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketOwnershipControls:BucketOwnershipControls
      bucketVersioning:
        description: Configuration for controlling bucket versioning
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketVersioningV2:BucketVersioningV2
      bucketEncryption:
        description: Configuration for controlling bucket encryption
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2
      replicationPolicyAttachment:
        description: Policy attachments to perform bucket replication
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2frolePolicyAttachment:RolePolicyAttachment
      replicationConfig:
        description: Configuration to perform bucket replication
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketReplicationConfig:BucketReplicationConfig
      website:
        description: Configuration to setup a website
        $ref: /aws/v5.10.0/schema.json#/resources/aws:s3%2fbucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2
      readOnlyBucketPolicy:
        description: Policy for read-only users
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
      writeBucketPolicy:
        description: Policy for write users
        $ref: /aws/v5.10.0/schema.json#/resources/aws:iam%2fpolicy:Policy
    required:
      - role
      - bucket
      - bucketPublicAccess
      - bucketOwnership
      - bucketVersioning
      - readOnlyBucketPolicy
      - writeBucketPolicy
    inputProperties:
      bucketName:
        description: Configures bucket name in AWS.
        type: string
      bucketNamePrefix:
        description: Configures a random bucket name in AWS but specifying a prefix name.
        type: string
      public:
        description: Set to true to allow policies that may provide access to anyone.
        type: boolean
      versioning:
        description: Set a certain versioning mode for bucket objects
        $ref: "#/types/cloud-toolkit-aws:storage:BucketVersioningState"
      encryption:
        description: Configures encryption parameters for the bucket
        $ref: "#/types/cloud-toolkit-aws:storage:BucketEncryption"
      replication:
        description: Configures replication parameters for the bucket
        $ref: "#/types/cloud-toolkit-aws:storage:BucketReplication"
      website:
        description: Configures a static webpage using bucket files
        $ref: "#/types/cloud-toolkit-aws:storage:BucketWebsite"
    requiredInputs: []
    isComponent: true
    type: object
language:
  nodejs:
    dependencies:
      "@pulumi/pulumi": ^3.48.0
      "@pulumi/aws": 5.21.1
      "@pulumi/kubernetes": 3.22.1
      "@pulumi/random": 4.8.2
    devDependencies:
      typescript: ^4.0.0
    respectSchemaVersion: true
    packageName: "@cloudtoolkit/aws"
  python:
    requires:
      pulumi: ">=3.48.0,<4.0.0"
      pulumi-aws: ==5.21.1
      pulumi-kubernetes: ==3.22.1
      pulumi-random: ==4.8.2
    respectSchemaVersion: true
    packageName: cloud_toolkit_aws

