// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import * as pulumiKubernetes from "@pulumi/kubernetes";

export class AdotOperator extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'cloud-toolkit-aws:kubernetes:AdotOperator';

    /**
     * Returns true if the given object is an instance of AdotOperator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdotOperator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdotOperator.__pulumiType;
    }

    public /*out*/ readonly application!: pulumi.Output<pulumiKubernetes.apiextensions.CustomResource>;
    public /*out*/ readonly namespace!: pulumi.Output<pulumiKubernetes.core.v1.Namespace | undefined>;

    /**
     * Create a AdotOperator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdotOperatorArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.awsRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsRegion'");
            }
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            resourceInputs["awsRegion"] = args ? args.awsRegion : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["metrics"] = args ? args.metrics : undefined;
            resourceInputs["application"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
        } else {
            resourceInputs["application"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdotOperator.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a AdotOperator resource.
 */
export interface AdotOperatorArgs {
    awsRegion: pulumi.Input<string>;
    clusterName: pulumi.Input<string>;
    logging?: pulumi.Input<inputs.kubernetes.LoggingOptionsArgsArgs>;
    metrics?: pulumi.Input<inputs.kubernetes.MetricsOptionsArgsArgs>;
}
