// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import * as pulumiAws from "@pulumi/aws";
import * as pulumiKubernetes from "@pulumi/kubernetes";

import {ClusterAddons, NodeGroup} from "./index";

/**
 * Cluster is a component that deploys a production-ready Kubernetes cluster. It setups the AWS IAM and netwokring, as well many Kubernetes services to run application in production.
 */
export class Cluster extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'cloud-toolkit-aws:kubernetes:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The EKS Cluster.
     */
    public /*out*/ readonly cluster!: pulumi.Output<pulumiAws.eks.Cluster>;
    /**
     * The VPC CNI Chart installed in the cluster.
     */
    public /*out*/ readonly clusterAddons!: pulumi.Output<ClusterAddons>;
    /**
     * The VPC CNI Chart installed in the cluster.
     */
    public /*out*/ readonly cniChart!: pulumi.Output<pulumiKubernetes.helm.v3.Release>;
    /**
     * The default OIDC Provider.
     */
    public /*out*/ readonly defaultOidcProvider!: pulumi.Output<pulumiAws.iam.OpenIdConnectProvider | undefined>;
    /**
     * The DNS Zone used for the cluster domain.
     */
    public /*out*/ readonly dnsZone!: pulumi.Output<pulumiAws.route53.Zone | undefined>;
    /**
     * The VPC CNI Chart installed in the cluster.
     */
    public /*out*/ readonly domain!: pulumi.Output<string>;
    /**
     * The kubeconfig content for this cluster.
     */
    public /*out*/ readonly kubeconfig!: pulumi.Output<string>;
    /**
     * The Node Groups associated to the cluster.
     */
    public readonly nodeGroups!: pulumi.Output<NodeGroup[]>;
    /**
     * The Kubernetes provider for this cluster.
     */
    public /*out*/ readonly provider!: pulumi.Output<pulumiKubernetes.Provider>;
    /**
     * The Provider to provision EKS cluster.
     */
    public /*out*/ readonly provisionerProvider!: pulumi.Output<pulumiAws.Provider>;
    /**
     * The IAM Role to provision EKS cluster.
     */
    public /*out*/ readonly provisionerRole!: pulumi.Output<pulumiAws.iam.Role>;
    /**
     * The IAM Role Polity to provision EKS cluster.
     */
    public /*out*/ readonly provisionerRolePolicy!: pulumi.Output<pulumiAws.iam.RolePolicy>;
    /**
     * The IAM Role assumed by the EKS Cluster.
     */
    public /*out*/ readonly role!: pulumi.Output<pulumiAws.iam.Role>;
    /**
     * The IAM Role Policy Attachment to assign the IAM Policies to the IAM Role.
     */
    public /*out*/ readonly rolePolicyAttachment!: pulumi.Output<pulumiAws.iam.RolePolicyAttachment>;
    /**
     * The Security Group associated to the EKS Cluster.
     */
    public /*out*/ readonly securityGroup!: pulumi.Output<pulumiAws.ec2.SecurityGroup>;
    /**
     * EC2 Tags used for provisioning Load Balancers.
     */
    public /*out*/ readonly subnetTags!: pulumi.Output<pulumiAws.ec2.Tag[]>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClusterArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["addons"] = args ? args.addons : undefined;
            resourceInputs["api"] = args ? args.api : undefined;
            resourceInputs["baseDomain"] = args ? args.baseDomain : undefined;
            resourceInputs["nodeGroups"] = args ? args.nodeGroups : undefined;
            resourceInputs["oidcProviders"] = args ? args.oidcProviders : undefined;
            resourceInputs["privateSubnetIds"] = args ? args.privateSubnetIds : undefined;
            resourceInputs["publicSubnetIds"] = args ? args.publicSubnetIds : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["cluster"] = undefined /*out*/;
            resourceInputs["clusterAddons"] = undefined /*out*/;
            resourceInputs["cniChart"] = undefined /*out*/;
            resourceInputs["defaultOidcProvider"] = undefined /*out*/;
            resourceInputs["dnsZone"] = undefined /*out*/;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["kubeconfig"] = undefined /*out*/;
            resourceInputs["provider"] = undefined /*out*/;
            resourceInputs["provisionerProvider"] = undefined /*out*/;
            resourceInputs["provisionerRole"] = undefined /*out*/;
            resourceInputs["provisionerRolePolicy"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["rolePolicyAttachment"] = undefined /*out*/;
            resourceInputs["securityGroup"] = undefined /*out*/;
            resourceInputs["subnetTags"] = undefined /*out*/;
        } else {
            resourceInputs["cluster"] = undefined /*out*/;
            resourceInputs["clusterAddons"] = undefined /*out*/;
            resourceInputs["cniChart"] = undefined /*out*/;
            resourceInputs["defaultOidcProvider"] = undefined /*out*/;
            resourceInputs["dnsZone"] = undefined /*out*/;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["kubeconfig"] = undefined /*out*/;
            resourceInputs["nodeGroups"] = undefined /*out*/;
            resourceInputs["provider"] = undefined /*out*/;
            resourceInputs["provisionerProvider"] = undefined /*out*/;
            resourceInputs["provisionerRole"] = undefined /*out*/;
            resourceInputs["provisionerRolePolicy"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["rolePolicyAttachment"] = undefined /*out*/;
            resourceInputs["securityGroup"] = undefined /*out*/;
            resourceInputs["subnetTags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The addons installed in the cluster.
     */
    addons?: pulumi.Input<inputs.kubernetes.ClusterAddonsArgsArgs>;
    /**
     * Configure the Kubernetes cluster API.
     */
    api?: pulumi.Input<inputs.kubernetes.ClusterApiArgsArgs>;
    /**
     * The base domain.
     */
    baseDomain?: pulumi.Input<string>;
    /**
     * The NodeGroups to be assigned to this cluster.
     */
    nodeGroups?: pulumi.Input<pulumi.Input<inputs.kubernetes.ClusterNodeGroupArgsArgs>[]>;
    /**
     * The OIDC Providers configuration.
     */
    oidcProviders?: pulumi.Input<inputs.kubernetes.ClusterOidcProvidersArgsArgs>;
    /**
     * The list of private subnet ids where for the EKS cluster. These subnets will be tagged for Kubernetes purposes.
     */
    privateSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of public subnet ids where for the EKS cluster. These subnets will be tagged for Kubernetes purposes.
     */
    publicSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Desired Kubernetes version for control plane. Defaults to '1.22'.
     */
    version?: pulumi.Input<string>;
    /**
     * The VPC ID where the cluster will be deployed
     */
    vpcId?: pulumi.Input<string>;
}
