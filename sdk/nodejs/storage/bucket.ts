// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import * as pulumiAws from "@pulumi/aws";

/**
 * Cloud Toolkit component for Bcukets. Creates a Simple Bucket for object storage
 */
export class Bucket extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'cloud-toolkit-aws:storage:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * Instance of our Bucket
     */
    public /*out*/ readonly bucket!: pulumi.Output<pulumiAws.s3.BucketV2>;
    /**
     * Configuration for controlling bucket encryption
     */
    public /*out*/ readonly bucketEncryption!: pulumi.Output<pulumiAws.s3.BucketServerSideEncryptionConfigurationV2 | undefined>;
    /**
     * Enforce that bucket owner is all bucket objects
     */
    public /*out*/ readonly bucketOwnership!: pulumi.Output<pulumiAws.s3.BucketOwnershipControls>;
    /**
     * Controls that IAM policies complies with bucket visibility (public or private)
     */
    public /*out*/ readonly bucketPublicAccess!: pulumi.Output<pulumiAws.s3.BucketPublicAccessBlock>;
    /**
     * Policy to make public all objects if bucket visibility is public
     */
    public /*out*/ readonly bucketPublicAccessPolicy!: pulumi.Output<pulumiAws.s3.BucketPolicy | undefined>;
    /**
     * Configuration for controlling bucket versioning
     */
    public /*out*/ readonly bucketVersioning!: pulumi.Output<pulumiAws.s3.BucketVersioningV2>;
    /**
     * Policy for read-only users
     */
    public /*out*/ readonly readOnlyBucketPolicy!: pulumi.Output<pulumiAws.iam.Policy>;
    /**
     * Configuration to perform bucket replication
     */
    public /*out*/ readonly replicationConfig!: pulumi.Output<pulumiAws.s3.BucketReplicationConfig | undefined>;
    /**
     * Policy attachments to perform bucket replication
     */
    public /*out*/ readonly replicationPolicyAttachment!: pulumi.Output<pulumiAws.iam.RolePolicyAttachment | undefined>;
    /**
     * Required role for managing bucket
     */
    public /*out*/ readonly role!: pulumi.Output<pulumiAws.iam.Role>;
    /**
     * Configuration to setup a website
     */
    public readonly website!: pulumi.Output<pulumiAws.s3.BucketWebsiteConfigurationV2 | undefined>;
    /**
     * Policy for write users
     */
    public /*out*/ readonly writeBucketPolicy!: pulumi.Output<pulumiAws.iam.Policy>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BucketArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["public"] = args ? args.public : undefined;
            resourceInputs["replication"] = args ? args.replication : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["website"] = args ? args.website : undefined;
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["bucketEncryption"] = undefined /*out*/;
            resourceInputs["bucketOwnership"] = undefined /*out*/;
            resourceInputs["bucketPublicAccess"] = undefined /*out*/;
            resourceInputs["bucketPublicAccessPolicy"] = undefined /*out*/;
            resourceInputs["bucketVersioning"] = undefined /*out*/;
            resourceInputs["readOnlyBucketPolicy"] = undefined /*out*/;
            resourceInputs["replicationConfig"] = undefined /*out*/;
            resourceInputs["replicationPolicyAttachment"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["writeBucketPolicy"] = undefined /*out*/;
        } else {
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["bucketEncryption"] = undefined /*out*/;
            resourceInputs["bucketOwnership"] = undefined /*out*/;
            resourceInputs["bucketPublicAccess"] = undefined /*out*/;
            resourceInputs["bucketPublicAccessPolicy"] = undefined /*out*/;
            resourceInputs["bucketVersioning"] = undefined /*out*/;
            resourceInputs["readOnlyBucketPolicy"] = undefined /*out*/;
            resourceInputs["replicationConfig"] = undefined /*out*/;
            resourceInputs["replicationPolicyAttachment"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["website"] = undefined /*out*/;
            resourceInputs["writeBucketPolicy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bucket.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * Configures encryption parameters for the bucket
     */
    encryption?: pulumi.Input<inputs.storage.BucketEncryptionArgsArgs>;
    /**
     * Set to true to allow policies that may provide access to anyone.
     */
    public?: pulumi.Input<boolean>;
    /**
     * Configures replication parameters for the bucket
     */
    replication?: pulumi.Input<inputs.storage.BucketReplicationArgsArgs>;
    /**
     * Set a certain versioning mode for bucket objects
     */
    versioning?: pulumi.Input<enums.storage.BucketVersioningStateArgs>;
    /**
     * Configures a static webpage using bucket files
     */
    website?: pulumi.Input<inputs.storage.BucketWebsiteArgsArgs>;
}
