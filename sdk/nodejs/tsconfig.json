{
    "compilerOptions": {
        "baseUrl": ".",
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "paths": {
            "@/*": ["*"]
        },
        "strict": true
    },
    "files": [
        "commons/certificate.ts",
        "commons/index.ts",
        "databases/index.ts",
        "databases/mysql.ts",
        "email/emailSender.ts",
        "email/index.ts",
        "index.ts",
        "kubernetes/adotApplication.ts",
        "kubernetes/adotOperator.ts",
        "kubernetes/applicationAddon.ts",
        "kubernetes/argoCD.ts",
        "kubernetes/awsEbsCsiDriver.ts",
        "kubernetes/awsLoadBalancerController.ts",
        "kubernetes/calico.ts",
        "kubernetes/certManager.ts",
        "kubernetes/cluster.ts",
        "kubernetes/clusterAddons.ts",
        "kubernetes/clusterAutoscaler.ts",
        "kubernetes/dashboard.ts",
        "kubernetes/externalDns.ts",
        "kubernetes/index.ts",
        "kubernetes/ingressNginx.ts",
        "kubernetes/irsa.ts",
        "kubernetes/nodeGroup.ts",
        "landingzone/accountIam.ts",
        "landingzone/auditLogging.ts",
        "landingzone/iamTrustedAccount.ts",
        "landingzone/iamTrustingAccount.ts",
        "landingzone/index.ts",
        "landingzone/landingZone.ts",
        "landingzone/organization.ts",
        "provider.ts",
        "serverless/index.ts",
        "serverless/queue.ts",
        "serverless/staticWeb.ts",
        "storage/bucket.ts",
        "storage/index.ts",
        "types/commons/index.ts",
        "types/commons/input.ts",
        "types/commons/output.ts",
        "types/databases/index.ts",
        "types/databases/input.ts",
        "types/databases/output.ts",
        "types/email/index.ts",
        "types/email/input.ts",
        "types/email/output.ts",
        "types/enums/databases/index.ts",
        "types/enums/email/index.ts",
        "types/enums/index.ts",
        "types/enums/kubernetes/index.ts",
        "types/enums/serverless/index.ts",
        "types/enums/storage/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/kubernetes/index.ts",
        "types/kubernetes/input.ts",
        "types/kubernetes/output.ts",
        "types/landingzone/index.ts",
        "types/landingzone/input.ts",
        "types/landingzone/output.ts",
        "types/output.ts",
        "types/serverless/index.ts",
        "types/serverless/input.ts",
        "types/serverless/output.ts",
        "types/storage/index.ts",
        "types/storage/input.ts",
        "types/storage/output.ts",
        "utilities.ts"
    ]
}
