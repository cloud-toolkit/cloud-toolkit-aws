// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import {AuditLogging, Organization} from "./index";

/**
 * Create a Landing Zone with the Organization, the AuditLogging, the AWS Accounts and the
 */
export class LandingZone extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'cloud-toolkit-aws:landingzone:LandingZone';

    /**
     * Returns true if the given object is an instance of LandingZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LandingZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LandingZone.__pulumiType;
    }

    /**
     * The AuditLogging component.
     */
    public /*out*/ readonly auditLogging!: pulumi.Output<AuditLogging | undefined>;
    /**
     * The Organization components.
     */
    public readonly organization!: pulumi.Output<Organization>;

    /**
     * Create a LandingZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LandingZoneArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["audit"] = args ? args.audit : undefined;
            resourceInputs["iam"] = args ? args.iam : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["auditLogging"] = undefined /*out*/;
        } else {
            resourceInputs["auditLogging"] = undefined /*out*/;
            resourceInputs["organization"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LandingZone.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a LandingZone resource.
 */
export interface LandingZoneArgs {
    audit?: pulumi.Input<inputs.landingzone.LandingZoneAuditArgs>;
    iam?: pulumi.Input<inputs.landingzone.LandingZoneIamArgs>;
    organization?: pulumi.Input<inputs.landingzone.OrganizationArgs>;
}
