# coding=utf-8
# *** WARNING: this file was generated by Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from ._enums import *
import pulumi_aws

__all__ = [
    'DNSRecords',
]

@pulumi.output_type
class DNSRecords(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "domainRecord":
            suggest = "domain_record"
        elif key == "wwwDomainRecord":
            suggest = "www_domain_record"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DNSRecords. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DNSRecords.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DNSRecords.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 domain_record: 'pulumi_aws.route53.Record',
                 www_domain_record: Optional['pulumi_aws.route53.Record'] = None):
        pulumi.set(__self__, "domain_record", domain_record)
        if www_domain_record is not None:
            pulumi.set(__self__, "www_domain_record", www_domain_record)

    @property
    @pulumi.getter(name="domainRecord")
    def domain_record(self) -> 'pulumi_aws.route53.Record':
        return pulumi.get(self, "domain_record")

    @property
    @pulumi.getter(name="wwwDomainRecord")
    def www_domain_record(self) -> Optional['pulumi_aws.route53.Record']:
        return pulumi.get(self, "www_domain_record")


