// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package landingzone

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamTrustingAccount struct {
	pulumi.ResourceState

	DelegatedRolePolicyAttachments IamTrustingAccountRolePolicyAttachmentMappingArrayOutput `pulumi:"delegatedRolePolicyAttachments"`
	DelegatedRoles                 IamTrustingAccountRoleMappingArrayOutput                 `pulumi:"delegatedRoles"`
}

// NewIamTrustingAccount registers a new resource with the given unique name, arguments, and options.
func NewIamTrustingAccount(ctx *pulumi.Context,
	name string, args *IamTrustingAccountArgs, opts ...pulumi.ResourceOption) (*IamTrustingAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DelegatedAccountIds == nil {
		return nil, errors.New("invalid value for required argument 'DelegatedAccountIds'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource IamTrustingAccount
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:landingzone:IamTrustingAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type iamTrustingAccountArgs struct {
	DelegatedAccountIds []string                 `pulumi:"delegatedAccountIds"`
	DelegatedRoles      []IamTrustingAccountRole `pulumi:"delegatedRoles"`
}

// The set of arguments for constructing a IamTrustingAccount resource.
type IamTrustingAccountArgs struct {
	DelegatedAccountIds pulumi.StringArrayInput
	DelegatedRoles      IamTrustingAccountRoleArrayInput
}

func (IamTrustingAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamTrustingAccountArgs)(nil)).Elem()
}

type IamTrustingAccountInput interface {
	pulumi.Input

	ToIamTrustingAccountOutput() IamTrustingAccountOutput
	ToIamTrustingAccountOutputWithContext(ctx context.Context) IamTrustingAccountOutput
}

func (*IamTrustingAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**IamTrustingAccount)(nil)).Elem()
}

func (i *IamTrustingAccount) ToIamTrustingAccountOutput() IamTrustingAccountOutput {
	return i.ToIamTrustingAccountOutputWithContext(context.Background())
}

func (i *IamTrustingAccount) ToIamTrustingAccountOutputWithContext(ctx context.Context) IamTrustingAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustingAccountOutput)
}

// IamTrustingAccountArrayInput is an input type that accepts IamTrustingAccountArray and IamTrustingAccountArrayOutput values.
// You can construct a concrete instance of `IamTrustingAccountArrayInput` via:
//
//	IamTrustingAccountArray{ IamTrustingAccountArgs{...} }
type IamTrustingAccountArrayInput interface {
	pulumi.Input

	ToIamTrustingAccountArrayOutput() IamTrustingAccountArrayOutput
	ToIamTrustingAccountArrayOutputWithContext(context.Context) IamTrustingAccountArrayOutput
}

type IamTrustingAccountArray []IamTrustingAccountInput

func (IamTrustingAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamTrustingAccount)(nil)).Elem()
}

func (i IamTrustingAccountArray) ToIamTrustingAccountArrayOutput() IamTrustingAccountArrayOutput {
	return i.ToIamTrustingAccountArrayOutputWithContext(context.Background())
}

func (i IamTrustingAccountArray) ToIamTrustingAccountArrayOutputWithContext(ctx context.Context) IamTrustingAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustingAccountArrayOutput)
}

// IamTrustingAccountMapInput is an input type that accepts IamTrustingAccountMap and IamTrustingAccountMapOutput values.
// You can construct a concrete instance of `IamTrustingAccountMapInput` via:
//
//	IamTrustingAccountMap{ "key": IamTrustingAccountArgs{...} }
type IamTrustingAccountMapInput interface {
	pulumi.Input

	ToIamTrustingAccountMapOutput() IamTrustingAccountMapOutput
	ToIamTrustingAccountMapOutputWithContext(context.Context) IamTrustingAccountMapOutput
}

type IamTrustingAccountMap map[string]IamTrustingAccountInput

func (IamTrustingAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamTrustingAccount)(nil)).Elem()
}

func (i IamTrustingAccountMap) ToIamTrustingAccountMapOutput() IamTrustingAccountMapOutput {
	return i.ToIamTrustingAccountMapOutputWithContext(context.Background())
}

func (i IamTrustingAccountMap) ToIamTrustingAccountMapOutputWithContext(ctx context.Context) IamTrustingAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustingAccountMapOutput)
}

type IamTrustingAccountOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamTrustingAccount)(nil)).Elem()
}

func (o IamTrustingAccountOutput) ToIamTrustingAccountOutput() IamTrustingAccountOutput {
	return o
}

func (o IamTrustingAccountOutput) ToIamTrustingAccountOutputWithContext(ctx context.Context) IamTrustingAccountOutput {
	return o
}

func (o IamTrustingAccountOutput) DelegatedRolePolicyAttachments() IamTrustingAccountRolePolicyAttachmentMappingArrayOutput {
	return o.ApplyT(func(v *IamTrustingAccount) IamTrustingAccountRolePolicyAttachmentMappingArrayOutput {
		return v.DelegatedRolePolicyAttachments
	}).(IamTrustingAccountRolePolicyAttachmentMappingArrayOutput)
}

func (o IamTrustingAccountOutput) DelegatedRoles() IamTrustingAccountRoleMappingArrayOutput {
	return o.ApplyT(func(v *IamTrustingAccount) IamTrustingAccountRoleMappingArrayOutput { return v.DelegatedRoles }).(IamTrustingAccountRoleMappingArrayOutput)
}

type IamTrustingAccountArrayOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamTrustingAccount)(nil)).Elem()
}

func (o IamTrustingAccountArrayOutput) ToIamTrustingAccountArrayOutput() IamTrustingAccountArrayOutput {
	return o
}

func (o IamTrustingAccountArrayOutput) ToIamTrustingAccountArrayOutputWithContext(ctx context.Context) IamTrustingAccountArrayOutput {
	return o
}

func (o IamTrustingAccountArrayOutput) Index(i pulumi.IntInput) IamTrustingAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamTrustingAccount {
		return vs[0].([]*IamTrustingAccount)[vs[1].(int)]
	}).(IamTrustingAccountOutput)
}

type IamTrustingAccountMapOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamTrustingAccount)(nil)).Elem()
}

func (o IamTrustingAccountMapOutput) ToIamTrustingAccountMapOutput() IamTrustingAccountMapOutput {
	return o
}

func (o IamTrustingAccountMapOutput) ToIamTrustingAccountMapOutputWithContext(ctx context.Context) IamTrustingAccountMapOutput {
	return o
}

func (o IamTrustingAccountMapOutput) MapIndex(k pulumi.StringInput) IamTrustingAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamTrustingAccount {
		return vs[0].(map[string]*IamTrustingAccount)[vs[1].(string)]
	}).(IamTrustingAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustingAccountInput)(nil)).Elem(), &IamTrustingAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustingAccountArrayInput)(nil)).Elem(), IamTrustingAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustingAccountMapInput)(nil)).Elem(), IamTrustingAccountMap{})
	pulumi.RegisterOutputType(IamTrustingAccountOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountArrayOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountMapOutput{})
}
