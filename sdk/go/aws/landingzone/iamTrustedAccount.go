// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package landingzone

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamTrustedAccount struct {
	pulumi.ResourceState

	RoleGroupPolicies IamTrustedAccountRoleGroupPolicyMappingArrayOutput `pulumi:"roleGroupPolicies"`
	RoleGroups        IamTrustedAccountRoleGroupMappingArrayOutput       `pulumi:"roleGroups"`
}

// NewIamTrustedAccount registers a new resource with the given unique name, arguments, and options.
func NewIamTrustedAccount(ctx *pulumi.Context,
	name string, args *IamTrustedAccountArgs, opts ...pulumi.ResourceOption) (*IamTrustedAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.TrustingAccountId == nil {
		return nil, errors.New("invalid value for required argument 'TrustingAccountId'")
	}
	if args.TrustingAccountName == nil {
		return nil, errors.New("invalid value for required argument 'TrustingAccountName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource IamTrustedAccount
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:landingzone:IamTrustedAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type iamTrustedAccountArgs struct {
	Roles               []IamTrustedAccountRole `pulumi:"roles"`
	TrustingAccountId   string                  `pulumi:"trustingAccountId"`
	TrustingAccountName string                  `pulumi:"trustingAccountName"`
}

// The set of arguments for constructing a IamTrustedAccount resource.
type IamTrustedAccountArgs struct {
	Roles               IamTrustedAccountRoleArrayInput
	TrustingAccountId   pulumi.StringInput
	TrustingAccountName pulumi.StringInput
}

func (IamTrustedAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamTrustedAccountArgs)(nil)).Elem()
}

type IamTrustedAccountInput interface {
	pulumi.Input

	ToIamTrustedAccountOutput() IamTrustedAccountOutput
	ToIamTrustedAccountOutputWithContext(ctx context.Context) IamTrustedAccountOutput
}

func (*IamTrustedAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**IamTrustedAccount)(nil)).Elem()
}

func (i *IamTrustedAccount) ToIamTrustedAccountOutput() IamTrustedAccountOutput {
	return i.ToIamTrustedAccountOutputWithContext(context.Background())
}

func (i *IamTrustedAccount) ToIamTrustedAccountOutputWithContext(ctx context.Context) IamTrustedAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustedAccountOutput)
}

// IamTrustedAccountArrayInput is an input type that accepts IamTrustedAccountArray and IamTrustedAccountArrayOutput values.
// You can construct a concrete instance of `IamTrustedAccountArrayInput` via:
//
//	IamTrustedAccountArray{ IamTrustedAccountArgs{...} }
type IamTrustedAccountArrayInput interface {
	pulumi.Input

	ToIamTrustedAccountArrayOutput() IamTrustedAccountArrayOutput
	ToIamTrustedAccountArrayOutputWithContext(context.Context) IamTrustedAccountArrayOutput
}

type IamTrustedAccountArray []IamTrustedAccountInput

func (IamTrustedAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamTrustedAccount)(nil)).Elem()
}

func (i IamTrustedAccountArray) ToIamTrustedAccountArrayOutput() IamTrustedAccountArrayOutput {
	return i.ToIamTrustedAccountArrayOutputWithContext(context.Background())
}

func (i IamTrustedAccountArray) ToIamTrustedAccountArrayOutputWithContext(ctx context.Context) IamTrustedAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustedAccountArrayOutput)
}

// IamTrustedAccountMapInput is an input type that accepts IamTrustedAccountMap and IamTrustedAccountMapOutput values.
// You can construct a concrete instance of `IamTrustedAccountMapInput` via:
//
//	IamTrustedAccountMap{ "key": IamTrustedAccountArgs{...} }
type IamTrustedAccountMapInput interface {
	pulumi.Input

	ToIamTrustedAccountMapOutput() IamTrustedAccountMapOutput
	ToIamTrustedAccountMapOutputWithContext(context.Context) IamTrustedAccountMapOutput
}

type IamTrustedAccountMap map[string]IamTrustedAccountInput

func (IamTrustedAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamTrustedAccount)(nil)).Elem()
}

func (i IamTrustedAccountMap) ToIamTrustedAccountMapOutput() IamTrustedAccountMapOutput {
	return i.ToIamTrustedAccountMapOutputWithContext(context.Background())
}

func (i IamTrustedAccountMap) ToIamTrustedAccountMapOutputWithContext(ctx context.Context) IamTrustedAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustedAccountMapOutput)
}

type IamTrustedAccountOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamTrustedAccount)(nil)).Elem()
}

func (o IamTrustedAccountOutput) ToIamTrustedAccountOutput() IamTrustedAccountOutput {
	return o
}

func (o IamTrustedAccountOutput) ToIamTrustedAccountOutputWithContext(ctx context.Context) IamTrustedAccountOutput {
	return o
}

func (o IamTrustedAccountOutput) RoleGroupPolicies() IamTrustedAccountRoleGroupPolicyMappingArrayOutput {
	return o.ApplyT(func(v *IamTrustedAccount) IamTrustedAccountRoleGroupPolicyMappingArrayOutput {
		return v.RoleGroupPolicies
	}).(IamTrustedAccountRoleGroupPolicyMappingArrayOutput)
}

func (o IamTrustedAccountOutput) RoleGroups() IamTrustedAccountRoleGroupMappingArrayOutput {
	return o.ApplyT(func(v *IamTrustedAccount) IamTrustedAccountRoleGroupMappingArrayOutput { return v.RoleGroups }).(IamTrustedAccountRoleGroupMappingArrayOutput)
}

type IamTrustedAccountArrayOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamTrustedAccount)(nil)).Elem()
}

func (o IamTrustedAccountArrayOutput) ToIamTrustedAccountArrayOutput() IamTrustedAccountArrayOutput {
	return o
}

func (o IamTrustedAccountArrayOutput) ToIamTrustedAccountArrayOutputWithContext(ctx context.Context) IamTrustedAccountArrayOutput {
	return o
}

func (o IamTrustedAccountArrayOutput) Index(i pulumi.IntInput) IamTrustedAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamTrustedAccount {
		return vs[0].([]*IamTrustedAccount)[vs[1].(int)]
	}).(IamTrustedAccountOutput)
}

type IamTrustedAccountMapOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamTrustedAccount)(nil)).Elem()
}

func (o IamTrustedAccountMapOutput) ToIamTrustedAccountMapOutput() IamTrustedAccountMapOutput {
	return o
}

func (o IamTrustedAccountMapOutput) ToIamTrustedAccountMapOutputWithContext(ctx context.Context) IamTrustedAccountMapOutput {
	return o
}

func (o IamTrustedAccountMapOutput) MapIndex(k pulumi.StringInput) IamTrustedAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamTrustedAccount {
		return vs[0].(map[string]*IamTrustedAccount)[vs[1].(string)]
	}).(IamTrustedAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustedAccountInput)(nil)).Elem(), &IamTrustedAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustedAccountArrayInput)(nil)).Elem(), IamTrustedAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustedAccountMapInput)(nil)).Elem(), IamTrustedAccountMap{})
	pulumi.RegisterOutputType(IamTrustedAccountOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountArrayOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountMapOutput{})
}
