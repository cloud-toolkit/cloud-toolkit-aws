// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package landingzone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/organizations"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountIamType struct {
	// The alias to be used for IAM.
	Alias *string `pulumi:"alias"`
	// The IAM password policy configuration.
	PasswordPolicy *AccountPasswordPolicy `pulumi:"passwordPolicy"`
}

// AccountIamTypeInput is an input type that accepts AccountIamTypeArgs and AccountIamTypeOutput values.
// You can construct a concrete instance of `AccountIamTypeInput` via:
//
//	AccountIamTypeArgs{...}
type AccountIamTypeInput interface {
	pulumi.Input

	ToAccountIamTypeOutput() AccountIamTypeOutput
	ToAccountIamTypeOutputWithContext(context.Context) AccountIamTypeOutput
}

type AccountIamTypeArgs struct {
	// The alias to be used for IAM.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// The IAM password policy configuration.
	PasswordPolicy AccountPasswordPolicyPtrInput `pulumi:"passwordPolicy"`
}

func (AccountIamTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamType)(nil)).Elem()
}

func (i AccountIamTypeArgs) ToAccountIamTypeOutput() AccountIamTypeOutput {
	return i.ToAccountIamTypeOutputWithContext(context.Background())
}

func (i AccountIamTypeArgs) ToAccountIamTypeOutputWithContext(ctx context.Context) AccountIamTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIamTypeOutput)
}

type AccountIamTypeOutput struct{ *pulumi.OutputState }

func (AccountIamTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIamType)(nil)).Elem()
}

func (o AccountIamTypeOutput) ToAccountIamTypeOutput() AccountIamTypeOutput {
	return o
}

func (o AccountIamTypeOutput) ToAccountIamTypeOutputWithContext(ctx context.Context) AccountIamTypeOutput {
	return o
}

// The alias to be used for IAM.
func (o AccountIamTypeOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIamType) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// The IAM password policy configuration.
func (o AccountIamTypeOutput) PasswordPolicy() AccountPasswordPolicyPtrOutput {
	return o.ApplyT(func(v AccountIamType) *AccountPasswordPolicy { return v.PasswordPolicy }).(AccountPasswordPolicyPtrOutput)
}

type AccountMapping struct {
	Account     *organizations.Account `pulumi:"account"`
	AccountName string                 `pulumi:"accountName"`
}

type AccountMappingOutput struct{ *pulumi.OutputState }

func (AccountMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountMapping)(nil)).Elem()
}

func (o AccountMappingOutput) ToAccountMappingOutput() AccountMappingOutput {
	return o
}

func (o AccountMappingOutput) ToAccountMappingOutputWithContext(ctx context.Context) AccountMappingOutput {
	return o
}

func (o AccountMappingOutput) Account() organizations.AccountOutput {
	return o.ApplyT(func(v AccountMapping) *organizations.Account { return v.Account }).(organizations.AccountOutput)
}

func (o AccountMappingOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountMapping) string { return v.AccountName }).(pulumi.StringOutput)
}

type AccountMappingArrayOutput struct{ *pulumi.OutputState }

func (AccountMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountMapping)(nil)).Elem()
}

func (o AccountMappingArrayOutput) ToAccountMappingArrayOutput() AccountMappingArrayOutput {
	return o
}

func (o AccountMappingArrayOutput) ToAccountMappingArrayOutputWithContext(ctx context.Context) AccountMappingArrayOutput {
	return o
}

func (o AccountMappingArrayOutput) Index(i pulumi.IntInput) AccountMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountMapping {
		return vs[0].([]AccountMapping)[vs[1].(int)]
	}).(AccountMappingOutput)
}

type AccountPasswordPolicy struct {
	// Enable the creation of IAM Password Policy. Defaults to 'true'.
	Enabled *bool `pulumi:"enabled"`
	// The rules to be applied to the IAM Password Policy
	Rules *AccountPasswordPolicyRules `pulumi:"rules"`
}

// AccountPasswordPolicyInput is an input type that accepts AccountPasswordPolicyArgs and AccountPasswordPolicyOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyInput` via:
//
//	AccountPasswordPolicyArgs{...}
type AccountPasswordPolicyInput interface {
	pulumi.Input

	ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput
	ToAccountPasswordPolicyOutputWithContext(context.Context) AccountPasswordPolicyOutput
}

type AccountPasswordPolicyArgs struct {
	// Enable the creation of IAM Password Policy. Defaults to 'true'.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The rules to be applied to the IAM Password Policy
	Rules AccountPasswordPolicyRulesPtrInput `pulumi:"rules"`
}

func (AccountPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPasswordPolicy)(nil)).Elem()
}

func (i AccountPasswordPolicyArgs) ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput {
	return i.ToAccountPasswordPolicyOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyArgs) ToAccountPasswordPolicyOutputWithContext(ctx context.Context) AccountPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyOutput)
}

func (i AccountPasswordPolicyArgs) ToAccountPasswordPolicyPtrOutput() AccountPasswordPolicyPtrOutput {
	return i.ToAccountPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyArgs) ToAccountPasswordPolicyPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyOutput).ToAccountPasswordPolicyPtrOutputWithContext(ctx)
}

// AccountPasswordPolicyPtrInput is an input type that accepts AccountPasswordPolicyArgs, AccountPasswordPolicyPtr and AccountPasswordPolicyPtrOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyPtrInput` via:
//
//	        AccountPasswordPolicyArgs{...}
//
//	or:
//
//	        nil
type AccountPasswordPolicyPtrInput interface {
	pulumi.Input

	ToAccountPasswordPolicyPtrOutput() AccountPasswordPolicyPtrOutput
	ToAccountPasswordPolicyPtrOutputWithContext(context.Context) AccountPasswordPolicyPtrOutput
}

type accountPasswordPolicyPtrType AccountPasswordPolicyArgs

func AccountPasswordPolicyPtr(v *AccountPasswordPolicyArgs) AccountPasswordPolicyPtrInput {
	return (*accountPasswordPolicyPtrType)(v)
}

func (*accountPasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicy)(nil)).Elem()
}

func (i *accountPasswordPolicyPtrType) ToAccountPasswordPolicyPtrOutput() AccountPasswordPolicyPtrOutput {
	return i.ToAccountPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *accountPasswordPolicyPtrType) ToAccountPasswordPolicyPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyPtrOutput)
}

type AccountPasswordPolicyOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPasswordPolicy)(nil)).Elem()
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput {
	return o
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyOutputWithContext(ctx context.Context) AccountPasswordPolicyOutput {
	return o
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyPtrOutput() AccountPasswordPolicyPtrOutput {
	return o.ToAccountPasswordPolicyPtrOutputWithContext(context.Background())
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountPasswordPolicy) *AccountPasswordPolicy {
		return &v
	}).(AccountPasswordPolicyPtrOutput)
}

// Enable the creation of IAM Password Policy. Defaults to 'true'.
func (o AccountPasswordPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The rules to be applied to the IAM Password Policy
func (o AccountPasswordPolicyOutput) Rules() AccountPasswordPolicyRulesPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicy) *AccountPasswordPolicyRules { return v.Rules }).(AccountPasswordPolicyRulesPtrOutput)
}

type AccountPasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicy)(nil)).Elem()
}

func (o AccountPasswordPolicyPtrOutput) ToAccountPasswordPolicyPtrOutput() AccountPasswordPolicyPtrOutput {
	return o
}

func (o AccountPasswordPolicyPtrOutput) ToAccountPasswordPolicyPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyPtrOutput {
	return o
}

func (o AccountPasswordPolicyPtrOutput) Elem() AccountPasswordPolicyOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) AccountPasswordPolicy {
		if v != nil {
			return *v
		}
		var ret AccountPasswordPolicy
		return ret
	}).(AccountPasswordPolicyOutput)
}

// Enable the creation of IAM Password Policy. Defaults to 'true'.
func (o AccountPasswordPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The rules to be applied to the IAM Password Policy
func (o AccountPasswordPolicyPtrOutput) Rules() AccountPasswordPolicyRulesPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) *AccountPasswordPolicyRules {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AccountPasswordPolicyRulesPtrOutput)
}

type AccountPasswordPolicyRules struct {
	// Whether to allow users to change their own password. Defaults to 'true'.
	AllowUsersToChangePassword *bool `pulumi:"allowUsersToChangePassword"`
	// Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset). Defaults to 'true'.
	HardExpiry *bool `pulumi:"hardExpiry"`
	// The number of days that an user password is valid. Defaults to '90'.
	MaxPasswordAge *float64 `pulumi:"maxPasswordAge"`
	// Minimum length to require for user passwords. Defaults to '14'.
	MinimumPasswordLength *float64 `pulumi:"minimumPasswordLength"`
	// The number of previous passwords that users are prevented from reusing. Defaults to '0'.
	PasswordReusePrevention *float64 `pulumi:"passwordReusePrevention"`
	// Whether to require lowercase characters for user passwords. Defaults to 'true'.
	RequireLowercaseCharacters *bool `pulumi:"requireLowercaseCharacters"`
	// Whether to require numbers for user passwords. Defaults to 'true'.
	RequireNumbers *bool `pulumi:"requireNumbers"`
	// Whether to require symbols for user passwords. Defaults to 'true'.
	RequireSymbols *bool `pulumi:"requireSymbols"`
	// Whether to require uppercase characters for user passwords. Defaults to 'true'.
	RequireUppercaseCharacters *bool `pulumi:"requireUppercaseCharacters"`
}

// AccountPasswordPolicyRulesInput is an input type that accepts AccountPasswordPolicyRulesArgs and AccountPasswordPolicyRulesOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyRulesInput` via:
//
//	AccountPasswordPolicyRulesArgs{...}
type AccountPasswordPolicyRulesInput interface {
	pulumi.Input

	ToAccountPasswordPolicyRulesOutput() AccountPasswordPolicyRulesOutput
	ToAccountPasswordPolicyRulesOutputWithContext(context.Context) AccountPasswordPolicyRulesOutput
}

type AccountPasswordPolicyRulesArgs struct {
	// Whether to allow users to change their own password. Defaults to 'true'.
	AllowUsersToChangePassword pulumi.BoolPtrInput `pulumi:"allowUsersToChangePassword"`
	// Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset). Defaults to 'true'.
	HardExpiry pulumi.BoolPtrInput `pulumi:"hardExpiry"`
	// The number of days that an user password is valid. Defaults to '90'.
	MaxPasswordAge pulumi.Float64PtrInput `pulumi:"maxPasswordAge"`
	// Minimum length to require for user passwords. Defaults to '14'.
	MinimumPasswordLength pulumi.Float64PtrInput `pulumi:"minimumPasswordLength"`
	// The number of previous passwords that users are prevented from reusing. Defaults to '0'.
	PasswordReusePrevention pulumi.Float64PtrInput `pulumi:"passwordReusePrevention"`
	// Whether to require lowercase characters for user passwords. Defaults to 'true'.
	RequireLowercaseCharacters pulumi.BoolPtrInput `pulumi:"requireLowercaseCharacters"`
	// Whether to require numbers for user passwords. Defaults to 'true'.
	RequireNumbers pulumi.BoolPtrInput `pulumi:"requireNumbers"`
	// Whether to require symbols for user passwords. Defaults to 'true'.
	RequireSymbols pulumi.BoolPtrInput `pulumi:"requireSymbols"`
	// Whether to require uppercase characters for user passwords. Defaults to 'true'.
	RequireUppercaseCharacters pulumi.BoolPtrInput `pulumi:"requireUppercaseCharacters"`
}

func (AccountPasswordPolicyRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPasswordPolicyRules)(nil)).Elem()
}

func (i AccountPasswordPolicyRulesArgs) ToAccountPasswordPolicyRulesOutput() AccountPasswordPolicyRulesOutput {
	return i.ToAccountPasswordPolicyRulesOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyRulesArgs) ToAccountPasswordPolicyRulesOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyRulesOutput)
}

func (i AccountPasswordPolicyRulesArgs) ToAccountPasswordPolicyRulesPtrOutput() AccountPasswordPolicyRulesPtrOutput {
	return i.ToAccountPasswordPolicyRulesPtrOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyRulesArgs) ToAccountPasswordPolicyRulesPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyRulesOutput).ToAccountPasswordPolicyRulesPtrOutputWithContext(ctx)
}

// AccountPasswordPolicyRulesPtrInput is an input type that accepts AccountPasswordPolicyRulesArgs, AccountPasswordPolicyRulesPtr and AccountPasswordPolicyRulesPtrOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyRulesPtrInput` via:
//
//	        AccountPasswordPolicyRulesArgs{...}
//
//	or:
//
//	        nil
type AccountPasswordPolicyRulesPtrInput interface {
	pulumi.Input

	ToAccountPasswordPolicyRulesPtrOutput() AccountPasswordPolicyRulesPtrOutput
	ToAccountPasswordPolicyRulesPtrOutputWithContext(context.Context) AccountPasswordPolicyRulesPtrOutput
}

type accountPasswordPolicyRulesPtrType AccountPasswordPolicyRulesArgs

func AccountPasswordPolicyRulesPtr(v *AccountPasswordPolicyRulesArgs) AccountPasswordPolicyRulesPtrInput {
	return (*accountPasswordPolicyRulesPtrType)(v)
}

func (*accountPasswordPolicyRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicyRules)(nil)).Elem()
}

func (i *accountPasswordPolicyRulesPtrType) ToAccountPasswordPolicyRulesPtrOutput() AccountPasswordPolicyRulesPtrOutput {
	return i.ToAccountPasswordPolicyRulesPtrOutputWithContext(context.Background())
}

func (i *accountPasswordPolicyRulesPtrType) ToAccountPasswordPolicyRulesPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyRulesPtrOutput)
}

type AccountPasswordPolicyRulesOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPasswordPolicyRules)(nil)).Elem()
}

func (o AccountPasswordPolicyRulesOutput) ToAccountPasswordPolicyRulesOutput() AccountPasswordPolicyRulesOutput {
	return o
}

func (o AccountPasswordPolicyRulesOutput) ToAccountPasswordPolicyRulesOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesOutput {
	return o
}

func (o AccountPasswordPolicyRulesOutput) ToAccountPasswordPolicyRulesPtrOutput() AccountPasswordPolicyRulesPtrOutput {
	return o.ToAccountPasswordPolicyRulesPtrOutputWithContext(context.Background())
}

func (o AccountPasswordPolicyRulesOutput) ToAccountPasswordPolicyRulesPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountPasswordPolicyRules) *AccountPasswordPolicyRules {
		return &v
	}).(AccountPasswordPolicyRulesPtrOutput)
}

// Whether to allow users to change their own password. Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) AllowUsersToChangePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.AllowUsersToChangePassword }).(pulumi.BoolPtrOutput)
}

// Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset). Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) HardExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.HardExpiry }).(pulumi.BoolPtrOutput)
}

// The number of days that an user password is valid. Defaults to '90'.
func (o AccountPasswordPolicyRulesOutput) MaxPasswordAge() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *float64 { return v.MaxPasswordAge }).(pulumi.Float64PtrOutput)
}

// Minimum length to require for user passwords. Defaults to '14'.
func (o AccountPasswordPolicyRulesOutput) MinimumPasswordLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *float64 { return v.MinimumPasswordLength }).(pulumi.Float64PtrOutput)
}

// The number of previous passwords that users are prevented from reusing. Defaults to '0'.
func (o AccountPasswordPolicyRulesOutput) PasswordReusePrevention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *float64 { return v.PasswordReusePrevention }).(pulumi.Float64PtrOutput)
}

// Whether to require lowercase characters for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) RequireLowercaseCharacters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.RequireLowercaseCharacters }).(pulumi.BoolPtrOutput)
}

// Whether to require numbers for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// Whether to require symbols for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// Whether to require uppercase characters for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesOutput) RequireUppercaseCharacters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountPasswordPolicyRules) *bool { return v.RequireUppercaseCharacters }).(pulumi.BoolPtrOutput)
}

type AccountPasswordPolicyRulesPtrOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicyRules)(nil)).Elem()
}

func (o AccountPasswordPolicyRulesPtrOutput) ToAccountPasswordPolicyRulesPtrOutput() AccountPasswordPolicyRulesPtrOutput {
	return o
}

func (o AccountPasswordPolicyRulesPtrOutput) ToAccountPasswordPolicyRulesPtrOutputWithContext(ctx context.Context) AccountPasswordPolicyRulesPtrOutput {
	return o
}

func (o AccountPasswordPolicyRulesPtrOutput) Elem() AccountPasswordPolicyRulesOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) AccountPasswordPolicyRules {
		if v != nil {
			return *v
		}
		var ret AccountPasswordPolicyRules
		return ret
	}).(AccountPasswordPolicyRulesOutput)
}

// Whether to allow users to change their own password. Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) AllowUsersToChangePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.AllowUsersToChangePassword
	}).(pulumi.BoolPtrOutput)
}

// Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset). Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) HardExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.HardExpiry
	}).(pulumi.BoolPtrOutput)
}

// The number of days that an user password is valid. Defaults to '90'.
func (o AccountPasswordPolicyRulesPtrOutput) MaxPasswordAge() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPasswordAge
	}).(pulumi.Float64PtrOutput)
}

// Minimum length to require for user passwords. Defaults to '14'.
func (o AccountPasswordPolicyRulesPtrOutput) MinimumPasswordLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *float64 {
		if v == nil {
			return nil
		}
		return v.MinimumPasswordLength
	}).(pulumi.Float64PtrOutput)
}

// The number of previous passwords that users are prevented from reusing. Defaults to '0'.
func (o AccountPasswordPolicyRulesPtrOutput) PasswordReusePrevention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *float64 {
		if v == nil {
			return nil
		}
		return v.PasswordReusePrevention
	}).(pulumi.Float64PtrOutput)
}

// Whether to require lowercase characters for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) RequireLowercaseCharacters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLowercaseCharacters
	}).(pulumi.BoolPtrOutput)
}

// Whether to require numbers for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumbers
	}).(pulumi.BoolPtrOutput)
}

// Whether to require symbols for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSymbols
	}).(pulumi.BoolPtrOutput)
}

// Whether to require uppercase characters for user passwords. Defaults to 'true'.
func (o AccountPasswordPolicyRulesPtrOutput) RequireUppercaseCharacters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicyRules) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUppercaseCharacters
	}).(pulumi.BoolPtrOutput)
}

type AuditLoggingType struct {
	// The AWS provider to used to create the Bucket.
	BucketProvider *aws.Provider `pulumi:"bucketProvider"`
	// Store the audit logs in CloudWatch to enable easy searching.
	Cloudwatch *AuditLoggingCloudWatch `pulumi:"cloudwatch"`
	// The region to be used to store the data.
	Region *string `pulumi:"region"`
	// The data retention in days. Defaults to '7'.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

type AuditLoggingCloudWatch struct {
	// Enable storing audit logs in CloudWatch. Defaults to 'false'.
	Enabled bool `pulumi:"enabled"`
	// The data retention in days. Defaults to '1'.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

// AuditLoggingCloudWatchInput is an input type that accepts AuditLoggingCloudWatchArgs and AuditLoggingCloudWatchOutput values.
// You can construct a concrete instance of `AuditLoggingCloudWatchInput` via:
//
//	AuditLoggingCloudWatchArgs{...}
type AuditLoggingCloudWatchInput interface {
	pulumi.Input

	ToAuditLoggingCloudWatchOutput() AuditLoggingCloudWatchOutput
	ToAuditLoggingCloudWatchOutputWithContext(context.Context) AuditLoggingCloudWatchOutput
}

type AuditLoggingCloudWatchArgs struct {
	// Enable storing audit logs in CloudWatch. Defaults to 'false'.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The data retention in days. Defaults to '1'.
	RetentionDays pulumi.Float64PtrInput `pulumi:"retentionDays"`
}

func (AuditLoggingCloudWatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLoggingCloudWatch)(nil)).Elem()
}

func (i AuditLoggingCloudWatchArgs) ToAuditLoggingCloudWatchOutput() AuditLoggingCloudWatchOutput {
	return i.ToAuditLoggingCloudWatchOutputWithContext(context.Background())
}

func (i AuditLoggingCloudWatchArgs) ToAuditLoggingCloudWatchOutputWithContext(ctx context.Context) AuditLoggingCloudWatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLoggingCloudWatchOutput)
}

func (i AuditLoggingCloudWatchArgs) ToAuditLoggingCloudWatchPtrOutput() AuditLoggingCloudWatchPtrOutput {
	return i.ToAuditLoggingCloudWatchPtrOutputWithContext(context.Background())
}

func (i AuditLoggingCloudWatchArgs) ToAuditLoggingCloudWatchPtrOutputWithContext(ctx context.Context) AuditLoggingCloudWatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLoggingCloudWatchOutput).ToAuditLoggingCloudWatchPtrOutputWithContext(ctx)
}

// AuditLoggingCloudWatchPtrInput is an input type that accepts AuditLoggingCloudWatchArgs, AuditLoggingCloudWatchPtr and AuditLoggingCloudWatchPtrOutput values.
// You can construct a concrete instance of `AuditLoggingCloudWatchPtrInput` via:
//
//	        AuditLoggingCloudWatchArgs{...}
//
//	or:
//
//	        nil
type AuditLoggingCloudWatchPtrInput interface {
	pulumi.Input

	ToAuditLoggingCloudWatchPtrOutput() AuditLoggingCloudWatchPtrOutput
	ToAuditLoggingCloudWatchPtrOutputWithContext(context.Context) AuditLoggingCloudWatchPtrOutput
}

type auditLoggingCloudWatchPtrType AuditLoggingCloudWatchArgs

func AuditLoggingCloudWatchPtr(v *AuditLoggingCloudWatchArgs) AuditLoggingCloudWatchPtrInput {
	return (*auditLoggingCloudWatchPtrType)(v)
}

func (*auditLoggingCloudWatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLoggingCloudWatch)(nil)).Elem()
}

func (i *auditLoggingCloudWatchPtrType) ToAuditLoggingCloudWatchPtrOutput() AuditLoggingCloudWatchPtrOutput {
	return i.ToAuditLoggingCloudWatchPtrOutputWithContext(context.Background())
}

func (i *auditLoggingCloudWatchPtrType) ToAuditLoggingCloudWatchPtrOutputWithContext(ctx context.Context) AuditLoggingCloudWatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLoggingCloudWatchPtrOutput)
}

type AuditLoggingCloudWatchOutput struct{ *pulumi.OutputState }

func (AuditLoggingCloudWatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLoggingCloudWatch)(nil)).Elem()
}

func (o AuditLoggingCloudWatchOutput) ToAuditLoggingCloudWatchOutput() AuditLoggingCloudWatchOutput {
	return o
}

func (o AuditLoggingCloudWatchOutput) ToAuditLoggingCloudWatchOutputWithContext(ctx context.Context) AuditLoggingCloudWatchOutput {
	return o
}

func (o AuditLoggingCloudWatchOutput) ToAuditLoggingCloudWatchPtrOutput() AuditLoggingCloudWatchPtrOutput {
	return o.ToAuditLoggingCloudWatchPtrOutputWithContext(context.Background())
}

func (o AuditLoggingCloudWatchOutput) ToAuditLoggingCloudWatchPtrOutputWithContext(ctx context.Context) AuditLoggingCloudWatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLoggingCloudWatch) *AuditLoggingCloudWatch {
		return &v
	}).(AuditLoggingCloudWatchPtrOutput)
}

// Enable storing audit logs in CloudWatch. Defaults to 'false'.
func (o AuditLoggingCloudWatchOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AuditLoggingCloudWatch) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The data retention in days. Defaults to '1'.
func (o AuditLoggingCloudWatchOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AuditLoggingCloudWatch) *float64 { return v.RetentionDays }).(pulumi.Float64PtrOutput)
}

type AuditLoggingCloudWatchPtrOutput struct{ *pulumi.OutputState }

func (AuditLoggingCloudWatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLoggingCloudWatch)(nil)).Elem()
}

func (o AuditLoggingCloudWatchPtrOutput) ToAuditLoggingCloudWatchPtrOutput() AuditLoggingCloudWatchPtrOutput {
	return o
}

func (o AuditLoggingCloudWatchPtrOutput) ToAuditLoggingCloudWatchPtrOutputWithContext(ctx context.Context) AuditLoggingCloudWatchPtrOutput {
	return o
}

func (o AuditLoggingCloudWatchPtrOutput) Elem() AuditLoggingCloudWatchOutput {
	return o.ApplyT(func(v *AuditLoggingCloudWatch) AuditLoggingCloudWatch {
		if v != nil {
			return *v
		}
		var ret AuditLoggingCloudWatch
		return ret
	}).(AuditLoggingCloudWatchOutput)
}

// Enable storing audit logs in CloudWatch. Defaults to 'false'.
func (o AuditLoggingCloudWatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuditLoggingCloudWatch) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The data retention in days. Defaults to '1'.
func (o AuditLoggingCloudWatchPtrOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AuditLoggingCloudWatch) *float64 {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.Float64PtrOutput)
}

type IamTrustedAccountType struct {
	Roles               []IamTrustedAccountRole `pulumi:"roles"`
	TrustingAccountId   string                  `pulumi:"trustingAccountId"`
	TrustingAccountName string                  `pulumi:"trustingAccountName"`
}

type IamTrustedAccountRole struct {
	Name string `pulumi:"name"`
}

// IamTrustedAccountRoleInput is an input type that accepts IamTrustedAccountRoleArgs and IamTrustedAccountRoleOutput values.
// You can construct a concrete instance of `IamTrustedAccountRoleInput` via:
//
//	IamTrustedAccountRoleArgs{...}
type IamTrustedAccountRoleInput interface {
	pulumi.Input

	ToIamTrustedAccountRoleOutput() IamTrustedAccountRoleOutput
	ToIamTrustedAccountRoleOutputWithContext(context.Context) IamTrustedAccountRoleOutput
}

type IamTrustedAccountRoleArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (IamTrustedAccountRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustedAccountRole)(nil)).Elem()
}

func (i IamTrustedAccountRoleArgs) ToIamTrustedAccountRoleOutput() IamTrustedAccountRoleOutput {
	return i.ToIamTrustedAccountRoleOutputWithContext(context.Background())
}

func (i IamTrustedAccountRoleArgs) ToIamTrustedAccountRoleOutputWithContext(ctx context.Context) IamTrustedAccountRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustedAccountRoleOutput)
}

// IamTrustedAccountRoleArrayInput is an input type that accepts IamTrustedAccountRoleArray and IamTrustedAccountRoleArrayOutput values.
// You can construct a concrete instance of `IamTrustedAccountRoleArrayInput` via:
//
//	IamTrustedAccountRoleArray{ IamTrustedAccountRoleArgs{...} }
type IamTrustedAccountRoleArrayInput interface {
	pulumi.Input

	ToIamTrustedAccountRoleArrayOutput() IamTrustedAccountRoleArrayOutput
	ToIamTrustedAccountRoleArrayOutputWithContext(context.Context) IamTrustedAccountRoleArrayOutput
}

type IamTrustedAccountRoleArray []IamTrustedAccountRoleInput

func (IamTrustedAccountRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustedAccountRole)(nil)).Elem()
}

func (i IamTrustedAccountRoleArray) ToIamTrustedAccountRoleArrayOutput() IamTrustedAccountRoleArrayOutput {
	return i.ToIamTrustedAccountRoleArrayOutputWithContext(context.Background())
}

func (i IamTrustedAccountRoleArray) ToIamTrustedAccountRoleArrayOutputWithContext(ctx context.Context) IamTrustedAccountRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustedAccountRoleArrayOutput)
}

type IamTrustedAccountRoleOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustedAccountRole)(nil)).Elem()
}

func (o IamTrustedAccountRoleOutput) ToIamTrustedAccountRoleOutput() IamTrustedAccountRoleOutput {
	return o
}

func (o IamTrustedAccountRoleOutput) ToIamTrustedAccountRoleOutputWithContext(ctx context.Context) IamTrustedAccountRoleOutput {
	return o
}

func (o IamTrustedAccountRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustedAccountRole) string { return v.Name }).(pulumi.StringOutput)
}

type IamTrustedAccountRoleArrayOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustedAccountRole)(nil)).Elem()
}

func (o IamTrustedAccountRoleArrayOutput) ToIamTrustedAccountRoleArrayOutput() IamTrustedAccountRoleArrayOutput {
	return o
}

func (o IamTrustedAccountRoleArrayOutput) ToIamTrustedAccountRoleArrayOutputWithContext(ctx context.Context) IamTrustedAccountRoleArrayOutput {
	return o
}

func (o IamTrustedAccountRoleArrayOutput) Index(i pulumi.IntInput) IamTrustedAccountRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustedAccountRole {
		return vs[0].([]IamTrustedAccountRole)[vs[1].(int)]
	}).(IamTrustedAccountRoleOutput)
}

type IamTrustedAccountRoleGroupMapping struct {
	Group    *iam.Group `pulumi:"group"`
	RoleName string     `pulumi:"roleName"`
}

type IamTrustedAccountRoleGroupMappingOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleGroupMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustedAccountRoleGroupMapping)(nil)).Elem()
}

func (o IamTrustedAccountRoleGroupMappingOutput) ToIamTrustedAccountRoleGroupMappingOutput() IamTrustedAccountRoleGroupMappingOutput {
	return o
}

func (o IamTrustedAccountRoleGroupMappingOutput) ToIamTrustedAccountRoleGroupMappingOutputWithContext(ctx context.Context) IamTrustedAccountRoleGroupMappingOutput {
	return o
}

func (o IamTrustedAccountRoleGroupMappingOutput) Group() iam.GroupOutput {
	return o.ApplyT(func(v IamTrustedAccountRoleGroupMapping) *iam.Group { return v.Group }).(iam.GroupOutput)
}

func (o IamTrustedAccountRoleGroupMappingOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustedAccountRoleGroupMapping) string { return v.RoleName }).(pulumi.StringOutput)
}

type IamTrustedAccountRoleGroupMappingArrayOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleGroupMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustedAccountRoleGroupMapping)(nil)).Elem()
}

func (o IamTrustedAccountRoleGroupMappingArrayOutput) ToIamTrustedAccountRoleGroupMappingArrayOutput() IamTrustedAccountRoleGroupMappingArrayOutput {
	return o
}

func (o IamTrustedAccountRoleGroupMappingArrayOutput) ToIamTrustedAccountRoleGroupMappingArrayOutputWithContext(ctx context.Context) IamTrustedAccountRoleGroupMappingArrayOutput {
	return o
}

func (o IamTrustedAccountRoleGroupMappingArrayOutput) Index(i pulumi.IntInput) IamTrustedAccountRoleGroupMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustedAccountRoleGroupMapping {
		return vs[0].([]IamTrustedAccountRoleGroupMapping)[vs[1].(int)]
	}).(IamTrustedAccountRoleGroupMappingOutput)
}

type IamTrustedAccountRoleGroupPolicyMapping struct {
	GroupPolicy *iam.GroupPolicy `pulumi:"groupPolicy"`
	RoleName    string           `pulumi:"roleName"`
}

type IamTrustedAccountRoleGroupPolicyMappingOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleGroupPolicyMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustedAccountRoleGroupPolicyMapping)(nil)).Elem()
}

func (o IamTrustedAccountRoleGroupPolicyMappingOutput) ToIamTrustedAccountRoleGroupPolicyMappingOutput() IamTrustedAccountRoleGroupPolicyMappingOutput {
	return o
}

func (o IamTrustedAccountRoleGroupPolicyMappingOutput) ToIamTrustedAccountRoleGroupPolicyMappingOutputWithContext(ctx context.Context) IamTrustedAccountRoleGroupPolicyMappingOutput {
	return o
}

func (o IamTrustedAccountRoleGroupPolicyMappingOutput) GroupPolicy() iam.GroupPolicyOutput {
	return o.ApplyT(func(v IamTrustedAccountRoleGroupPolicyMapping) *iam.GroupPolicy { return v.GroupPolicy }).(iam.GroupPolicyOutput)
}

func (o IamTrustedAccountRoleGroupPolicyMappingOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustedAccountRoleGroupPolicyMapping) string { return v.RoleName }).(pulumi.StringOutput)
}

type IamTrustedAccountRoleGroupPolicyMappingArrayOutput struct{ *pulumi.OutputState }

func (IamTrustedAccountRoleGroupPolicyMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustedAccountRoleGroupPolicyMapping)(nil)).Elem()
}

func (o IamTrustedAccountRoleGroupPolicyMappingArrayOutput) ToIamTrustedAccountRoleGroupPolicyMappingArrayOutput() IamTrustedAccountRoleGroupPolicyMappingArrayOutput {
	return o
}

func (o IamTrustedAccountRoleGroupPolicyMappingArrayOutput) ToIamTrustedAccountRoleGroupPolicyMappingArrayOutputWithContext(ctx context.Context) IamTrustedAccountRoleGroupPolicyMappingArrayOutput {
	return o
}

func (o IamTrustedAccountRoleGroupPolicyMappingArrayOutput) Index(i pulumi.IntInput) IamTrustedAccountRoleGroupPolicyMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustedAccountRoleGroupPolicyMapping {
		return vs[0].([]IamTrustedAccountRoleGroupPolicyMapping)[vs[1].(int)]
	}).(IamTrustedAccountRoleGroupPolicyMappingOutput)
}

type IamTrustingAccountType struct {
	DelegatedAccountIds []string                 `pulumi:"delegatedAccountIds"`
	DelegatedRoles      []IamTrustingAccountRole `pulumi:"delegatedRoles"`
}

type IamTrustingAccountRole struct {
	Name        string   `pulumi:"name"`
	PolicyNames []string `pulumi:"policyNames"`
}

// IamTrustingAccountRoleInput is an input type that accepts IamTrustingAccountRoleArgs and IamTrustingAccountRoleOutput values.
// You can construct a concrete instance of `IamTrustingAccountRoleInput` via:
//
//	IamTrustingAccountRoleArgs{...}
type IamTrustingAccountRoleInput interface {
	pulumi.Input

	ToIamTrustingAccountRoleOutput() IamTrustingAccountRoleOutput
	ToIamTrustingAccountRoleOutputWithContext(context.Context) IamTrustingAccountRoleOutput
}

type IamTrustingAccountRoleArgs struct {
	Name        pulumi.StringInput      `pulumi:"name"`
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
}

func (IamTrustingAccountRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustingAccountRole)(nil)).Elem()
}

func (i IamTrustingAccountRoleArgs) ToIamTrustingAccountRoleOutput() IamTrustingAccountRoleOutput {
	return i.ToIamTrustingAccountRoleOutputWithContext(context.Background())
}

func (i IamTrustingAccountRoleArgs) ToIamTrustingAccountRoleOutputWithContext(ctx context.Context) IamTrustingAccountRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustingAccountRoleOutput)
}

// IamTrustingAccountRoleArrayInput is an input type that accepts IamTrustingAccountRoleArray and IamTrustingAccountRoleArrayOutput values.
// You can construct a concrete instance of `IamTrustingAccountRoleArrayInput` via:
//
//	IamTrustingAccountRoleArray{ IamTrustingAccountRoleArgs{...} }
type IamTrustingAccountRoleArrayInput interface {
	pulumi.Input

	ToIamTrustingAccountRoleArrayOutput() IamTrustingAccountRoleArrayOutput
	ToIamTrustingAccountRoleArrayOutputWithContext(context.Context) IamTrustingAccountRoleArrayOutput
}

type IamTrustingAccountRoleArray []IamTrustingAccountRoleInput

func (IamTrustingAccountRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustingAccountRole)(nil)).Elem()
}

func (i IamTrustingAccountRoleArray) ToIamTrustingAccountRoleArrayOutput() IamTrustingAccountRoleArrayOutput {
	return i.ToIamTrustingAccountRoleArrayOutputWithContext(context.Background())
}

func (i IamTrustingAccountRoleArray) ToIamTrustingAccountRoleArrayOutputWithContext(ctx context.Context) IamTrustingAccountRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamTrustingAccountRoleArrayOutput)
}

type IamTrustingAccountRoleOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustingAccountRole)(nil)).Elem()
}

func (o IamTrustingAccountRoleOutput) ToIamTrustingAccountRoleOutput() IamTrustingAccountRoleOutput {
	return o
}

func (o IamTrustingAccountRoleOutput) ToIamTrustingAccountRoleOutputWithContext(ctx context.Context) IamTrustingAccountRoleOutput {
	return o
}

func (o IamTrustingAccountRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustingAccountRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o IamTrustingAccountRoleOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamTrustingAccountRole) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

type IamTrustingAccountRoleArrayOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustingAccountRole)(nil)).Elem()
}

func (o IamTrustingAccountRoleArrayOutput) ToIamTrustingAccountRoleArrayOutput() IamTrustingAccountRoleArrayOutput {
	return o
}

func (o IamTrustingAccountRoleArrayOutput) ToIamTrustingAccountRoleArrayOutputWithContext(ctx context.Context) IamTrustingAccountRoleArrayOutput {
	return o
}

func (o IamTrustingAccountRoleArrayOutput) Index(i pulumi.IntInput) IamTrustingAccountRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustingAccountRole {
		return vs[0].([]IamTrustingAccountRole)[vs[1].(int)]
	}).(IamTrustingAccountRoleOutput)
}

type IamTrustingAccountRoleMapping struct {
	Role     *iam.Role `pulumi:"role"`
	RoleName string    `pulumi:"roleName"`
}

type IamTrustingAccountRoleMappingOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustingAccountRoleMapping)(nil)).Elem()
}

func (o IamTrustingAccountRoleMappingOutput) ToIamTrustingAccountRoleMappingOutput() IamTrustingAccountRoleMappingOutput {
	return o
}

func (o IamTrustingAccountRoleMappingOutput) ToIamTrustingAccountRoleMappingOutputWithContext(ctx context.Context) IamTrustingAccountRoleMappingOutput {
	return o
}

func (o IamTrustingAccountRoleMappingOutput) Role() iam.RoleOutput {
	return o.ApplyT(func(v IamTrustingAccountRoleMapping) *iam.Role { return v.Role }).(iam.RoleOutput)
}

func (o IamTrustingAccountRoleMappingOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustingAccountRoleMapping) string { return v.RoleName }).(pulumi.StringOutput)
}

type IamTrustingAccountRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustingAccountRoleMapping)(nil)).Elem()
}

func (o IamTrustingAccountRoleMappingArrayOutput) ToIamTrustingAccountRoleMappingArrayOutput() IamTrustingAccountRoleMappingArrayOutput {
	return o
}

func (o IamTrustingAccountRoleMappingArrayOutput) ToIamTrustingAccountRoleMappingArrayOutputWithContext(ctx context.Context) IamTrustingAccountRoleMappingArrayOutput {
	return o
}

func (o IamTrustingAccountRoleMappingArrayOutput) Index(i pulumi.IntInput) IamTrustingAccountRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustingAccountRoleMapping {
		return vs[0].([]IamTrustingAccountRoleMapping)[vs[1].(int)]
	}).(IamTrustingAccountRoleMappingOutput)
}

type IamTrustingAccountRolePolicyAttachmentMapping struct {
	RoleName             string                      `pulumi:"roleName"`
	RolePolicyAttachment []*iam.RolePolicyAttachment `pulumi:"rolePolicyAttachment"`
}

type IamTrustingAccountRolePolicyAttachmentMappingOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRolePolicyAttachmentMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamTrustingAccountRolePolicyAttachmentMapping)(nil)).Elem()
}

func (o IamTrustingAccountRolePolicyAttachmentMappingOutput) ToIamTrustingAccountRolePolicyAttachmentMappingOutput() IamTrustingAccountRolePolicyAttachmentMappingOutput {
	return o
}

func (o IamTrustingAccountRolePolicyAttachmentMappingOutput) ToIamTrustingAccountRolePolicyAttachmentMappingOutputWithContext(ctx context.Context) IamTrustingAccountRolePolicyAttachmentMappingOutput {
	return o
}

func (o IamTrustingAccountRolePolicyAttachmentMappingOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v IamTrustingAccountRolePolicyAttachmentMapping) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o IamTrustingAccountRolePolicyAttachmentMappingOutput) RolePolicyAttachment() iam.RolePolicyAttachmentArrayOutput {
	return o.ApplyT(func(v IamTrustingAccountRolePolicyAttachmentMapping) []*iam.RolePolicyAttachment {
		return v.RolePolicyAttachment
	}).(iam.RolePolicyAttachmentArrayOutput)
}

type IamTrustingAccountRolePolicyAttachmentMappingArrayOutput struct{ *pulumi.OutputState }

func (IamTrustingAccountRolePolicyAttachmentMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamTrustingAccountRolePolicyAttachmentMapping)(nil)).Elem()
}

func (o IamTrustingAccountRolePolicyAttachmentMappingArrayOutput) ToIamTrustingAccountRolePolicyAttachmentMappingArrayOutput() IamTrustingAccountRolePolicyAttachmentMappingArrayOutput {
	return o
}

func (o IamTrustingAccountRolePolicyAttachmentMappingArrayOutput) ToIamTrustingAccountRolePolicyAttachmentMappingArrayOutputWithContext(ctx context.Context) IamTrustingAccountRolePolicyAttachmentMappingArrayOutput {
	return o
}

func (o IamTrustingAccountRolePolicyAttachmentMappingArrayOutput) Index(i pulumi.IntInput) IamTrustingAccountRolePolicyAttachmentMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamTrustingAccountRolePolicyAttachmentMapping {
		return vs[0].([]IamTrustingAccountRolePolicyAttachmentMapping)[vs[1].(int)]
	}).(IamTrustingAccountRolePolicyAttachmentMappingOutput)
}

type LandingZoneType struct {
	Audit        *LandingZoneAudit `pulumi:"audit"`
	Iam          *LandingZoneIam   `pulumi:"iam"`
	Organization *OrganizationType `pulumi:"organization"`
}

type LandingZoneAudit struct {
	// Select the Organization account to be used to store the audit logs.
	AccountName *string `pulumi:"accountName"`
	// Store the audit logs in CloudWatch to enable easy searching.
	Cloudwatch *LandingZoneAuditCloudWatch `pulumi:"cloudwatch"`
	// Enable audit logging. Defaults to 'true'.
	Enabled *bool `pulumi:"enabled"`
	// The data retention in days. Defaults to '7'.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

// LandingZoneAuditInput is an input type that accepts LandingZoneAuditArgs and LandingZoneAuditOutput values.
// You can construct a concrete instance of `LandingZoneAuditInput` via:
//
//	LandingZoneAuditArgs{...}
type LandingZoneAuditInput interface {
	pulumi.Input

	ToLandingZoneAuditOutput() LandingZoneAuditOutput
	ToLandingZoneAuditOutputWithContext(context.Context) LandingZoneAuditOutput
}

type LandingZoneAuditArgs struct {
	// Select the Organization account to be used to store the audit logs.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Store the audit logs in CloudWatch to enable easy searching.
	Cloudwatch LandingZoneAuditCloudWatchPtrInput `pulumi:"cloudwatch"`
	// Enable audit logging. Defaults to 'true'.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The data retention in days. Defaults to '7'.
	RetentionDays pulumi.Float64PtrInput `pulumi:"retentionDays"`
}

func (LandingZoneAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAudit)(nil)).Elem()
}

func (i LandingZoneAuditArgs) ToLandingZoneAuditOutput() LandingZoneAuditOutput {
	return i.ToLandingZoneAuditOutputWithContext(context.Background())
}

func (i LandingZoneAuditArgs) ToLandingZoneAuditOutputWithContext(ctx context.Context) LandingZoneAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditOutput)
}

func (i LandingZoneAuditArgs) ToLandingZoneAuditPtrOutput() LandingZoneAuditPtrOutput {
	return i.ToLandingZoneAuditPtrOutputWithContext(context.Background())
}

func (i LandingZoneAuditArgs) ToLandingZoneAuditPtrOutputWithContext(ctx context.Context) LandingZoneAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditOutput).ToLandingZoneAuditPtrOutputWithContext(ctx)
}

// LandingZoneAuditPtrInput is an input type that accepts LandingZoneAuditArgs, LandingZoneAuditPtr and LandingZoneAuditPtrOutput values.
// You can construct a concrete instance of `LandingZoneAuditPtrInput` via:
//
//	        LandingZoneAuditArgs{...}
//
//	or:
//
//	        nil
type LandingZoneAuditPtrInput interface {
	pulumi.Input

	ToLandingZoneAuditPtrOutput() LandingZoneAuditPtrOutput
	ToLandingZoneAuditPtrOutputWithContext(context.Context) LandingZoneAuditPtrOutput
}

type landingZoneAuditPtrType LandingZoneAuditArgs

func LandingZoneAuditPtr(v *LandingZoneAuditArgs) LandingZoneAuditPtrInput {
	return (*landingZoneAuditPtrType)(v)
}

func (*landingZoneAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAudit)(nil)).Elem()
}

func (i *landingZoneAuditPtrType) ToLandingZoneAuditPtrOutput() LandingZoneAuditPtrOutput {
	return i.ToLandingZoneAuditPtrOutputWithContext(context.Background())
}

func (i *landingZoneAuditPtrType) ToLandingZoneAuditPtrOutputWithContext(ctx context.Context) LandingZoneAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditPtrOutput)
}

type LandingZoneAuditOutput struct{ *pulumi.OutputState }

func (LandingZoneAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAudit)(nil)).Elem()
}

func (o LandingZoneAuditOutput) ToLandingZoneAuditOutput() LandingZoneAuditOutput {
	return o
}

func (o LandingZoneAuditOutput) ToLandingZoneAuditOutputWithContext(ctx context.Context) LandingZoneAuditOutput {
	return o
}

func (o LandingZoneAuditOutput) ToLandingZoneAuditPtrOutput() LandingZoneAuditPtrOutput {
	return o.ToLandingZoneAuditPtrOutputWithContext(context.Background())
}

func (o LandingZoneAuditOutput) ToLandingZoneAuditPtrOutputWithContext(ctx context.Context) LandingZoneAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneAudit) *LandingZoneAudit {
		return &v
	}).(LandingZoneAuditPtrOutput)
}

// Select the Organization account to be used to store the audit logs.
func (o LandingZoneAuditOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneAudit) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Store the audit logs in CloudWatch to enable easy searching.
func (o LandingZoneAuditOutput) Cloudwatch() LandingZoneAuditCloudWatchPtrOutput {
	return o.ApplyT(func(v LandingZoneAudit) *LandingZoneAuditCloudWatch { return v.Cloudwatch }).(LandingZoneAuditCloudWatchPtrOutput)
}

// Enable audit logging. Defaults to 'true'.
func (o LandingZoneAuditOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LandingZoneAudit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The data retention in days. Defaults to '7'.
func (o LandingZoneAuditOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LandingZoneAudit) *float64 { return v.RetentionDays }).(pulumi.Float64PtrOutput)
}

type LandingZoneAuditPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAudit)(nil)).Elem()
}

func (o LandingZoneAuditPtrOutput) ToLandingZoneAuditPtrOutput() LandingZoneAuditPtrOutput {
	return o
}

func (o LandingZoneAuditPtrOutput) ToLandingZoneAuditPtrOutputWithContext(ctx context.Context) LandingZoneAuditPtrOutput {
	return o
}

func (o LandingZoneAuditPtrOutput) Elem() LandingZoneAuditOutput {
	return o.ApplyT(func(v *LandingZoneAudit) LandingZoneAudit {
		if v != nil {
			return *v
		}
		var ret LandingZoneAudit
		return ret
	}).(LandingZoneAuditOutput)
}

// Select the Organization account to be used to store the audit logs.
func (o LandingZoneAuditPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneAudit) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Store the audit logs in CloudWatch to enable easy searching.
func (o LandingZoneAuditPtrOutput) Cloudwatch() LandingZoneAuditCloudWatchPtrOutput {
	return o.ApplyT(func(v *LandingZoneAudit) *LandingZoneAuditCloudWatch {
		if v == nil {
			return nil
		}
		return v.Cloudwatch
	}).(LandingZoneAuditCloudWatchPtrOutput)
}

// Enable audit logging. Defaults to 'true'.
func (o LandingZoneAuditPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LandingZoneAudit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The data retention in days. Defaults to '7'.
func (o LandingZoneAuditPtrOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LandingZoneAudit) *float64 {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.Float64PtrOutput)
}

type LandingZoneAuditCloudWatch struct {
	// Enable storing audit logs in CloudWatch. Defaults to 'false'.
	Enabled bool `pulumi:"enabled"`
	// The data retention in days. Defaults to '1'.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

// LandingZoneAuditCloudWatchInput is an input type that accepts LandingZoneAuditCloudWatchArgs and LandingZoneAuditCloudWatchOutput values.
// You can construct a concrete instance of `LandingZoneAuditCloudWatchInput` via:
//
//	LandingZoneAuditCloudWatchArgs{...}
type LandingZoneAuditCloudWatchInput interface {
	pulumi.Input

	ToLandingZoneAuditCloudWatchOutput() LandingZoneAuditCloudWatchOutput
	ToLandingZoneAuditCloudWatchOutputWithContext(context.Context) LandingZoneAuditCloudWatchOutput
}

type LandingZoneAuditCloudWatchArgs struct {
	// Enable storing audit logs in CloudWatch. Defaults to 'false'.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The data retention in days. Defaults to '1'.
	RetentionDays pulumi.Float64PtrInput `pulumi:"retentionDays"`
}

func (LandingZoneAuditCloudWatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAuditCloudWatch)(nil)).Elem()
}

func (i LandingZoneAuditCloudWatchArgs) ToLandingZoneAuditCloudWatchOutput() LandingZoneAuditCloudWatchOutput {
	return i.ToLandingZoneAuditCloudWatchOutputWithContext(context.Background())
}

func (i LandingZoneAuditCloudWatchArgs) ToLandingZoneAuditCloudWatchOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditCloudWatchOutput)
}

func (i LandingZoneAuditCloudWatchArgs) ToLandingZoneAuditCloudWatchPtrOutput() LandingZoneAuditCloudWatchPtrOutput {
	return i.ToLandingZoneAuditCloudWatchPtrOutputWithContext(context.Background())
}

func (i LandingZoneAuditCloudWatchArgs) ToLandingZoneAuditCloudWatchPtrOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditCloudWatchOutput).ToLandingZoneAuditCloudWatchPtrOutputWithContext(ctx)
}

// LandingZoneAuditCloudWatchPtrInput is an input type that accepts LandingZoneAuditCloudWatchArgs, LandingZoneAuditCloudWatchPtr and LandingZoneAuditCloudWatchPtrOutput values.
// You can construct a concrete instance of `LandingZoneAuditCloudWatchPtrInput` via:
//
//	        LandingZoneAuditCloudWatchArgs{...}
//
//	or:
//
//	        nil
type LandingZoneAuditCloudWatchPtrInput interface {
	pulumi.Input

	ToLandingZoneAuditCloudWatchPtrOutput() LandingZoneAuditCloudWatchPtrOutput
	ToLandingZoneAuditCloudWatchPtrOutputWithContext(context.Context) LandingZoneAuditCloudWatchPtrOutput
}

type landingZoneAuditCloudWatchPtrType LandingZoneAuditCloudWatchArgs

func LandingZoneAuditCloudWatchPtr(v *LandingZoneAuditCloudWatchArgs) LandingZoneAuditCloudWatchPtrInput {
	return (*landingZoneAuditCloudWatchPtrType)(v)
}

func (*landingZoneAuditCloudWatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAuditCloudWatch)(nil)).Elem()
}

func (i *landingZoneAuditCloudWatchPtrType) ToLandingZoneAuditCloudWatchPtrOutput() LandingZoneAuditCloudWatchPtrOutput {
	return i.ToLandingZoneAuditCloudWatchPtrOutputWithContext(context.Background())
}

func (i *landingZoneAuditCloudWatchPtrType) ToLandingZoneAuditCloudWatchPtrOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneAuditCloudWatchPtrOutput)
}

type LandingZoneAuditCloudWatchOutput struct{ *pulumi.OutputState }

func (LandingZoneAuditCloudWatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneAuditCloudWatch)(nil)).Elem()
}

func (o LandingZoneAuditCloudWatchOutput) ToLandingZoneAuditCloudWatchOutput() LandingZoneAuditCloudWatchOutput {
	return o
}

func (o LandingZoneAuditCloudWatchOutput) ToLandingZoneAuditCloudWatchOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchOutput {
	return o
}

func (o LandingZoneAuditCloudWatchOutput) ToLandingZoneAuditCloudWatchPtrOutput() LandingZoneAuditCloudWatchPtrOutput {
	return o.ToLandingZoneAuditCloudWatchPtrOutputWithContext(context.Background())
}

func (o LandingZoneAuditCloudWatchOutput) ToLandingZoneAuditCloudWatchPtrOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneAuditCloudWatch) *LandingZoneAuditCloudWatch {
		return &v
	}).(LandingZoneAuditCloudWatchPtrOutput)
}

// Enable storing audit logs in CloudWatch. Defaults to 'false'.
func (o LandingZoneAuditCloudWatchOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LandingZoneAuditCloudWatch) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The data retention in days. Defaults to '1'.
func (o LandingZoneAuditCloudWatchOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LandingZoneAuditCloudWatch) *float64 { return v.RetentionDays }).(pulumi.Float64PtrOutput)
}

type LandingZoneAuditCloudWatchPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneAuditCloudWatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneAuditCloudWatch)(nil)).Elem()
}

func (o LandingZoneAuditCloudWatchPtrOutput) ToLandingZoneAuditCloudWatchPtrOutput() LandingZoneAuditCloudWatchPtrOutput {
	return o
}

func (o LandingZoneAuditCloudWatchPtrOutput) ToLandingZoneAuditCloudWatchPtrOutputWithContext(ctx context.Context) LandingZoneAuditCloudWatchPtrOutput {
	return o
}

func (o LandingZoneAuditCloudWatchPtrOutput) Elem() LandingZoneAuditCloudWatchOutput {
	return o.ApplyT(func(v *LandingZoneAuditCloudWatch) LandingZoneAuditCloudWatch {
		if v != nil {
			return *v
		}
		var ret LandingZoneAuditCloudWatch
		return ret
	}).(LandingZoneAuditCloudWatchOutput)
}

// Enable storing audit logs in CloudWatch. Defaults to 'false'.
func (o LandingZoneAuditCloudWatchPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LandingZoneAuditCloudWatch) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The data retention in days. Defaults to '1'.
func (o LandingZoneAuditCloudWatchPtrOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LandingZoneAuditCloudWatch) *float64 {
		if v == nil {
			return nil
		}
		return v.RetentionDays
	}).(pulumi.Float64PtrOutput)
}

type LandingZoneIam struct {
	AccountName *string              `pulumi:"accountName"`
	Roles       []LandingZoneIamRole `pulumi:"roles"`
}

// LandingZoneIamInput is an input type that accepts LandingZoneIamArgs and LandingZoneIamOutput values.
// You can construct a concrete instance of `LandingZoneIamInput` via:
//
//	LandingZoneIamArgs{...}
type LandingZoneIamInput interface {
	pulumi.Input

	ToLandingZoneIamOutput() LandingZoneIamOutput
	ToLandingZoneIamOutputWithContext(context.Context) LandingZoneIamOutput
}

type LandingZoneIamArgs struct {
	AccountName pulumi.StringPtrInput        `pulumi:"accountName"`
	Roles       LandingZoneIamRoleArrayInput `pulumi:"roles"`
}

func (LandingZoneIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneIam)(nil)).Elem()
}

func (i LandingZoneIamArgs) ToLandingZoneIamOutput() LandingZoneIamOutput {
	return i.ToLandingZoneIamOutputWithContext(context.Background())
}

func (i LandingZoneIamArgs) ToLandingZoneIamOutputWithContext(ctx context.Context) LandingZoneIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneIamOutput)
}

func (i LandingZoneIamArgs) ToLandingZoneIamPtrOutput() LandingZoneIamPtrOutput {
	return i.ToLandingZoneIamPtrOutputWithContext(context.Background())
}

func (i LandingZoneIamArgs) ToLandingZoneIamPtrOutputWithContext(ctx context.Context) LandingZoneIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneIamOutput).ToLandingZoneIamPtrOutputWithContext(ctx)
}

// LandingZoneIamPtrInput is an input type that accepts LandingZoneIamArgs, LandingZoneIamPtr and LandingZoneIamPtrOutput values.
// You can construct a concrete instance of `LandingZoneIamPtrInput` via:
//
//	        LandingZoneIamArgs{...}
//
//	or:
//
//	        nil
type LandingZoneIamPtrInput interface {
	pulumi.Input

	ToLandingZoneIamPtrOutput() LandingZoneIamPtrOutput
	ToLandingZoneIamPtrOutputWithContext(context.Context) LandingZoneIamPtrOutput
}

type landingZoneIamPtrType LandingZoneIamArgs

func LandingZoneIamPtr(v *LandingZoneIamArgs) LandingZoneIamPtrInput {
	return (*landingZoneIamPtrType)(v)
}

func (*landingZoneIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneIam)(nil)).Elem()
}

func (i *landingZoneIamPtrType) ToLandingZoneIamPtrOutput() LandingZoneIamPtrOutput {
	return i.ToLandingZoneIamPtrOutputWithContext(context.Background())
}

func (i *landingZoneIamPtrType) ToLandingZoneIamPtrOutputWithContext(ctx context.Context) LandingZoneIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneIamPtrOutput)
}

type LandingZoneIamOutput struct{ *pulumi.OutputState }

func (LandingZoneIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneIam)(nil)).Elem()
}

func (o LandingZoneIamOutput) ToLandingZoneIamOutput() LandingZoneIamOutput {
	return o
}

func (o LandingZoneIamOutput) ToLandingZoneIamOutputWithContext(ctx context.Context) LandingZoneIamOutput {
	return o
}

func (o LandingZoneIamOutput) ToLandingZoneIamPtrOutput() LandingZoneIamPtrOutput {
	return o.ToLandingZoneIamPtrOutputWithContext(context.Background())
}

func (o LandingZoneIamOutput) ToLandingZoneIamPtrOutputWithContext(ctx context.Context) LandingZoneIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LandingZoneIam) *LandingZoneIam {
		return &v
	}).(LandingZoneIamPtrOutput)
}

func (o LandingZoneIamOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LandingZoneIam) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

func (o LandingZoneIamOutput) Roles() LandingZoneIamRoleArrayOutput {
	return o.ApplyT(func(v LandingZoneIam) []LandingZoneIamRole { return v.Roles }).(LandingZoneIamRoleArrayOutput)
}

type LandingZoneIamPtrOutput struct{ *pulumi.OutputState }

func (LandingZoneIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LandingZoneIam)(nil)).Elem()
}

func (o LandingZoneIamPtrOutput) ToLandingZoneIamPtrOutput() LandingZoneIamPtrOutput {
	return o
}

func (o LandingZoneIamPtrOutput) ToLandingZoneIamPtrOutputWithContext(ctx context.Context) LandingZoneIamPtrOutput {
	return o
}

func (o LandingZoneIamPtrOutput) Elem() LandingZoneIamOutput {
	return o.ApplyT(func(v *LandingZoneIam) LandingZoneIam {
		if v != nil {
			return *v
		}
		var ret LandingZoneIam
		return ret
	}).(LandingZoneIamOutput)
}

func (o LandingZoneIamPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LandingZoneIam) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

func (o LandingZoneIamPtrOutput) Roles() LandingZoneIamRoleArrayOutput {
	return o.ApplyT(func(v *LandingZoneIam) []LandingZoneIamRole {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(LandingZoneIamRoleArrayOutput)
}

type LandingZoneIamRole struct {
	Name        string   `pulumi:"name"`
	PolicyNames []string `pulumi:"policyNames"`
}

// LandingZoneIamRoleInput is an input type that accepts LandingZoneIamRoleArgs and LandingZoneIamRoleOutput values.
// You can construct a concrete instance of `LandingZoneIamRoleInput` via:
//
//	LandingZoneIamRoleArgs{...}
type LandingZoneIamRoleInput interface {
	pulumi.Input

	ToLandingZoneIamRoleOutput() LandingZoneIamRoleOutput
	ToLandingZoneIamRoleOutputWithContext(context.Context) LandingZoneIamRoleOutput
}

type LandingZoneIamRoleArgs struct {
	Name        pulumi.StringInput      `pulumi:"name"`
	PolicyNames pulumi.StringArrayInput `pulumi:"policyNames"`
}

func (LandingZoneIamRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneIamRole)(nil)).Elem()
}

func (i LandingZoneIamRoleArgs) ToLandingZoneIamRoleOutput() LandingZoneIamRoleOutput {
	return i.ToLandingZoneIamRoleOutputWithContext(context.Background())
}

func (i LandingZoneIamRoleArgs) ToLandingZoneIamRoleOutputWithContext(ctx context.Context) LandingZoneIamRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneIamRoleOutput)
}

// LandingZoneIamRoleArrayInput is an input type that accepts LandingZoneIamRoleArray and LandingZoneIamRoleArrayOutput values.
// You can construct a concrete instance of `LandingZoneIamRoleArrayInput` via:
//
//	LandingZoneIamRoleArray{ LandingZoneIamRoleArgs{...} }
type LandingZoneIamRoleArrayInput interface {
	pulumi.Input

	ToLandingZoneIamRoleArrayOutput() LandingZoneIamRoleArrayOutput
	ToLandingZoneIamRoleArrayOutputWithContext(context.Context) LandingZoneIamRoleArrayOutput
}

type LandingZoneIamRoleArray []LandingZoneIamRoleInput

func (LandingZoneIamRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LandingZoneIamRole)(nil)).Elem()
}

func (i LandingZoneIamRoleArray) ToLandingZoneIamRoleArrayOutput() LandingZoneIamRoleArrayOutput {
	return i.ToLandingZoneIamRoleArrayOutputWithContext(context.Background())
}

func (i LandingZoneIamRoleArray) ToLandingZoneIamRoleArrayOutputWithContext(ctx context.Context) LandingZoneIamRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LandingZoneIamRoleArrayOutput)
}

type LandingZoneIamRoleOutput struct{ *pulumi.OutputState }

func (LandingZoneIamRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LandingZoneIamRole)(nil)).Elem()
}

func (o LandingZoneIamRoleOutput) ToLandingZoneIamRoleOutput() LandingZoneIamRoleOutput {
	return o
}

func (o LandingZoneIamRoleOutput) ToLandingZoneIamRoleOutputWithContext(ctx context.Context) LandingZoneIamRoleOutput {
	return o
}

func (o LandingZoneIamRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LandingZoneIamRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o LandingZoneIamRoleOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LandingZoneIamRole) []string { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

type LandingZoneIamRoleArrayOutput struct{ *pulumi.OutputState }

func (LandingZoneIamRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LandingZoneIamRole)(nil)).Elem()
}

func (o LandingZoneIamRoleArrayOutput) ToLandingZoneIamRoleArrayOutput() LandingZoneIamRoleArrayOutput {
	return o
}

func (o LandingZoneIamRoleArrayOutput) ToLandingZoneIamRoleArrayOutputWithContext(ctx context.Context) LandingZoneIamRoleArrayOutput {
	return o
}

func (o LandingZoneIamRoleArrayOutput) Index(i pulumi.IntInput) LandingZoneIamRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LandingZoneIamRole {
		return vs[0].([]LandingZoneIamRole)[vs[1].(int)]
	}).(LandingZoneIamRoleOutput)
}

type OrganizationType struct {
	// The list of AWS Account to be configured in the Organization.
	Accounts []OrganizationAccount `pulumi:"accounts"`
	// The list of enabled Organizations Policies in the organization.
	EnabledPolicies []string `pulumi:"enabledPolicies"`
	// The FeatureSet in the Organization..
	FeatureSet *string `pulumi:"featureSet"`
	// The organization ID to import the Organization in the stack. If not set a new AWS Organization will be created. Defaults to undefined.
	OrganizationId *string `pulumi:"organizationId"`
	// The Organization policies to be applied.
	Policies *OrganizationPolicies `pulumi:"policies"`
	// The list of AWS Service Access Principals enabled in the organization.
	Services []string `pulumi:"services"`
}

// OrganizationTypeInput is an input type that accepts OrganizationTypeArgs and OrganizationTypeOutput values.
// You can construct a concrete instance of `OrganizationTypeInput` via:
//
//	OrganizationTypeArgs{...}
type OrganizationTypeInput interface {
	pulumi.Input

	ToOrganizationTypeOutput() OrganizationTypeOutput
	ToOrganizationTypeOutputWithContext(context.Context) OrganizationTypeOutput
}

type OrganizationTypeArgs struct {
	// The list of AWS Account to be configured in the Organization.
	Accounts OrganizationAccountArrayInput `pulumi:"accounts"`
	// The list of enabled Organizations Policies in the organization.
	EnabledPolicies pulumi.StringArrayInput `pulumi:"enabledPolicies"`
	// The FeatureSet in the Organization..
	FeatureSet pulumi.StringPtrInput `pulumi:"featureSet"`
	// The organization ID to import the Organization in the stack. If not set a new AWS Organization will be created. Defaults to undefined.
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// The Organization policies to be applied.
	Policies OrganizationPoliciesPtrInput `pulumi:"policies"`
	// The list of AWS Service Access Principals enabled in the organization.
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (OrganizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationType)(nil)).Elem()
}

func (i OrganizationTypeArgs) ToOrganizationTypeOutput() OrganizationTypeOutput {
	return i.ToOrganizationTypeOutputWithContext(context.Background())
}

func (i OrganizationTypeArgs) ToOrganizationTypeOutputWithContext(ctx context.Context) OrganizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTypeOutput)
}

func (i OrganizationTypeArgs) ToOrganizationTypePtrOutput() OrganizationTypePtrOutput {
	return i.ToOrganizationTypePtrOutputWithContext(context.Background())
}

func (i OrganizationTypeArgs) ToOrganizationTypePtrOutputWithContext(ctx context.Context) OrganizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTypeOutput).ToOrganizationTypePtrOutputWithContext(ctx)
}

// OrganizationTypePtrInput is an input type that accepts OrganizationTypeArgs, OrganizationTypePtr and OrganizationTypePtrOutput values.
// You can construct a concrete instance of `OrganizationTypePtrInput` via:
//
//	        OrganizationTypeArgs{...}
//
//	or:
//
//	        nil
type OrganizationTypePtrInput interface {
	pulumi.Input

	ToOrganizationTypePtrOutput() OrganizationTypePtrOutput
	ToOrganizationTypePtrOutputWithContext(context.Context) OrganizationTypePtrOutput
}

type organizationTypePtrType OrganizationTypeArgs

func OrganizationTypePtr(v *OrganizationTypeArgs) OrganizationTypePtrInput {
	return (*organizationTypePtrType)(v)
}

func (*organizationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationType)(nil)).Elem()
}

func (i *organizationTypePtrType) ToOrganizationTypePtrOutput() OrganizationTypePtrOutput {
	return i.ToOrganizationTypePtrOutputWithContext(context.Background())
}

func (i *organizationTypePtrType) ToOrganizationTypePtrOutputWithContext(ctx context.Context) OrganizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationTypePtrOutput)
}

type OrganizationTypeOutput struct{ *pulumi.OutputState }

func (OrganizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationType)(nil)).Elem()
}

func (o OrganizationTypeOutput) ToOrganizationTypeOutput() OrganizationTypeOutput {
	return o
}

func (o OrganizationTypeOutput) ToOrganizationTypeOutputWithContext(ctx context.Context) OrganizationTypeOutput {
	return o
}

func (o OrganizationTypeOutput) ToOrganizationTypePtrOutput() OrganizationTypePtrOutput {
	return o.ToOrganizationTypePtrOutputWithContext(context.Background())
}

func (o OrganizationTypeOutput) ToOrganizationTypePtrOutputWithContext(ctx context.Context) OrganizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationType) *OrganizationType {
		return &v
	}).(OrganizationTypePtrOutput)
}

// The list of AWS Account to be configured in the Organization.
func (o OrganizationTypeOutput) Accounts() OrganizationAccountArrayOutput {
	return o.ApplyT(func(v OrganizationType) []OrganizationAccount { return v.Accounts }).(OrganizationAccountArrayOutput)
}

// The list of enabled Organizations Policies in the organization.
func (o OrganizationTypeOutput) EnabledPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationType) []string { return v.EnabledPolicies }).(pulumi.StringArrayOutput)
}

// The FeatureSet in the Organization..
func (o OrganizationTypeOutput) FeatureSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationType) *string { return v.FeatureSet }).(pulumi.StringPtrOutput)
}

// The organization ID to import the Organization in the stack. If not set a new AWS Organization will be created. Defaults to undefined.
func (o OrganizationTypeOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationType) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// The Organization policies to be applied.
func (o OrganizationTypeOutput) Policies() OrganizationPoliciesPtrOutput {
	return o.ApplyT(func(v OrganizationType) *OrganizationPolicies { return v.Policies }).(OrganizationPoliciesPtrOutput)
}

// The list of AWS Service Access Principals enabled in the organization.
func (o OrganizationTypeOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrganizationType) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type OrganizationTypePtrOutput struct{ *pulumi.OutputState }

func (OrganizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationType)(nil)).Elem()
}

func (o OrganizationTypePtrOutput) ToOrganizationTypePtrOutput() OrganizationTypePtrOutput {
	return o
}

func (o OrganizationTypePtrOutput) ToOrganizationTypePtrOutputWithContext(ctx context.Context) OrganizationTypePtrOutput {
	return o
}

func (o OrganizationTypePtrOutput) Elem() OrganizationTypeOutput {
	return o.ApplyT(func(v *OrganizationType) OrganizationType {
		if v != nil {
			return *v
		}
		var ret OrganizationType
		return ret
	}).(OrganizationTypeOutput)
}

// The list of AWS Account to be configured in the Organization.
func (o OrganizationTypePtrOutput) Accounts() OrganizationAccountArrayOutput {
	return o.ApplyT(func(v *OrganizationType) []OrganizationAccount {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(OrganizationAccountArrayOutput)
}

// The list of enabled Organizations Policies in the organization.
func (o OrganizationTypePtrOutput) EnabledPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationType) []string {
		if v == nil {
			return nil
		}
		return v.EnabledPolicies
	}).(pulumi.StringArrayOutput)
}

// The FeatureSet in the Organization..
func (o OrganizationTypePtrOutput) FeatureSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationType) *string {
		if v == nil {
			return nil
		}
		return v.FeatureSet
	}).(pulumi.StringPtrOutput)
}

// The organization ID to import the Organization in the stack. If not set a new AWS Organization will be created. Defaults to undefined.
func (o OrganizationTypePtrOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationType) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationId
	}).(pulumi.StringPtrOutput)
}

// The Organization policies to be applied.
func (o OrganizationTypePtrOutput) Policies() OrganizationPoliciesPtrOutput {
	return o.ApplyT(func(v *OrganizationType) *OrganizationPolicies {
		if v == nil {
			return nil
		}
		return v.Policies
	}).(OrganizationPoliciesPtrOutput)
}

// The list of AWS Service Access Principals enabled in the organization.
func (o OrganizationTypePtrOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationType) []string {
		if v == nil {
			return nil
		}
		return v.Services
	}).(pulumi.StringArrayOutput)
}

type OrganizationAccount struct {
	// The AWS Account ID to be used to import the Account in the Organization. If not set, a new AWS Account will be created.
	AccountId *string `pulumi:"accountId"`
	// Admin role for the IAM Account.
	AdminRoleName *string `pulumi:"adminRoleName"`
	// The email associated to the IAM Account.
	Email string `pulumi:"email"`
	// The configuration for IAM.
	Iam AccountIamType `pulumi:"iam"`
	// The name of the IAM Account.
	Name string  `pulumi:"name"`
	Ou   *string `pulumi:"ou"`
	// The parentId of the imported account.
	ParentId *string `pulumi:"parentId"`
}

// OrganizationAccountInput is an input type that accepts OrganizationAccountArgs and OrganizationAccountOutput values.
// You can construct a concrete instance of `OrganizationAccountInput` via:
//
//	OrganizationAccountArgs{...}
type OrganizationAccountInput interface {
	pulumi.Input

	ToOrganizationAccountOutput() OrganizationAccountOutput
	ToOrganizationAccountOutputWithContext(context.Context) OrganizationAccountOutput
}

type OrganizationAccountArgs struct {
	// The AWS Account ID to be used to import the Account in the Organization. If not set, a new AWS Account will be created.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Admin role for the IAM Account.
	AdminRoleName pulumi.StringPtrInput `pulumi:"adminRoleName"`
	// The email associated to the IAM Account.
	Email pulumi.StringInput `pulumi:"email"`
	// The configuration for IAM.
	Iam AccountIamTypeInput `pulumi:"iam"`
	// The name of the IAM Account.
	Name pulumi.StringInput    `pulumi:"name"`
	Ou   pulumi.StringPtrInput `pulumi:"ou"`
	// The parentId of the imported account.
	ParentId pulumi.StringPtrInput `pulumi:"parentId"`
}

func (OrganizationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return i.ToOrganizationAccountOutputWithContext(context.Background())
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountOutput)
}

// OrganizationAccountArrayInput is an input type that accepts OrganizationAccountArray and OrganizationAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationAccountArrayInput` via:
//
//	OrganizationAccountArray{ OrganizationAccountArgs{...} }
type OrganizationAccountArrayInput interface {
	pulumi.Input

	ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput
	ToOrganizationAccountArrayOutputWithContext(context.Context) OrganizationAccountArrayOutput
}

type OrganizationAccountArray []OrganizationAccountInput

func (OrganizationAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return i.ToOrganizationAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountArrayOutput)
}

type OrganizationAccountOutput struct{ *pulumi.OutputState }

func (OrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return o
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return o
}

// The AWS Account ID to be used to import the Account in the Organization. If not set, a new AWS Account will be created.
func (o OrganizationAccountOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Admin role for the IAM Account.
func (o OrganizationAccountOutput) AdminRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.AdminRoleName }).(pulumi.StringPtrOutput)
}

// The email associated to the IAM Account.
func (o OrganizationAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Email }).(pulumi.StringOutput)
}

// The configuration for IAM.
func (o OrganizationAccountOutput) Iam() AccountIamTypeOutput {
	return o.ApplyT(func(v OrganizationAccount) AccountIamType { return v.Iam }).(AccountIamTypeOutput)
}

// The name of the IAM Account.
func (o OrganizationAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Name }).(pulumi.StringOutput)
}

func (o OrganizationAccountOutput) Ou() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Ou }).(pulumi.StringPtrOutput)
}

// The parentId of the imported account.
func (o OrganizationAccountOutput) ParentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.ParentId }).(pulumi.StringPtrOutput)
}

type OrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) Index(i pulumi.IntInput) OrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccount {
		return vs[0].([]OrganizationAccount)[vs[1].(int)]
	}).(OrganizationAccountOutput)
}

type OrganizationAccountProviderMapping struct {
	AccountName string        `pulumi:"accountName"`
	Provider    *aws.Provider `pulumi:"provider"`
}

type OrganizationAccountProviderMappingOutput struct{ *pulumi.OutputState }

func (OrganizationAccountProviderMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccountProviderMapping)(nil)).Elem()
}

func (o OrganizationAccountProviderMappingOutput) ToOrganizationAccountProviderMappingOutput() OrganizationAccountProviderMappingOutput {
	return o
}

func (o OrganizationAccountProviderMappingOutput) ToOrganizationAccountProviderMappingOutputWithContext(ctx context.Context) OrganizationAccountProviderMappingOutput {
	return o
}

func (o OrganizationAccountProviderMappingOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccountProviderMapping) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o OrganizationAccountProviderMappingOutput) Provider() aws.ProviderOutput {
	return o.ApplyT(func(v OrganizationAccountProviderMapping) *aws.Provider { return v.Provider }).(aws.ProviderOutput)
}

type OrganizationAccountProviderMappingArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountProviderMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccountProviderMapping)(nil)).Elem()
}

func (o OrganizationAccountProviderMappingArrayOutput) ToOrganizationAccountProviderMappingArrayOutput() OrganizationAccountProviderMappingArrayOutput {
	return o
}

func (o OrganizationAccountProviderMappingArrayOutput) ToOrganizationAccountProviderMappingArrayOutputWithContext(ctx context.Context) OrganizationAccountProviderMappingArrayOutput {
	return o
}

func (o OrganizationAccountProviderMappingArrayOutput) Index(i pulumi.IntInput) OrganizationAccountProviderMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccountProviderMapping {
		return vs[0].([]OrganizationAccountProviderMapping)[vs[1].(int)]
	}).(OrganizationAccountProviderMappingOutput)
}

type OrganizationPolicies struct {
	// Deny IAM Account to leave the organization. Enabled by default.
	DenyLeaveOrganization *OrganizationPolicy `pulumi:"denyLeaveOrganization"`
}

// OrganizationPoliciesInput is an input type that accepts OrganizationPoliciesArgs and OrganizationPoliciesOutput values.
// You can construct a concrete instance of `OrganizationPoliciesInput` via:
//
//	OrganizationPoliciesArgs{...}
type OrganizationPoliciesInput interface {
	pulumi.Input

	ToOrganizationPoliciesOutput() OrganizationPoliciesOutput
	ToOrganizationPoliciesOutputWithContext(context.Context) OrganizationPoliciesOutput
}

type OrganizationPoliciesArgs struct {
	// Deny IAM Account to leave the organization. Enabled by default.
	DenyLeaveOrganization OrganizationPolicyPtrInput `pulumi:"denyLeaveOrganization"`
}

func (OrganizationPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicies)(nil)).Elem()
}

func (i OrganizationPoliciesArgs) ToOrganizationPoliciesOutput() OrganizationPoliciesOutput {
	return i.ToOrganizationPoliciesOutputWithContext(context.Background())
}

func (i OrganizationPoliciesArgs) ToOrganizationPoliciesOutputWithContext(ctx context.Context) OrganizationPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPoliciesOutput)
}

func (i OrganizationPoliciesArgs) ToOrganizationPoliciesPtrOutput() OrganizationPoliciesPtrOutput {
	return i.ToOrganizationPoliciesPtrOutputWithContext(context.Background())
}

func (i OrganizationPoliciesArgs) ToOrganizationPoliciesPtrOutputWithContext(ctx context.Context) OrganizationPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPoliciesOutput).ToOrganizationPoliciesPtrOutputWithContext(ctx)
}

// OrganizationPoliciesPtrInput is an input type that accepts OrganizationPoliciesArgs, OrganizationPoliciesPtr and OrganizationPoliciesPtrOutput values.
// You can construct a concrete instance of `OrganizationPoliciesPtrInput` via:
//
//	        OrganizationPoliciesArgs{...}
//
//	or:
//
//	        nil
type OrganizationPoliciesPtrInput interface {
	pulumi.Input

	ToOrganizationPoliciesPtrOutput() OrganizationPoliciesPtrOutput
	ToOrganizationPoliciesPtrOutputWithContext(context.Context) OrganizationPoliciesPtrOutput
}

type organizationPoliciesPtrType OrganizationPoliciesArgs

func OrganizationPoliciesPtr(v *OrganizationPoliciesArgs) OrganizationPoliciesPtrInput {
	return (*organizationPoliciesPtrType)(v)
}

func (*organizationPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicies)(nil)).Elem()
}

func (i *organizationPoliciesPtrType) ToOrganizationPoliciesPtrOutput() OrganizationPoliciesPtrOutput {
	return i.ToOrganizationPoliciesPtrOutputWithContext(context.Background())
}

func (i *organizationPoliciesPtrType) ToOrganizationPoliciesPtrOutputWithContext(ctx context.Context) OrganizationPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPoliciesPtrOutput)
}

type OrganizationPoliciesOutput struct{ *pulumi.OutputState }

func (OrganizationPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicies)(nil)).Elem()
}

func (o OrganizationPoliciesOutput) ToOrganizationPoliciesOutput() OrganizationPoliciesOutput {
	return o
}

func (o OrganizationPoliciesOutput) ToOrganizationPoliciesOutputWithContext(ctx context.Context) OrganizationPoliciesOutput {
	return o
}

func (o OrganizationPoliciesOutput) ToOrganizationPoliciesPtrOutput() OrganizationPoliciesPtrOutput {
	return o.ToOrganizationPoliciesPtrOutputWithContext(context.Background())
}

func (o OrganizationPoliciesOutput) ToOrganizationPoliciesPtrOutputWithContext(ctx context.Context) OrganizationPoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicies) *OrganizationPolicies {
		return &v
	}).(OrganizationPoliciesPtrOutput)
}

// Deny IAM Account to leave the organization. Enabled by default.
func (o OrganizationPoliciesOutput) DenyLeaveOrganization() OrganizationPolicyPtrOutput {
	return o.ApplyT(func(v OrganizationPolicies) *OrganizationPolicy { return v.DenyLeaveOrganization }).(OrganizationPolicyPtrOutput)
}

type OrganizationPoliciesPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicies)(nil)).Elem()
}

func (o OrganizationPoliciesPtrOutput) ToOrganizationPoliciesPtrOutput() OrganizationPoliciesPtrOutput {
	return o
}

func (o OrganizationPoliciesPtrOutput) ToOrganizationPoliciesPtrOutputWithContext(ctx context.Context) OrganizationPoliciesPtrOutput {
	return o
}

func (o OrganizationPoliciesPtrOutput) Elem() OrganizationPoliciesOutput {
	return o.ApplyT(func(v *OrganizationPolicies) OrganizationPolicies {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicies
		return ret
	}).(OrganizationPoliciesOutput)
}

// Deny IAM Account to leave the organization. Enabled by default.
func (o OrganizationPoliciesPtrOutput) DenyLeaveOrganization() OrganizationPolicyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicies) *OrganizationPolicy {
		if v == nil {
			return nil
		}
		return v.DenyLeaveOrganization
	}).(OrganizationPolicyPtrOutput)
}

type OrganizationPolicy struct {
	// Enable the policy/
	Enabled *bool `pulumi:"enabled"`
	// Import the policy with the given id
	PolicyId *string `pulumi:"policyId"`
}

// OrganizationPolicyInput is an input type that accepts OrganizationPolicyArgs and OrganizationPolicyOutput values.
// You can construct a concrete instance of `OrganizationPolicyInput` via:
//
//	OrganizationPolicyArgs{...}
type OrganizationPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyOutput() OrganizationPolicyOutput
	ToOrganizationPolicyOutputWithContext(context.Context) OrganizationPolicyOutput
}

type OrganizationPolicyArgs struct {
	// Enable the policy/
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Import the policy with the given id
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
}

func (OrganizationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicy)(nil)).Elem()
}

func (i OrganizationPolicyArgs) ToOrganizationPolicyOutput() OrganizationPolicyOutput {
	return i.ToOrganizationPolicyOutputWithContext(context.Background())
}

func (i OrganizationPolicyArgs) ToOrganizationPolicyOutputWithContext(ctx context.Context) OrganizationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyOutput)
}

func (i OrganizationPolicyArgs) ToOrganizationPolicyPtrOutput() OrganizationPolicyPtrOutput {
	return i.ToOrganizationPolicyPtrOutputWithContext(context.Background())
}

func (i OrganizationPolicyArgs) ToOrganizationPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyOutput).ToOrganizationPolicyPtrOutputWithContext(ctx)
}

// OrganizationPolicyPtrInput is an input type that accepts OrganizationPolicyArgs, OrganizationPolicyPtr and OrganizationPolicyPtrOutput values.
// You can construct a concrete instance of `OrganizationPolicyPtrInput` via:
//
//	        OrganizationPolicyArgs{...}
//
//	or:
//
//	        nil
type OrganizationPolicyPtrInput interface {
	pulumi.Input

	ToOrganizationPolicyPtrOutput() OrganizationPolicyPtrOutput
	ToOrganizationPolicyPtrOutputWithContext(context.Context) OrganizationPolicyPtrOutput
}

type organizationPolicyPtrType OrganizationPolicyArgs

func OrganizationPolicyPtr(v *OrganizationPolicyArgs) OrganizationPolicyPtrInput {
	return (*organizationPolicyPtrType)(v)
}

func (*organizationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicy)(nil)).Elem()
}

func (i *organizationPolicyPtrType) ToOrganizationPolicyPtrOutput() OrganizationPolicyPtrOutput {
	return i.ToOrganizationPolicyPtrOutputWithContext(context.Background())
}

func (i *organizationPolicyPtrType) ToOrganizationPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyPtrOutput)
}

type OrganizationPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationPolicy)(nil)).Elem()
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyOutput() OrganizationPolicyOutput {
	return o
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyOutputWithContext(ctx context.Context) OrganizationPolicyOutput {
	return o
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyPtrOutput() OrganizationPolicyPtrOutput {
	return o.ToOrganizationPolicyPtrOutputWithContext(context.Background())
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationPolicy) *OrganizationPolicy {
		return &v
	}).(OrganizationPolicyPtrOutput)
}

// Enable the policy/
func (o OrganizationPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Import the policy with the given id
func (o OrganizationPolicyOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationPolicy) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

type OrganizationPolicyPtrOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicy)(nil)).Elem()
}

func (o OrganizationPolicyPtrOutput) ToOrganizationPolicyPtrOutput() OrganizationPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyPtrOutput) ToOrganizationPolicyPtrOutputWithContext(ctx context.Context) OrganizationPolicyPtrOutput {
	return o
}

func (o OrganizationPolicyPtrOutput) Elem() OrganizationPolicyOutput {
	return o.ApplyT(func(v *OrganizationPolicy) OrganizationPolicy {
		if v != nil {
			return *v
		}
		var ret OrganizationPolicy
		return ret
	}).(OrganizationPolicyOutput)
}

// Enable the policy/
func (o OrganizationPolicyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Import the policy with the given id
func (o OrganizationPolicyPtrOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyId
	}).(pulumi.StringPtrOutput)
}

type OrganizationalUnitMapping struct {
	AccountName        string                            `pulumi:"accountName"`
	OrganizationalUnit *organizations.OrganizationalUnit `pulumi:"organizationalUnit"`
}

type OrganizationalUnitMappingOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitMapping)(nil)).Elem()
}

func (o OrganizationalUnitMappingOutput) ToOrganizationalUnitMappingOutput() OrganizationalUnitMappingOutput {
	return o
}

func (o OrganizationalUnitMappingOutput) ToOrganizationalUnitMappingOutputWithContext(ctx context.Context) OrganizationalUnitMappingOutput {
	return o
}

func (o OrganizationalUnitMappingOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitMapping) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o OrganizationalUnitMappingOutput) OrganizationalUnit() organizations.OrganizationalUnitOutput {
	return o.ApplyT(func(v OrganizationalUnitMapping) *organizations.OrganizationalUnit { return v.OrganizationalUnit }).(organizations.OrganizationalUnitOutput)
}

type OrganizationalUnitMappingArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitMapping)(nil)).Elem()
}

func (o OrganizationalUnitMappingArrayOutput) ToOrganizationalUnitMappingArrayOutput() OrganizationalUnitMappingArrayOutput {
	return o
}

func (o OrganizationalUnitMappingArrayOutput) ToOrganizationalUnitMappingArrayOutputWithContext(ctx context.Context) OrganizationalUnitMappingArrayOutput {
	return o
}

func (o OrganizationalUnitMappingArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitMapping {
		return vs[0].([]OrganizationalUnitMapping)[vs[1].(int)]
	}).(OrganizationalUnitMappingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIamTypeInput)(nil)).Elem(), AccountIamTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyInput)(nil)).Elem(), AccountPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyPtrInput)(nil)).Elem(), AccountPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyRulesInput)(nil)).Elem(), AccountPasswordPolicyRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyRulesPtrInput)(nil)).Elem(), AccountPasswordPolicyRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLoggingCloudWatchInput)(nil)).Elem(), AuditLoggingCloudWatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLoggingCloudWatchPtrInput)(nil)).Elem(), AuditLoggingCloudWatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustedAccountRoleInput)(nil)).Elem(), IamTrustedAccountRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustedAccountRoleArrayInput)(nil)).Elem(), IamTrustedAccountRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustingAccountRoleInput)(nil)).Elem(), IamTrustingAccountRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamTrustingAccountRoleArrayInput)(nil)).Elem(), IamTrustingAccountRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneAuditInput)(nil)).Elem(), LandingZoneAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneAuditPtrInput)(nil)).Elem(), LandingZoneAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneAuditCloudWatchInput)(nil)).Elem(), LandingZoneAuditCloudWatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneAuditCloudWatchPtrInput)(nil)).Elem(), LandingZoneAuditCloudWatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneIamInput)(nil)).Elem(), LandingZoneIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneIamPtrInput)(nil)).Elem(), LandingZoneIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneIamRoleInput)(nil)).Elem(), LandingZoneIamRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LandingZoneIamRoleArrayInput)(nil)).Elem(), LandingZoneIamRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTypeInput)(nil)).Elem(), OrganizationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationTypePtrInput)(nil)).Elem(), OrganizationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAccountInput)(nil)).Elem(), OrganizationAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAccountArrayInput)(nil)).Elem(), OrganizationAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPoliciesInput)(nil)).Elem(), OrganizationPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPoliciesPtrInput)(nil)).Elem(), OrganizationPoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyInput)(nil)).Elem(), OrganizationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyPtrInput)(nil)).Elem(), OrganizationPolicyArgs{})
	pulumi.RegisterOutputType(AccountIamTypeOutput{})
	pulumi.RegisterOutputType(AccountMappingOutput{})
	pulumi.RegisterOutputType(AccountMappingArrayOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyRulesOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyRulesPtrOutput{})
	pulumi.RegisterOutputType(AuditLoggingCloudWatchOutput{})
	pulumi.RegisterOutputType(AuditLoggingCloudWatchPtrOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleArrayOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleGroupMappingOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleGroupMappingArrayOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleGroupPolicyMappingOutput{})
	pulumi.RegisterOutputType(IamTrustedAccountRoleGroupPolicyMappingArrayOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRoleOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRoleArrayOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRoleMappingOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRolePolicyAttachmentMappingOutput{})
	pulumi.RegisterOutputType(IamTrustingAccountRolePolicyAttachmentMappingArrayOutput{})
	pulumi.RegisterOutputType(LandingZoneAuditOutput{})
	pulumi.RegisterOutputType(LandingZoneAuditPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneAuditCloudWatchOutput{})
	pulumi.RegisterOutputType(LandingZoneAuditCloudWatchPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneIamOutput{})
	pulumi.RegisterOutputType(LandingZoneIamPtrOutput{})
	pulumi.RegisterOutputType(LandingZoneIamRoleOutput{})
	pulumi.RegisterOutputType(LandingZoneIamRoleArrayOutput{})
	pulumi.RegisterOutputType(OrganizationTypeOutput{})
	pulumi.RegisterOutputType(OrganizationTypePtrOutput{})
	pulumi.RegisterOutputType(OrganizationAccountOutput{})
	pulumi.RegisterOutputType(OrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationAccountProviderMappingOutput{})
	pulumi.RegisterOutputType(OrganizationAccountProviderMappingArrayOutput{})
	pulumi.RegisterOutputType(OrganizationPoliciesOutput{})
	pulumi.RegisterOutputType(OrganizationPoliciesPtrOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyOutput{})
	pulumi.RegisterOutputType(OrganizationPolicyPtrOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitMappingOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitMappingArrayOutput{})
}
