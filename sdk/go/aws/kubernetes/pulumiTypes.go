// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Addons struct {
	// Enable the ClusterAddons.
	Enabled bool `pulumi:"enabled"`
}

// AddonsInput is an input type that accepts AddonsArgs and AddonsOutput values.
// You can construct a concrete instance of `AddonsInput` via:
//
//	AddonsArgs{...}
type AddonsInput interface {
	pulumi.Input

	ToAddonsOutput() AddonsOutput
	ToAddonsOutputWithContext(context.Context) AddonsOutput
}

type AddonsArgs struct {
	// Enable the ClusterAddons.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (AddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Addons)(nil)).Elem()
}

func (i AddonsArgs) ToAddonsOutput() AddonsOutput {
	return i.ToAddonsOutputWithContext(context.Background())
}

func (i AddonsArgs) ToAddonsOutputWithContext(ctx context.Context) AddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonsOutput)
}

func (i AddonsArgs) ToAddonsPtrOutput() AddonsPtrOutput {
	return i.ToAddonsPtrOutputWithContext(context.Background())
}

func (i AddonsArgs) ToAddonsPtrOutputWithContext(ctx context.Context) AddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonsOutput).ToAddonsPtrOutputWithContext(ctx)
}

// AddonsPtrInput is an input type that accepts AddonsArgs, AddonsPtr and AddonsPtrOutput values.
// You can construct a concrete instance of `AddonsPtrInput` via:
//
//	        AddonsArgs{...}
//
//	or:
//
//	        nil
type AddonsPtrInput interface {
	pulumi.Input

	ToAddonsPtrOutput() AddonsPtrOutput
	ToAddonsPtrOutputWithContext(context.Context) AddonsPtrOutput
}

type addonsPtrType AddonsArgs

func AddonsPtr(v *AddonsArgs) AddonsPtrInput {
	return (*addonsPtrType)(v)
}

func (*addonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Addons)(nil)).Elem()
}

func (i *addonsPtrType) ToAddonsPtrOutput() AddonsPtrOutput {
	return i.ToAddonsPtrOutputWithContext(context.Background())
}

func (i *addonsPtrType) ToAddonsPtrOutputWithContext(ctx context.Context) AddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddonsPtrOutput)
}

type AddonsOutput struct{ *pulumi.OutputState }

func (AddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Addons)(nil)).Elem()
}

func (o AddonsOutput) ToAddonsOutput() AddonsOutput {
	return o
}

func (o AddonsOutput) ToAddonsOutputWithContext(ctx context.Context) AddonsOutput {
	return o
}

func (o AddonsOutput) ToAddonsPtrOutput() AddonsPtrOutput {
	return o.ToAddonsPtrOutputWithContext(context.Background())
}

func (o AddonsOutput) ToAddonsPtrOutputWithContext(ctx context.Context) AddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Addons) *Addons {
		return &v
	}).(AddonsPtrOutput)
}

// Enable the ClusterAddons.
func (o AddonsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v Addons) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type AddonsPtrOutput struct{ *pulumi.OutputState }

func (AddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Addons)(nil)).Elem()
}

func (o AddonsPtrOutput) ToAddonsPtrOutput() AddonsPtrOutput {
	return o
}

func (o AddonsPtrOutput) ToAddonsPtrOutputWithContext(ctx context.Context) AddonsPtrOutput {
	return o
}

func (o AddonsPtrOutput) Elem() AddonsOutput {
	return o.ApplyT(func(v *Addons) Addons {
		if v != nil {
			return *v
		}
		var ret Addons
		return ret
	}).(AddonsOutput)
}

// Enable the ClusterAddons.
func (o AddonsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Addons) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AdotApplicationType struct {
	// The AWS Region.
	AwsRegion string `pulumi:"awsRegion"`
	// The cluster name.
	ClusterName string `pulumi:"clusterName"`
	// Configure metrics.
	Metrics *AdotApplicationMetrics `pulumi:"metrics"`
}

type AdotApplicationLoggingItem struct {
	// Data retention expressed in days.
	DataRetention float64 `pulumi:"dataRetention"`
}

type AdotApplicationMetrics struct {
	// Data retention expressed in days.
	DataRetention *float64 `pulumi:"dataRetention"`
	// Enable metrics.
	Enabled *bool `pulumi:"enabled"`
}

// AdotApplicationMetricsInput is an input type that accepts AdotApplicationMetricsArgs and AdotApplicationMetricsOutput values.
// You can construct a concrete instance of `AdotApplicationMetricsInput` via:
//
//	AdotApplicationMetricsArgs{...}
type AdotApplicationMetricsInput interface {
	pulumi.Input

	ToAdotApplicationMetricsOutput() AdotApplicationMetricsOutput
	ToAdotApplicationMetricsOutputWithContext(context.Context) AdotApplicationMetricsOutput
}

type AdotApplicationMetricsArgs struct {
	// Data retention expressed in days.
	DataRetention pulumi.Float64PtrInput `pulumi:"dataRetention"`
	// Enable metrics.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AdotApplicationMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdotApplicationMetrics)(nil)).Elem()
}

func (i AdotApplicationMetricsArgs) ToAdotApplicationMetricsOutput() AdotApplicationMetricsOutput {
	return i.ToAdotApplicationMetricsOutputWithContext(context.Background())
}

func (i AdotApplicationMetricsArgs) ToAdotApplicationMetricsOutputWithContext(ctx context.Context) AdotApplicationMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationMetricsOutput)
}

func (i AdotApplicationMetricsArgs) ToAdotApplicationMetricsPtrOutput() AdotApplicationMetricsPtrOutput {
	return i.ToAdotApplicationMetricsPtrOutputWithContext(context.Background())
}

func (i AdotApplicationMetricsArgs) ToAdotApplicationMetricsPtrOutputWithContext(ctx context.Context) AdotApplicationMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationMetricsOutput).ToAdotApplicationMetricsPtrOutputWithContext(ctx)
}

// AdotApplicationMetricsPtrInput is an input type that accepts AdotApplicationMetricsArgs, AdotApplicationMetricsPtr and AdotApplicationMetricsPtrOutput values.
// You can construct a concrete instance of `AdotApplicationMetricsPtrInput` via:
//
//	        AdotApplicationMetricsArgs{...}
//
//	or:
//
//	        nil
type AdotApplicationMetricsPtrInput interface {
	pulumi.Input

	ToAdotApplicationMetricsPtrOutput() AdotApplicationMetricsPtrOutput
	ToAdotApplicationMetricsPtrOutputWithContext(context.Context) AdotApplicationMetricsPtrOutput
}

type adotApplicationMetricsPtrType AdotApplicationMetricsArgs

func AdotApplicationMetricsPtr(v *AdotApplicationMetricsArgs) AdotApplicationMetricsPtrInput {
	return (*adotApplicationMetricsPtrType)(v)
}

func (*adotApplicationMetricsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotApplicationMetrics)(nil)).Elem()
}

func (i *adotApplicationMetricsPtrType) ToAdotApplicationMetricsPtrOutput() AdotApplicationMetricsPtrOutput {
	return i.ToAdotApplicationMetricsPtrOutputWithContext(context.Background())
}

func (i *adotApplicationMetricsPtrType) ToAdotApplicationMetricsPtrOutputWithContext(ctx context.Context) AdotApplicationMetricsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationMetricsPtrOutput)
}

type AdotApplicationMetricsOutput struct{ *pulumi.OutputState }

func (AdotApplicationMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdotApplicationMetrics)(nil)).Elem()
}

func (o AdotApplicationMetricsOutput) ToAdotApplicationMetricsOutput() AdotApplicationMetricsOutput {
	return o
}

func (o AdotApplicationMetricsOutput) ToAdotApplicationMetricsOutputWithContext(ctx context.Context) AdotApplicationMetricsOutput {
	return o
}

func (o AdotApplicationMetricsOutput) ToAdotApplicationMetricsPtrOutput() AdotApplicationMetricsPtrOutput {
	return o.ToAdotApplicationMetricsPtrOutputWithContext(context.Background())
}

func (o AdotApplicationMetricsOutput) ToAdotApplicationMetricsPtrOutputWithContext(ctx context.Context) AdotApplicationMetricsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdotApplicationMetrics) *AdotApplicationMetrics {
		return &v
	}).(AdotApplicationMetricsPtrOutput)
}

// Data retention expressed in days.
func (o AdotApplicationMetricsOutput) DataRetention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AdotApplicationMetrics) *float64 { return v.DataRetention }).(pulumi.Float64PtrOutput)
}

// Enable metrics.
func (o AdotApplicationMetricsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdotApplicationMetrics) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AdotApplicationMetricsPtrOutput struct{ *pulumi.OutputState }

func (AdotApplicationMetricsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotApplicationMetrics)(nil)).Elem()
}

func (o AdotApplicationMetricsPtrOutput) ToAdotApplicationMetricsPtrOutput() AdotApplicationMetricsPtrOutput {
	return o
}

func (o AdotApplicationMetricsPtrOutput) ToAdotApplicationMetricsPtrOutputWithContext(ctx context.Context) AdotApplicationMetricsPtrOutput {
	return o
}

func (o AdotApplicationMetricsPtrOutput) Elem() AdotApplicationMetricsOutput {
	return o.ApplyT(func(v *AdotApplicationMetrics) AdotApplicationMetrics {
		if v != nil {
			return *v
		}
		var ret AdotApplicationMetrics
		return ret
	}).(AdotApplicationMetricsOutput)
}

// Data retention expressed in days.
func (o AdotApplicationMetricsPtrOutput) DataRetention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AdotApplicationMetrics) *float64 {
		if v == nil {
			return nil
		}
		return v.DataRetention
	}).(pulumi.Float64PtrOutput)
}

// Enable metrics.
func (o AdotApplicationMetricsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdotApplicationMetrics) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AdotOperatorType struct {
}

type ApplicationAddonType struct {
	// Create a new Namespace using the given name.
	CreateNamespace *bool `pulumi:"createNamespace"`
	// Kubernetes provider used by Pulumi.
	K8sProvider *kubernetes.Provider `pulumi:"k8sProvider"`
	// The name of the instanced component.
	Name string `pulumi:"name"`
	// The Namespace name where the addon will be installed.
	Namespace string `pulumi:"namespace"`
}

type ArgoCDType struct {
	// The hostname to be used to expose ArgoCD with an Ingress.
	Hostname *string `pulumi:"hostname"`
}

type AwsEbsCsiDriverType struct {
}

type AwsLoadBalancerControllerType struct {
	// The Cluster name.
	ClusterName string `pulumi:"clusterName"`
}

type CalicoType struct {
}

type CertManagerType struct {
	// The list of DNS Zone arn to be used by CertManager.
	ZoneArns []string `pulumi:"zoneArns"`
}

type ClusterType struct {
	// The addons installed in the cluster.
	Addons *Addons `pulumi:"addons"`
	// Configure the Kubernetes cluster API.
	Api *ClusterApi `pulumi:"api"`
	// Configure authentication integrated with AWS IAM.
	Authentication *ClusterAuthentication `pulumi:"authentication"`
	// Configure the cluster observability for logging.
	Logging *FluentbitLogging `pulumi:"logging"`
	// Configure the cluster observability for metrics.
	Metrics *AdotApplicationMetrics `pulumi:"metrics"`
	// Configure the cluster networking.
	Networking *ClusterNetworking `pulumi:"networking"`
	// The NodeGroups to be assigned to this cluster.
	NodeGroups []ClusterNodeGroup `pulumi:"nodeGroups"`
	// The OIDC Providers configuration.
	OidcProviders *ClusterOidcProviders `pulumi:"oidcProviders"`
	// The list of private subnet ids where for the EKS cluster. These subnets will be tagged for Kubernetes purposes.
	PrivateSubnetIds []string `pulumi:"privateSubnetIds"`
	// The list of public subnet ids where for the EKS cluster. These subnets will be tagged for Kubernetes purposes.
	PublicSubnetIds []string `pulumi:"publicSubnetIds"`
	// Desired Kubernetes version for control plane. Defaults to '1.22'.
	Version *string `pulumi:"version"`
	// The VPC ID where the cluster will be deployed
	VpcId *string `pulumi:"vpcId"`
}

type ClusterAddonsType struct {
	// The EKS Cluster name.
	ClusterName string `pulumi:"clusterName"`
	// The OIDC Identity Provider arn.
	IdentityProvidersArn []string `pulumi:"identityProvidersArn"`
	// The configuration for Ingress Controller.
	Ingress *ClusterAddonsIngress `pulumi:"ingress"`
	// The OIDC Identity Provider url.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The Pulumi provider used for Kubernetes resources.
	K8sProvider *kubernetes.Provider `pulumi:"k8sProvider"`
	// Configure the cluster observability for logging.
	Logging *FluentbitLogging `pulumi:"logging"`
	// Configure the cluster observability for metrics.
	Metrics *AdotApplicationMetrics `pulumi:"metrics"`
}

type ClusterAddonsIngress struct {
	// Configure the admin IngressController.
	Admin *ClusterAddonsIngressItem `pulumi:"admin"`
	// Configure the default IngressController.
	Default *ClusterAddonsIngressItem `pulumi:"default"`
}

// ClusterAddonsIngressInput is an input type that accepts ClusterAddonsIngressArgs and ClusterAddonsIngressOutput values.
// You can construct a concrete instance of `ClusterAddonsIngressInput` via:
//
//	ClusterAddonsIngressArgs{...}
type ClusterAddonsIngressInput interface {
	pulumi.Input

	ToClusterAddonsIngressOutput() ClusterAddonsIngressOutput
	ToClusterAddonsIngressOutputWithContext(context.Context) ClusterAddonsIngressOutput
}

type ClusterAddonsIngressArgs struct {
	// Configure the admin IngressController.
	Admin ClusterAddonsIngressItemPtrInput `pulumi:"admin"`
	// Configure the default IngressController.
	Default ClusterAddonsIngressItemPtrInput `pulumi:"default"`
}

func (ClusterAddonsIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsIngress)(nil)).Elem()
}

func (i ClusterAddonsIngressArgs) ToClusterAddonsIngressOutput() ClusterAddonsIngressOutput {
	return i.ToClusterAddonsIngressOutputWithContext(context.Background())
}

func (i ClusterAddonsIngressArgs) ToClusterAddonsIngressOutputWithContext(ctx context.Context) ClusterAddonsIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressOutput)
}

func (i ClusterAddonsIngressArgs) ToClusterAddonsIngressPtrOutput() ClusterAddonsIngressPtrOutput {
	return i.ToClusterAddonsIngressPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsIngressArgs) ToClusterAddonsIngressPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressOutput).ToClusterAddonsIngressPtrOutputWithContext(ctx)
}

// ClusterAddonsIngressPtrInput is an input type that accepts ClusterAddonsIngressArgs, ClusterAddonsIngressPtr and ClusterAddonsIngressPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsIngressPtrInput` via:
//
//	        ClusterAddonsIngressArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsIngressPtrInput interface {
	pulumi.Input

	ToClusterAddonsIngressPtrOutput() ClusterAddonsIngressPtrOutput
	ToClusterAddonsIngressPtrOutputWithContext(context.Context) ClusterAddonsIngressPtrOutput
}

type clusterAddonsIngressPtrType ClusterAddonsIngressArgs

func ClusterAddonsIngressPtr(v *ClusterAddonsIngressArgs) ClusterAddonsIngressPtrInput {
	return (*clusterAddonsIngressPtrType)(v)
}

func (*clusterAddonsIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsIngress)(nil)).Elem()
}

func (i *clusterAddonsIngressPtrType) ToClusterAddonsIngressPtrOutput() ClusterAddonsIngressPtrOutput {
	return i.ToClusterAddonsIngressPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsIngressPtrType) ToClusterAddonsIngressPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressPtrOutput)
}

type ClusterAddonsIngressOutput struct{ *pulumi.OutputState }

func (ClusterAddonsIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsIngress)(nil)).Elem()
}

func (o ClusterAddonsIngressOutput) ToClusterAddonsIngressOutput() ClusterAddonsIngressOutput {
	return o
}

func (o ClusterAddonsIngressOutput) ToClusterAddonsIngressOutputWithContext(ctx context.Context) ClusterAddonsIngressOutput {
	return o
}

func (o ClusterAddonsIngressOutput) ToClusterAddonsIngressPtrOutput() ClusterAddonsIngressPtrOutput {
	return o.ToClusterAddonsIngressPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsIngressOutput) ToClusterAddonsIngressPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsIngress) *ClusterAddonsIngress {
		return &v
	}).(ClusterAddonsIngressPtrOutput)
}

// Configure the admin IngressController.
func (o ClusterAddonsIngressOutput) Admin() ClusterAddonsIngressItemPtrOutput {
	return o.ApplyT(func(v ClusterAddonsIngress) *ClusterAddonsIngressItem { return v.Admin }).(ClusterAddonsIngressItemPtrOutput)
}

// Configure the default IngressController.
func (o ClusterAddonsIngressOutput) Default() ClusterAddonsIngressItemPtrOutput {
	return o.ApplyT(func(v ClusterAddonsIngress) *ClusterAddonsIngressItem { return v.Default }).(ClusterAddonsIngressItemPtrOutput)
}

type ClusterAddonsIngressPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsIngress)(nil)).Elem()
}

func (o ClusterAddonsIngressPtrOutput) ToClusterAddonsIngressPtrOutput() ClusterAddonsIngressPtrOutput {
	return o
}

func (o ClusterAddonsIngressPtrOutput) ToClusterAddonsIngressPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressPtrOutput {
	return o
}

func (o ClusterAddonsIngressPtrOutput) Elem() ClusterAddonsIngressOutput {
	return o.ApplyT(func(v *ClusterAddonsIngress) ClusterAddonsIngress {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsIngress
		return ret
	}).(ClusterAddonsIngressOutput)
}

// Configure the admin IngressController.
func (o ClusterAddonsIngressPtrOutput) Admin() ClusterAddonsIngressItemPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsIngress) *ClusterAddonsIngressItem {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(ClusterAddonsIngressItemPtrOutput)
}

// Configure the default IngressController.
func (o ClusterAddonsIngressPtrOutput) Default() ClusterAddonsIngressItemPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsIngress) *ClusterAddonsIngressItem {
		if v == nil {
			return nil
		}
		return v.Default
	}).(ClusterAddonsIngressItemPtrOutput)
}

type ClusterAddonsIngressItem struct {
	// The domain used to expose the IngressController.
	Domain *string `pulumi:"domain"`
	// Enable TLS termination in Load Balancer.
	EnableTlsTermination *bool `pulumi:"enableTlsTermination"`
	// Use a public Load Balancer to expose the IngressController.
	Public *bool `pulumi:"public"`
	// Set a whitelist to access the IngressController.
	Whitelist []string `pulumi:"whitelist"`
}

// ClusterAddonsIngressItemInput is an input type that accepts ClusterAddonsIngressItemArgs and ClusterAddonsIngressItemOutput values.
// You can construct a concrete instance of `ClusterAddonsIngressItemInput` via:
//
//	ClusterAddonsIngressItemArgs{...}
type ClusterAddonsIngressItemInput interface {
	pulumi.Input

	ToClusterAddonsIngressItemOutput() ClusterAddonsIngressItemOutput
	ToClusterAddonsIngressItemOutputWithContext(context.Context) ClusterAddonsIngressItemOutput
}

type ClusterAddonsIngressItemArgs struct {
	// The domain used to expose the IngressController.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Enable TLS termination in Load Balancer.
	EnableTlsTermination pulumi.BoolPtrInput `pulumi:"enableTlsTermination"`
	// Use a public Load Balancer to expose the IngressController.
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// Set a whitelist to access the IngressController.
	Whitelist pulumi.StringArrayInput `pulumi:"whitelist"`
}

func (ClusterAddonsIngressItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsIngressItem)(nil)).Elem()
}

func (i ClusterAddonsIngressItemArgs) ToClusterAddonsIngressItemOutput() ClusterAddonsIngressItemOutput {
	return i.ToClusterAddonsIngressItemOutputWithContext(context.Background())
}

func (i ClusterAddonsIngressItemArgs) ToClusterAddonsIngressItemOutputWithContext(ctx context.Context) ClusterAddonsIngressItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressItemOutput)
}

func (i ClusterAddonsIngressItemArgs) ToClusterAddonsIngressItemPtrOutput() ClusterAddonsIngressItemPtrOutput {
	return i.ToClusterAddonsIngressItemPtrOutputWithContext(context.Background())
}

func (i ClusterAddonsIngressItemArgs) ToClusterAddonsIngressItemPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressItemOutput).ToClusterAddonsIngressItemPtrOutputWithContext(ctx)
}

// ClusterAddonsIngressItemPtrInput is an input type that accepts ClusterAddonsIngressItemArgs, ClusterAddonsIngressItemPtr and ClusterAddonsIngressItemPtrOutput values.
// You can construct a concrete instance of `ClusterAddonsIngressItemPtrInput` via:
//
//	        ClusterAddonsIngressItemArgs{...}
//
//	or:
//
//	        nil
type ClusterAddonsIngressItemPtrInput interface {
	pulumi.Input

	ToClusterAddonsIngressItemPtrOutput() ClusterAddonsIngressItemPtrOutput
	ToClusterAddonsIngressItemPtrOutputWithContext(context.Context) ClusterAddonsIngressItemPtrOutput
}

type clusterAddonsIngressItemPtrType ClusterAddonsIngressItemArgs

func ClusterAddonsIngressItemPtr(v *ClusterAddonsIngressItemArgs) ClusterAddonsIngressItemPtrInput {
	return (*clusterAddonsIngressItemPtrType)(v)
}

func (*clusterAddonsIngressItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsIngressItem)(nil)).Elem()
}

func (i *clusterAddonsIngressItemPtrType) ToClusterAddonsIngressItemPtrOutput() ClusterAddonsIngressItemPtrOutput {
	return i.ToClusterAddonsIngressItemPtrOutputWithContext(context.Background())
}

func (i *clusterAddonsIngressItemPtrType) ToClusterAddonsIngressItemPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAddonsIngressItemPtrOutput)
}

type ClusterAddonsIngressItemOutput struct{ *pulumi.OutputState }

func (ClusterAddonsIngressItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAddonsIngressItem)(nil)).Elem()
}

func (o ClusterAddonsIngressItemOutput) ToClusterAddonsIngressItemOutput() ClusterAddonsIngressItemOutput {
	return o
}

func (o ClusterAddonsIngressItemOutput) ToClusterAddonsIngressItemOutputWithContext(ctx context.Context) ClusterAddonsIngressItemOutput {
	return o
}

func (o ClusterAddonsIngressItemOutput) ToClusterAddonsIngressItemPtrOutput() ClusterAddonsIngressItemPtrOutput {
	return o.ToClusterAddonsIngressItemPtrOutputWithContext(context.Background())
}

func (o ClusterAddonsIngressItemOutput) ToClusterAddonsIngressItemPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAddonsIngressItem) *ClusterAddonsIngressItem {
		return &v
	}).(ClusterAddonsIngressItemPtrOutput)
}

// The domain used to expose the IngressController.
func (o ClusterAddonsIngressItemOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAddonsIngressItem) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Enable TLS termination in Load Balancer.
func (o ClusterAddonsIngressItemOutput) EnableTlsTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAddonsIngressItem) *bool { return v.EnableTlsTermination }).(pulumi.BoolPtrOutput)
}

// Use a public Load Balancer to expose the IngressController.
func (o ClusterAddonsIngressItemOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAddonsIngressItem) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Set a whitelist to access the IngressController.
func (o ClusterAddonsIngressItemOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAddonsIngressItem) []string { return v.Whitelist }).(pulumi.StringArrayOutput)
}

type ClusterAddonsIngressItemPtrOutput struct{ *pulumi.OutputState }

func (ClusterAddonsIngressItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAddonsIngressItem)(nil)).Elem()
}

func (o ClusterAddonsIngressItemPtrOutput) ToClusterAddonsIngressItemPtrOutput() ClusterAddonsIngressItemPtrOutput {
	return o
}

func (o ClusterAddonsIngressItemPtrOutput) ToClusterAddonsIngressItemPtrOutputWithContext(ctx context.Context) ClusterAddonsIngressItemPtrOutput {
	return o
}

func (o ClusterAddonsIngressItemPtrOutput) Elem() ClusterAddonsIngressItemOutput {
	return o.ApplyT(func(v *ClusterAddonsIngressItem) ClusterAddonsIngressItem {
		if v != nil {
			return *v
		}
		var ret ClusterAddonsIngressItem
		return ret
	}).(ClusterAddonsIngressItemOutput)
}

// The domain used to expose the IngressController.
func (o ClusterAddonsIngressItemPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsIngressItem) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Enable TLS termination in Load Balancer.
func (o ClusterAddonsIngressItemPtrOutput) EnableTlsTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsIngressItem) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTlsTermination
	}).(pulumi.BoolPtrOutput)
}

// Use a public Load Balancer to expose the IngressController.
func (o ClusterAddonsIngressItemPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAddonsIngressItem) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// Set a whitelist to access the IngressController.
func (o ClusterAddonsIngressItemPtrOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAddonsIngressItem) []string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringArrayOutput)
}

type ClusterAdminsType struct {
	// Kubernetes provider used by Pulumi.
	Kubeconfig string `pulumi:"kubeconfig"`
	// The name for the group of Cluster Admins.
	Name string `pulumi:"name"`
	// The list of AWS IAM User arns.
	UserArns []string `pulumi:"userArns"`
}

type ClusterApi struct {
	// Configure the private endpoint for the Kubernetes API.
	Private *ClusterPrivateApi `pulumi:"private"`
	// Configure the public endpoint for the Kubernetes API.
	Public *ClusterPublicApi `pulumi:"public"`
}

// ClusterApiInput is an input type that accepts ClusterApiArgs and ClusterApiOutput values.
// You can construct a concrete instance of `ClusterApiInput` via:
//
//	ClusterApiArgs{...}
type ClusterApiInput interface {
	pulumi.Input

	ToClusterApiOutput() ClusterApiOutput
	ToClusterApiOutputWithContext(context.Context) ClusterApiOutput
}

type ClusterApiArgs struct {
	// Configure the private endpoint for the Kubernetes API.
	Private ClusterPrivateApiPtrInput `pulumi:"private"`
	// Configure the public endpoint for the Kubernetes API.
	Public ClusterPublicApiPtrInput `pulumi:"public"`
}

func (ClusterApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterApi)(nil)).Elem()
}

func (i ClusterApiArgs) ToClusterApiOutput() ClusterApiOutput {
	return i.ToClusterApiOutputWithContext(context.Background())
}

func (i ClusterApiArgs) ToClusterApiOutputWithContext(ctx context.Context) ClusterApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterApiOutput)
}

func (i ClusterApiArgs) ToClusterApiPtrOutput() ClusterApiPtrOutput {
	return i.ToClusterApiPtrOutputWithContext(context.Background())
}

func (i ClusterApiArgs) ToClusterApiPtrOutputWithContext(ctx context.Context) ClusterApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterApiOutput).ToClusterApiPtrOutputWithContext(ctx)
}

// ClusterApiPtrInput is an input type that accepts ClusterApiArgs, ClusterApiPtr and ClusterApiPtrOutput values.
// You can construct a concrete instance of `ClusterApiPtrInput` via:
//
//	        ClusterApiArgs{...}
//
//	or:
//
//	        nil
type ClusterApiPtrInput interface {
	pulumi.Input

	ToClusterApiPtrOutput() ClusterApiPtrOutput
	ToClusterApiPtrOutputWithContext(context.Context) ClusterApiPtrOutput
}

type clusterApiPtrType ClusterApiArgs

func ClusterApiPtr(v *ClusterApiArgs) ClusterApiPtrInput {
	return (*clusterApiPtrType)(v)
}

func (*clusterApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterApi)(nil)).Elem()
}

func (i *clusterApiPtrType) ToClusterApiPtrOutput() ClusterApiPtrOutput {
	return i.ToClusterApiPtrOutputWithContext(context.Background())
}

func (i *clusterApiPtrType) ToClusterApiPtrOutputWithContext(ctx context.Context) ClusterApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterApiPtrOutput)
}

type ClusterApiOutput struct{ *pulumi.OutputState }

func (ClusterApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterApi)(nil)).Elem()
}

func (o ClusterApiOutput) ToClusterApiOutput() ClusterApiOutput {
	return o
}

func (o ClusterApiOutput) ToClusterApiOutputWithContext(ctx context.Context) ClusterApiOutput {
	return o
}

func (o ClusterApiOutput) ToClusterApiPtrOutput() ClusterApiPtrOutput {
	return o.ToClusterApiPtrOutputWithContext(context.Background())
}

func (o ClusterApiOutput) ToClusterApiPtrOutputWithContext(ctx context.Context) ClusterApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterApi) *ClusterApi {
		return &v
	}).(ClusterApiPtrOutput)
}

// Configure the private endpoint for the Kubernetes API.
func (o ClusterApiOutput) Private() ClusterPrivateApiPtrOutput {
	return o.ApplyT(func(v ClusterApi) *ClusterPrivateApi { return v.Private }).(ClusterPrivateApiPtrOutput)
}

// Configure the public endpoint for the Kubernetes API.
func (o ClusterApiOutput) Public() ClusterPublicApiPtrOutput {
	return o.ApplyT(func(v ClusterApi) *ClusterPublicApi { return v.Public }).(ClusterPublicApiPtrOutput)
}

type ClusterApiPtrOutput struct{ *pulumi.OutputState }

func (ClusterApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterApi)(nil)).Elem()
}

func (o ClusterApiPtrOutput) ToClusterApiPtrOutput() ClusterApiPtrOutput {
	return o
}

func (o ClusterApiPtrOutput) ToClusterApiPtrOutputWithContext(ctx context.Context) ClusterApiPtrOutput {
	return o
}

func (o ClusterApiPtrOutput) Elem() ClusterApiOutput {
	return o.ApplyT(func(v *ClusterApi) ClusterApi {
		if v != nil {
			return *v
		}
		var ret ClusterApi
		return ret
	}).(ClusterApiOutput)
}

// Configure the private endpoint for the Kubernetes API.
func (o ClusterApiPtrOutput) Private() ClusterPrivateApiPtrOutput {
	return o.ApplyT(func(v *ClusterApi) *ClusterPrivateApi {
		if v == nil {
			return nil
		}
		return v.Private
	}).(ClusterPrivateApiPtrOutput)
}

// Configure the public endpoint for the Kubernetes API.
func (o ClusterApiPtrOutput) Public() ClusterPublicApiPtrOutput {
	return o.ApplyT(func(v *ClusterApi) *ClusterPublicApi {
		if v == nil {
			return nil
		}
		return v.Public
	}).(ClusterPublicApiPtrOutput)
}

type ClusterAuthentication struct {
	// The list of AWS Accounts that can authenticate with the API Server.
	Accounts []string `pulumi:"accounts"`
	// The list of AWS IAM Users names to be configured as cluster-admin.
	ClusterAdmins []string `pulumi:"clusterAdmins"`
	// The list of AWS IAM Roles that can authenticate with the API server.
	Roles []IamAuthenticatorRole `pulumi:"roles"`
	// The list of AWS IAM Users that can authenticate with the API server.
	Users []IamAuthenticatorUser `pulumi:"users"`
}

// ClusterAuthenticationInput is an input type that accepts ClusterAuthenticationArgs and ClusterAuthenticationOutput values.
// You can construct a concrete instance of `ClusterAuthenticationInput` via:
//
//	ClusterAuthenticationArgs{...}
type ClusterAuthenticationInput interface {
	pulumi.Input

	ToClusterAuthenticationOutput() ClusterAuthenticationOutput
	ToClusterAuthenticationOutputWithContext(context.Context) ClusterAuthenticationOutput
}

type ClusterAuthenticationArgs struct {
	// The list of AWS Accounts that can authenticate with the API Server.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// The list of AWS IAM Users names to be configured as cluster-admin.
	ClusterAdmins pulumi.StringArrayInput `pulumi:"clusterAdmins"`
	// The list of AWS IAM Roles that can authenticate with the API server.
	Roles IamAuthenticatorRoleArrayInput `pulumi:"roles"`
	// The list of AWS IAM Users that can authenticate with the API server.
	Users IamAuthenticatorUserArrayInput `pulumi:"users"`
}

func (ClusterAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthentication)(nil)).Elem()
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationOutput() ClusterAuthenticationOutput {
	return i.ToClusterAuthenticationOutputWithContext(context.Background())
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationOutputWithContext(ctx context.Context) ClusterAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationOutput)
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return i.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationOutput).ToClusterAuthenticationPtrOutputWithContext(ctx)
}

// ClusterAuthenticationPtrInput is an input type that accepts ClusterAuthenticationArgs, ClusterAuthenticationPtr and ClusterAuthenticationPtrOutput values.
// You can construct a concrete instance of `ClusterAuthenticationPtrInput` via:
//
//	        ClusterAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ClusterAuthenticationPtrInput interface {
	pulumi.Input

	ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput
	ToClusterAuthenticationPtrOutputWithContext(context.Context) ClusterAuthenticationPtrOutput
}

type clusterAuthenticationPtrType ClusterAuthenticationArgs

func ClusterAuthenticationPtr(v *ClusterAuthenticationArgs) ClusterAuthenticationPtrInput {
	return (*clusterAuthenticationPtrType)(v)
}

func (*clusterAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthentication)(nil)).Elem()
}

func (i *clusterAuthenticationPtrType) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return i.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticationPtrType) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationPtrOutput)
}

type ClusterAuthenticationOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthentication)(nil)).Elem()
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationOutput() ClusterAuthenticationOutput {
	return o
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationOutputWithContext(ctx context.Context) ClusterAuthenticationOutput {
	return o
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return o.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAuthentication) *ClusterAuthentication {
		return &v
	}).(ClusterAuthenticationPtrOutput)
}

// The list of AWS Accounts that can authenticate with the API Server.
func (o ClusterAuthenticationOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAuthentication) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// The list of AWS IAM Users names to be configured as cluster-admin.
func (o ClusterAuthenticationOutput) ClusterAdmins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAuthentication) []string { return v.ClusterAdmins }).(pulumi.StringArrayOutput)
}

// The list of AWS IAM Roles that can authenticate with the API server.
func (o ClusterAuthenticationOutput) Roles() IamAuthenticatorRoleArrayOutput {
	return o.ApplyT(func(v ClusterAuthentication) []IamAuthenticatorRole { return v.Roles }).(IamAuthenticatorRoleArrayOutput)
}

// The list of AWS IAM Users that can authenticate with the API server.
func (o ClusterAuthenticationOutput) Users() IamAuthenticatorUserArrayOutput {
	return o.ApplyT(func(v ClusterAuthentication) []IamAuthenticatorUser { return v.Users }).(IamAuthenticatorUserArrayOutput)
}

type ClusterAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthentication)(nil)).Elem()
}

func (o ClusterAuthenticationPtrOutput) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return o
}

func (o ClusterAuthenticationPtrOutput) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return o
}

func (o ClusterAuthenticationPtrOutput) Elem() ClusterAuthenticationOutput {
	return o.ApplyT(func(v *ClusterAuthentication) ClusterAuthentication {
		if v != nil {
			return *v
		}
		var ret ClusterAuthentication
		return ret
	}).(ClusterAuthenticationOutput)
}

// The list of AWS Accounts that can authenticate with the API Server.
func (o ClusterAuthenticationPtrOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(pulumi.StringArrayOutput)
}

// The list of AWS IAM Users names to be configured as cluster-admin.
func (o ClusterAuthenticationPtrOutput) ClusterAdmins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.ClusterAdmins
	}).(pulumi.StringArrayOutput)
}

// The list of AWS IAM Roles that can authenticate with the API server.
func (o ClusterAuthenticationPtrOutput) Roles() IamAuthenticatorRoleArrayOutput {
	return o.ApplyT(func(v *ClusterAuthentication) []IamAuthenticatorRole {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(IamAuthenticatorRoleArrayOutput)
}

// The list of AWS IAM Users that can authenticate with the API server.
func (o ClusterAuthenticationPtrOutput) Users() IamAuthenticatorUserArrayOutput {
	return o.ApplyT(func(v *ClusterAuthentication) []IamAuthenticatorUser {
		if v == nil {
			return nil
		}
		return v.Users
	}).(IamAuthenticatorUserArrayOutput)
}

type ClusterAutoscalerType struct {
	// The Cluster name.
	ClusterName string `pulumi:"clusterName"`
}

type ClusterNetworking struct {
	// Configure the access to admin applications.
	Admin *ClusterNetworkingIngress `pulumi:"admin"`
	// Configure the access to applications.
	Default *ClusterNetworkingIngress `pulumi:"default"`
}

// ClusterNetworkingInput is an input type that accepts ClusterNetworkingArgs and ClusterNetworkingOutput values.
// You can construct a concrete instance of `ClusterNetworkingInput` via:
//
//	ClusterNetworkingArgs{...}
type ClusterNetworkingInput interface {
	pulumi.Input

	ToClusterNetworkingOutput() ClusterNetworkingOutput
	ToClusterNetworkingOutputWithContext(context.Context) ClusterNetworkingOutput
}

type ClusterNetworkingArgs struct {
	// Configure the access to admin applications.
	Admin ClusterNetworkingIngressPtrInput `pulumi:"admin"`
	// Configure the access to applications.
	Default ClusterNetworkingIngressPtrInput `pulumi:"default"`
}

func (ClusterNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworking)(nil)).Elem()
}

func (i ClusterNetworkingArgs) ToClusterNetworkingOutput() ClusterNetworkingOutput {
	return i.ToClusterNetworkingOutputWithContext(context.Background())
}

func (i ClusterNetworkingArgs) ToClusterNetworkingOutputWithContext(ctx context.Context) ClusterNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingOutput)
}

func (i ClusterNetworkingArgs) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return i.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkingArgs) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingOutput).ToClusterNetworkingPtrOutputWithContext(ctx)
}

// ClusterNetworkingPtrInput is an input type that accepts ClusterNetworkingArgs, ClusterNetworkingPtr and ClusterNetworkingPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkingPtrInput` via:
//
//	        ClusterNetworkingArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkingPtrInput interface {
	pulumi.Input

	ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput
	ToClusterNetworkingPtrOutputWithContext(context.Context) ClusterNetworkingPtrOutput
}

type clusterNetworkingPtrType ClusterNetworkingArgs

func ClusterNetworkingPtr(v *ClusterNetworkingArgs) ClusterNetworkingPtrInput {
	return (*clusterNetworkingPtrType)(v)
}

func (*clusterNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworking)(nil)).Elem()
}

func (i *clusterNetworkingPtrType) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return i.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkingPtrType) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingPtrOutput)
}

type ClusterNetworkingOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworking)(nil)).Elem()
}

func (o ClusterNetworkingOutput) ToClusterNetworkingOutput() ClusterNetworkingOutput {
	return o
}

func (o ClusterNetworkingOutput) ToClusterNetworkingOutputWithContext(ctx context.Context) ClusterNetworkingOutput {
	return o
}

func (o ClusterNetworkingOutput) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return o.ToClusterNetworkingPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingOutput) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworking) *ClusterNetworking {
		return &v
	}).(ClusterNetworkingPtrOutput)
}

// Configure the access to admin applications.
func (o ClusterNetworkingOutput) Admin() ClusterNetworkingIngressPtrOutput {
	return o.ApplyT(func(v ClusterNetworking) *ClusterNetworkingIngress { return v.Admin }).(ClusterNetworkingIngressPtrOutput)
}

// Configure the access to applications.
func (o ClusterNetworkingOutput) Default() ClusterNetworkingIngressPtrOutput {
	return o.ApplyT(func(v ClusterNetworking) *ClusterNetworkingIngress { return v.Default }).(ClusterNetworkingIngressPtrOutput)
}

type ClusterNetworkingPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworking)(nil)).Elem()
}

func (o ClusterNetworkingPtrOutput) ToClusterNetworkingPtrOutput() ClusterNetworkingPtrOutput {
	return o
}

func (o ClusterNetworkingPtrOutput) ToClusterNetworkingPtrOutputWithContext(ctx context.Context) ClusterNetworkingPtrOutput {
	return o
}

func (o ClusterNetworkingPtrOutput) Elem() ClusterNetworkingOutput {
	return o.ApplyT(func(v *ClusterNetworking) ClusterNetworking {
		if v != nil {
			return *v
		}
		var ret ClusterNetworking
		return ret
	}).(ClusterNetworkingOutput)
}

// Configure the access to admin applications.
func (o ClusterNetworkingPtrOutput) Admin() ClusterNetworkingIngressPtrOutput {
	return o.ApplyT(func(v *ClusterNetworking) *ClusterNetworkingIngress {
		if v == nil {
			return nil
		}
		return v.Admin
	}).(ClusterNetworkingIngressPtrOutput)
}

// Configure the access to applications.
func (o ClusterNetworkingPtrOutput) Default() ClusterNetworkingIngressPtrOutput {
	return o.ApplyT(func(v *ClusterNetworking) *ClusterNetworkingIngress {
		if v == nil {
			return nil
		}
		return v.Default
	}).(ClusterNetworkingIngressPtrOutput)
}

type ClusterNetworkingIngress struct {
	// The domain used to expose the IngressController.
	Domain string `pulumi:"domain"`
	// Enable TLS termination in Load Balancer.
	EnableTlsTermination *bool `pulumi:"enableTlsTermination"`
	// Use a public Load Balancer to expose the IngressController.
	Public *bool `pulumi:"public"`
	// Set a whitelist to access the IngressController.
	Whitelist []string `pulumi:"whitelist"`
}

// ClusterNetworkingIngressInput is an input type that accepts ClusterNetworkingIngressArgs and ClusterNetworkingIngressOutput values.
// You can construct a concrete instance of `ClusterNetworkingIngressInput` via:
//
//	ClusterNetworkingIngressArgs{...}
type ClusterNetworkingIngressInput interface {
	pulumi.Input

	ToClusterNetworkingIngressOutput() ClusterNetworkingIngressOutput
	ToClusterNetworkingIngressOutputWithContext(context.Context) ClusterNetworkingIngressOutput
}

type ClusterNetworkingIngressArgs struct {
	// The domain used to expose the IngressController.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Enable TLS termination in Load Balancer.
	EnableTlsTermination pulumi.BoolPtrInput `pulumi:"enableTlsTermination"`
	// Use a public Load Balancer to expose the IngressController.
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// Set a whitelist to access the IngressController.
	Whitelist pulumi.StringArrayInput `pulumi:"whitelist"`
}

func (ClusterNetworkingIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkingIngress)(nil)).Elem()
}

func (i ClusterNetworkingIngressArgs) ToClusterNetworkingIngressOutput() ClusterNetworkingIngressOutput {
	return i.ToClusterNetworkingIngressOutputWithContext(context.Background())
}

func (i ClusterNetworkingIngressArgs) ToClusterNetworkingIngressOutputWithContext(ctx context.Context) ClusterNetworkingIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingIngressOutput)
}

func (i ClusterNetworkingIngressArgs) ToClusterNetworkingIngressPtrOutput() ClusterNetworkingIngressPtrOutput {
	return i.ToClusterNetworkingIngressPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkingIngressArgs) ToClusterNetworkingIngressPtrOutputWithContext(ctx context.Context) ClusterNetworkingIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingIngressOutput).ToClusterNetworkingIngressPtrOutputWithContext(ctx)
}

// ClusterNetworkingIngressPtrInput is an input type that accepts ClusterNetworkingIngressArgs, ClusterNetworkingIngressPtr and ClusterNetworkingIngressPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkingIngressPtrInput` via:
//
//	        ClusterNetworkingIngressArgs{...}
//
//	or:
//
//	        nil
type ClusterNetworkingIngressPtrInput interface {
	pulumi.Input

	ToClusterNetworkingIngressPtrOutput() ClusterNetworkingIngressPtrOutput
	ToClusterNetworkingIngressPtrOutputWithContext(context.Context) ClusterNetworkingIngressPtrOutput
}

type clusterNetworkingIngressPtrType ClusterNetworkingIngressArgs

func ClusterNetworkingIngressPtr(v *ClusterNetworkingIngressArgs) ClusterNetworkingIngressPtrInput {
	return (*clusterNetworkingIngressPtrType)(v)
}

func (*clusterNetworkingIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkingIngress)(nil)).Elem()
}

func (i *clusterNetworkingIngressPtrType) ToClusterNetworkingIngressPtrOutput() ClusterNetworkingIngressPtrOutput {
	return i.ToClusterNetworkingIngressPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkingIngressPtrType) ToClusterNetworkingIngressPtrOutputWithContext(ctx context.Context) ClusterNetworkingIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkingIngressPtrOutput)
}

type ClusterNetworkingIngressOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkingIngress)(nil)).Elem()
}

func (o ClusterNetworkingIngressOutput) ToClusterNetworkingIngressOutput() ClusterNetworkingIngressOutput {
	return o
}

func (o ClusterNetworkingIngressOutput) ToClusterNetworkingIngressOutputWithContext(ctx context.Context) ClusterNetworkingIngressOutput {
	return o
}

func (o ClusterNetworkingIngressOutput) ToClusterNetworkingIngressPtrOutput() ClusterNetworkingIngressPtrOutput {
	return o.ToClusterNetworkingIngressPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkingIngressOutput) ToClusterNetworkingIngressPtrOutputWithContext(ctx context.Context) ClusterNetworkingIngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNetworkingIngress) *ClusterNetworkingIngress {
		return &v
	}).(ClusterNetworkingIngressPtrOutput)
}

// The domain used to expose the IngressController.
func (o ClusterNetworkingIngressOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkingIngress) string { return v.Domain }).(pulumi.StringOutput)
}

// Enable TLS termination in Load Balancer.
func (o ClusterNetworkingIngressOutput) EnableTlsTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNetworkingIngress) *bool { return v.EnableTlsTermination }).(pulumi.BoolPtrOutput)
}

// Use a public Load Balancer to expose the IngressController.
func (o ClusterNetworkingIngressOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNetworkingIngress) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

// Set a whitelist to access the IngressController.
func (o ClusterNetworkingIngressOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworkingIngress) []string { return v.Whitelist }).(pulumi.StringArrayOutput)
}

type ClusterNetworkingIngressPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkingIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkingIngress)(nil)).Elem()
}

func (o ClusterNetworkingIngressPtrOutput) ToClusterNetworkingIngressPtrOutput() ClusterNetworkingIngressPtrOutput {
	return o
}

func (o ClusterNetworkingIngressPtrOutput) ToClusterNetworkingIngressPtrOutputWithContext(ctx context.Context) ClusterNetworkingIngressPtrOutput {
	return o
}

func (o ClusterNetworkingIngressPtrOutput) Elem() ClusterNetworkingIngressOutput {
	return o.ApplyT(func(v *ClusterNetworkingIngress) ClusterNetworkingIngress {
		if v != nil {
			return *v
		}
		var ret ClusterNetworkingIngress
		return ret
	}).(ClusterNetworkingIngressOutput)
}

// The domain used to expose the IngressController.
func (o ClusterNetworkingIngressPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkingIngress) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// Enable TLS termination in Load Balancer.
func (o ClusterNetworkingIngressPtrOutput) EnableTlsTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkingIngress) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTlsTermination
	}).(pulumi.BoolPtrOutput)
}

// Use a public Load Balancer to expose the IngressController.
func (o ClusterNetworkingIngressPtrOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkingIngress) *bool {
		if v == nil {
			return nil
		}
		return v.Public
	}).(pulumi.BoolPtrOutput)
}

// Set a whitelist to access the IngressController.
func (o ClusterNetworkingIngressPtrOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworkingIngress) []string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringArrayOutput)
}

type ClusterNodeGroup struct {
	// The EC2 Instance Type to be used to create the Nodes.
	InstanceType *string `pulumi:"instanceType"`
	// The maxium number of nodes running in the node group. Defaults to 2.
	MaxCount float64 `pulumi:"maxCount"`
	// The maximum number of nodes unavailable at once during a version update. Defaults to 1.
	MaxUnavailable float64 `pulumi:"maxUnavailable"`
	// The minimum number of nodes running in the node group. Defaults to 1.
	MinCount float64 `pulumi:"minCount"`
	// The Node Group name.
	Name string `pulumi:"name"`
	// The subnets type to be used to deploy the Node Groups.
	SubnetsType *ClusterSubnetsType `pulumi:"subnetsType"`
}

// ClusterNodeGroupInput is an input type that accepts ClusterNodeGroupArgs and ClusterNodeGroupOutput values.
// You can construct a concrete instance of `ClusterNodeGroupInput` via:
//
//	ClusterNodeGroupArgs{...}
type ClusterNodeGroupInput interface {
	pulumi.Input

	ToClusterNodeGroupOutput() ClusterNodeGroupOutput
	ToClusterNodeGroupOutputWithContext(context.Context) ClusterNodeGroupOutput
}

type ClusterNodeGroupArgs struct {
	// The EC2 Instance Type to be used to create the Nodes.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The maxium number of nodes running in the node group. Defaults to 2.
	MaxCount pulumi.Float64Input `pulumi:"maxCount"`
	// The maximum number of nodes unavailable at once during a version update. Defaults to 1.
	MaxUnavailable pulumi.Float64Input `pulumi:"maxUnavailable"`
	// The minimum number of nodes running in the node group. Defaults to 1.
	MinCount pulumi.Float64Input `pulumi:"minCount"`
	// The Node Group name.
	Name pulumi.StringInput `pulumi:"name"`
	// The subnets type to be used to deploy the Node Groups.
	SubnetsType ClusterSubnetsTypePtrInput `pulumi:"subnetsType"`
}

func (ClusterNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroup)(nil)).Elem()
}

func (i ClusterNodeGroupArgs) ToClusterNodeGroupOutput() ClusterNodeGroupOutput {
	return i.ToClusterNodeGroupOutputWithContext(context.Background())
}

func (i ClusterNodeGroupArgs) ToClusterNodeGroupOutputWithContext(ctx context.Context) ClusterNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupOutput)
}

// ClusterNodeGroupArrayInput is an input type that accepts ClusterNodeGroupArray and ClusterNodeGroupArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupArrayInput` via:
//
//	ClusterNodeGroupArray{ ClusterNodeGroupArgs{...} }
type ClusterNodeGroupArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupArrayOutput() ClusterNodeGroupArrayOutput
	ToClusterNodeGroupArrayOutputWithContext(context.Context) ClusterNodeGroupArrayOutput
}

type ClusterNodeGroupArray []ClusterNodeGroupInput

func (ClusterNodeGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroup)(nil)).Elem()
}

func (i ClusterNodeGroupArray) ToClusterNodeGroupArrayOutput() ClusterNodeGroupArrayOutput {
	return i.ToClusterNodeGroupArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupArray) ToClusterNodeGroupArrayOutputWithContext(ctx context.Context) ClusterNodeGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupArrayOutput)
}

type ClusterNodeGroupOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroup)(nil)).Elem()
}

func (o ClusterNodeGroupOutput) ToClusterNodeGroupOutput() ClusterNodeGroupOutput {
	return o
}

func (o ClusterNodeGroupOutput) ToClusterNodeGroupOutputWithContext(ctx context.Context) ClusterNodeGroupOutput {
	return o
}

// The EC2 Instance Type to be used to create the Nodes.
func (o ClusterNodeGroupOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroup) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The maxium number of nodes running in the node group. Defaults to 2.
func (o ClusterNodeGroupOutput) MaxCount() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeGroup) float64 { return v.MaxCount }).(pulumi.Float64Output)
}

// The maximum number of nodes unavailable at once during a version update. Defaults to 1.
func (o ClusterNodeGroupOutput) MaxUnavailable() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeGroup) float64 { return v.MaxUnavailable }).(pulumi.Float64Output)
}

// The minimum number of nodes running in the node group. Defaults to 1.
func (o ClusterNodeGroupOutput) MinCount() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterNodeGroup) float64 { return v.MinCount }).(pulumi.Float64Output)
}

// The Node Group name.
func (o ClusterNodeGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The subnets type to be used to deploy the Node Groups.
func (o ClusterNodeGroupOutput) SubnetsType() ClusterSubnetsTypePtrOutput {
	return o.ApplyT(func(v ClusterNodeGroup) *ClusterSubnetsType { return v.SubnetsType }).(ClusterSubnetsTypePtrOutput)
}

type ClusterNodeGroupArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroup)(nil)).Elem()
}

func (o ClusterNodeGroupArrayOutput) ToClusterNodeGroupArrayOutput() ClusterNodeGroupArrayOutput {
	return o
}

func (o ClusterNodeGroupArrayOutput) ToClusterNodeGroupArrayOutputWithContext(ctx context.Context) ClusterNodeGroupArrayOutput {
	return o
}

func (o ClusterNodeGroupArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroup {
		return vs[0].([]ClusterNodeGroup)[vs[1].(int)]
	}).(ClusterNodeGroupOutput)
}

type ClusterOidcProviders struct {
	// Enable the default OIDC Provider that is used in the cluster to let Service Accounts to authenticate against AWS with a given IAM Role.
	EnableDefaultProvider bool `pulumi:"enableDefaultProvider"`
}

// ClusterOidcProvidersInput is an input type that accepts ClusterOidcProvidersArgs and ClusterOidcProvidersOutput values.
// You can construct a concrete instance of `ClusterOidcProvidersInput` via:
//
//	ClusterOidcProvidersArgs{...}
type ClusterOidcProvidersInput interface {
	pulumi.Input

	ToClusterOidcProvidersOutput() ClusterOidcProvidersOutput
	ToClusterOidcProvidersOutputWithContext(context.Context) ClusterOidcProvidersOutput
}

type ClusterOidcProvidersArgs struct {
	// Enable the default OIDC Provider that is used in the cluster to let Service Accounts to authenticate against AWS with a given IAM Role.
	EnableDefaultProvider pulumi.BoolInput `pulumi:"enableDefaultProvider"`
}

func (ClusterOidcProvidersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOidcProviders)(nil)).Elem()
}

func (i ClusterOidcProvidersArgs) ToClusterOidcProvidersOutput() ClusterOidcProvidersOutput {
	return i.ToClusterOidcProvidersOutputWithContext(context.Background())
}

func (i ClusterOidcProvidersArgs) ToClusterOidcProvidersOutputWithContext(ctx context.Context) ClusterOidcProvidersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOidcProvidersOutput)
}

func (i ClusterOidcProvidersArgs) ToClusterOidcProvidersPtrOutput() ClusterOidcProvidersPtrOutput {
	return i.ToClusterOidcProvidersPtrOutputWithContext(context.Background())
}

func (i ClusterOidcProvidersArgs) ToClusterOidcProvidersPtrOutputWithContext(ctx context.Context) ClusterOidcProvidersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOidcProvidersOutput).ToClusterOidcProvidersPtrOutputWithContext(ctx)
}

// ClusterOidcProvidersPtrInput is an input type that accepts ClusterOidcProvidersArgs, ClusterOidcProvidersPtr and ClusterOidcProvidersPtrOutput values.
// You can construct a concrete instance of `ClusterOidcProvidersPtrInput` via:
//
//	        ClusterOidcProvidersArgs{...}
//
//	or:
//
//	        nil
type ClusterOidcProvidersPtrInput interface {
	pulumi.Input

	ToClusterOidcProvidersPtrOutput() ClusterOidcProvidersPtrOutput
	ToClusterOidcProvidersPtrOutputWithContext(context.Context) ClusterOidcProvidersPtrOutput
}

type clusterOidcProvidersPtrType ClusterOidcProvidersArgs

func ClusterOidcProvidersPtr(v *ClusterOidcProvidersArgs) ClusterOidcProvidersPtrInput {
	return (*clusterOidcProvidersPtrType)(v)
}

func (*clusterOidcProvidersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOidcProviders)(nil)).Elem()
}

func (i *clusterOidcProvidersPtrType) ToClusterOidcProvidersPtrOutput() ClusterOidcProvidersPtrOutput {
	return i.ToClusterOidcProvidersPtrOutputWithContext(context.Background())
}

func (i *clusterOidcProvidersPtrType) ToClusterOidcProvidersPtrOutputWithContext(ctx context.Context) ClusterOidcProvidersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOidcProvidersPtrOutput)
}

type ClusterOidcProvidersOutput struct{ *pulumi.OutputState }

func (ClusterOidcProvidersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOidcProviders)(nil)).Elem()
}

func (o ClusterOidcProvidersOutput) ToClusterOidcProvidersOutput() ClusterOidcProvidersOutput {
	return o
}

func (o ClusterOidcProvidersOutput) ToClusterOidcProvidersOutputWithContext(ctx context.Context) ClusterOidcProvidersOutput {
	return o
}

func (o ClusterOidcProvidersOutput) ToClusterOidcProvidersPtrOutput() ClusterOidcProvidersPtrOutput {
	return o.ToClusterOidcProvidersPtrOutputWithContext(context.Background())
}

func (o ClusterOidcProvidersOutput) ToClusterOidcProvidersPtrOutputWithContext(ctx context.Context) ClusterOidcProvidersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOidcProviders) *ClusterOidcProviders {
		return &v
	}).(ClusterOidcProvidersPtrOutput)
}

// Enable the default OIDC Provider that is used in the cluster to let Service Accounts to authenticate against AWS with a given IAM Role.
func (o ClusterOidcProvidersOutput) EnableDefaultProvider() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterOidcProviders) bool { return v.EnableDefaultProvider }).(pulumi.BoolOutput)
}

type ClusterOidcProvidersPtrOutput struct{ *pulumi.OutputState }

func (ClusterOidcProvidersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOidcProviders)(nil)).Elem()
}

func (o ClusterOidcProvidersPtrOutput) ToClusterOidcProvidersPtrOutput() ClusterOidcProvidersPtrOutput {
	return o
}

func (o ClusterOidcProvidersPtrOutput) ToClusterOidcProvidersPtrOutputWithContext(ctx context.Context) ClusterOidcProvidersPtrOutput {
	return o
}

func (o ClusterOidcProvidersPtrOutput) Elem() ClusterOidcProvidersOutput {
	return o.ApplyT(func(v *ClusterOidcProviders) ClusterOidcProviders {
		if v != nil {
			return *v
		}
		var ret ClusterOidcProviders
		return ret
	}).(ClusterOidcProvidersOutput)
}

// Enable the default OIDC Provider that is used in the cluster to let Service Accounts to authenticate against AWS with a given IAM Role.
func (o ClusterOidcProvidersPtrOutput) EnableDefaultProvider() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterOidcProviders) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableDefaultProvider
	}).(pulumi.BoolPtrOutput)
}

type ClusterPrivateApi struct {
	// Enable the private endpoint for Kubernetes API.
	Enabled *bool `pulumi:"enabled"`
}

// ClusterPrivateApiInput is an input type that accepts ClusterPrivateApiArgs and ClusterPrivateApiOutput values.
// You can construct a concrete instance of `ClusterPrivateApiInput` via:
//
//	ClusterPrivateApiArgs{...}
type ClusterPrivateApiInput interface {
	pulumi.Input

	ToClusterPrivateApiOutput() ClusterPrivateApiOutput
	ToClusterPrivateApiOutputWithContext(context.Context) ClusterPrivateApiOutput
}

type ClusterPrivateApiArgs struct {
	// Enable the private endpoint for Kubernetes API.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterPrivateApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateApi)(nil)).Elem()
}

func (i ClusterPrivateApiArgs) ToClusterPrivateApiOutput() ClusterPrivateApiOutput {
	return i.ToClusterPrivateApiOutputWithContext(context.Background())
}

func (i ClusterPrivateApiArgs) ToClusterPrivateApiOutputWithContext(ctx context.Context) ClusterPrivateApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateApiOutput)
}

func (i ClusterPrivateApiArgs) ToClusterPrivateApiPtrOutput() ClusterPrivateApiPtrOutput {
	return i.ToClusterPrivateApiPtrOutputWithContext(context.Background())
}

func (i ClusterPrivateApiArgs) ToClusterPrivateApiPtrOutputWithContext(ctx context.Context) ClusterPrivateApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateApiOutput).ToClusterPrivateApiPtrOutputWithContext(ctx)
}

// ClusterPrivateApiPtrInput is an input type that accepts ClusterPrivateApiArgs, ClusterPrivateApiPtr and ClusterPrivateApiPtrOutput values.
// You can construct a concrete instance of `ClusterPrivateApiPtrInput` via:
//
//	        ClusterPrivateApiArgs{...}
//
//	or:
//
//	        nil
type ClusterPrivateApiPtrInput interface {
	pulumi.Input

	ToClusterPrivateApiPtrOutput() ClusterPrivateApiPtrOutput
	ToClusterPrivateApiPtrOutputWithContext(context.Context) ClusterPrivateApiPtrOutput
}

type clusterPrivateApiPtrType ClusterPrivateApiArgs

func ClusterPrivateApiPtr(v *ClusterPrivateApiArgs) ClusterPrivateApiPtrInput {
	return (*clusterPrivateApiPtrType)(v)
}

func (*clusterPrivateApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateApi)(nil)).Elem()
}

func (i *clusterPrivateApiPtrType) ToClusterPrivateApiPtrOutput() ClusterPrivateApiPtrOutput {
	return i.ToClusterPrivateApiPtrOutputWithContext(context.Background())
}

func (i *clusterPrivateApiPtrType) ToClusterPrivateApiPtrOutputWithContext(ctx context.Context) ClusterPrivateApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateApiPtrOutput)
}

type ClusterPrivateApiOutput struct{ *pulumi.OutputState }

func (ClusterPrivateApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateApi)(nil)).Elem()
}

func (o ClusterPrivateApiOutput) ToClusterPrivateApiOutput() ClusterPrivateApiOutput {
	return o
}

func (o ClusterPrivateApiOutput) ToClusterPrivateApiOutputWithContext(ctx context.Context) ClusterPrivateApiOutput {
	return o
}

func (o ClusterPrivateApiOutput) ToClusterPrivateApiPtrOutput() ClusterPrivateApiPtrOutput {
	return o.ToClusterPrivateApiPtrOutputWithContext(context.Background())
}

func (o ClusterPrivateApiOutput) ToClusterPrivateApiPtrOutputWithContext(ctx context.Context) ClusterPrivateApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPrivateApi) *ClusterPrivateApi {
		return &v
	}).(ClusterPrivateApiPtrOutput)
}

// Enable the private endpoint for Kubernetes API.
func (o ClusterPrivateApiOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateApi) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterPrivateApiPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrivateApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrivateApi)(nil)).Elem()
}

func (o ClusterPrivateApiPtrOutput) ToClusterPrivateApiPtrOutput() ClusterPrivateApiPtrOutput {
	return o
}

func (o ClusterPrivateApiPtrOutput) ToClusterPrivateApiPtrOutputWithContext(ctx context.Context) ClusterPrivateApiPtrOutput {
	return o
}

func (o ClusterPrivateApiPtrOutput) Elem() ClusterPrivateApiOutput {
	return o.ApplyT(func(v *ClusterPrivateApi) ClusterPrivateApi {
		if v != nil {
			return *v
		}
		var ret ClusterPrivateApi
		return ret
	}).(ClusterPrivateApiOutput)
}

// Enable the private endpoint for Kubernetes API.
func (o ClusterPrivateApiPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPrivateApi) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterPublicApi struct {
	// Enable the public endpoint for Kubernetes API.
	Enabled *bool `pulumi:"enabled"`
	// The list of CIDR that will be allowed to reach the public endpoint for Kubernetes API.
	Whitelist []string `pulumi:"whitelist"`
}

// ClusterPublicApiInput is an input type that accepts ClusterPublicApiArgs and ClusterPublicApiOutput values.
// You can construct a concrete instance of `ClusterPublicApiInput` via:
//
//	ClusterPublicApiArgs{...}
type ClusterPublicApiInput interface {
	pulumi.Input

	ToClusterPublicApiOutput() ClusterPublicApiOutput
	ToClusterPublicApiOutputWithContext(context.Context) ClusterPublicApiOutput
}

type ClusterPublicApiArgs struct {
	// Enable the public endpoint for Kubernetes API.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The list of CIDR that will be allowed to reach the public endpoint for Kubernetes API.
	Whitelist pulumi.StringArrayInput `pulumi:"whitelist"`
}

func (ClusterPublicApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicApi)(nil)).Elem()
}

func (i ClusterPublicApiArgs) ToClusterPublicApiOutput() ClusterPublicApiOutput {
	return i.ToClusterPublicApiOutputWithContext(context.Background())
}

func (i ClusterPublicApiArgs) ToClusterPublicApiOutputWithContext(ctx context.Context) ClusterPublicApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicApiOutput)
}

func (i ClusterPublicApiArgs) ToClusterPublicApiPtrOutput() ClusterPublicApiPtrOutput {
	return i.ToClusterPublicApiPtrOutputWithContext(context.Background())
}

func (i ClusterPublicApiArgs) ToClusterPublicApiPtrOutputWithContext(ctx context.Context) ClusterPublicApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicApiOutput).ToClusterPublicApiPtrOutputWithContext(ctx)
}

// ClusterPublicApiPtrInput is an input type that accepts ClusterPublicApiArgs, ClusterPublicApiPtr and ClusterPublicApiPtrOutput values.
// You can construct a concrete instance of `ClusterPublicApiPtrInput` via:
//
//	        ClusterPublicApiArgs{...}
//
//	or:
//
//	        nil
type ClusterPublicApiPtrInput interface {
	pulumi.Input

	ToClusterPublicApiPtrOutput() ClusterPublicApiPtrOutput
	ToClusterPublicApiPtrOutputWithContext(context.Context) ClusterPublicApiPtrOutput
}

type clusterPublicApiPtrType ClusterPublicApiArgs

func ClusterPublicApiPtr(v *ClusterPublicApiArgs) ClusterPublicApiPtrInput {
	return (*clusterPublicApiPtrType)(v)
}

func (*clusterPublicApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPublicApi)(nil)).Elem()
}

func (i *clusterPublicApiPtrType) ToClusterPublicApiPtrOutput() ClusterPublicApiPtrOutput {
	return i.ToClusterPublicApiPtrOutputWithContext(context.Background())
}

func (i *clusterPublicApiPtrType) ToClusterPublicApiPtrOutputWithContext(ctx context.Context) ClusterPublicApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicApiPtrOutput)
}

type ClusterPublicApiOutput struct{ *pulumi.OutputState }

func (ClusterPublicApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicApi)(nil)).Elem()
}

func (o ClusterPublicApiOutput) ToClusterPublicApiOutput() ClusterPublicApiOutput {
	return o
}

func (o ClusterPublicApiOutput) ToClusterPublicApiOutputWithContext(ctx context.Context) ClusterPublicApiOutput {
	return o
}

func (o ClusterPublicApiOutput) ToClusterPublicApiPtrOutput() ClusterPublicApiPtrOutput {
	return o.ToClusterPublicApiPtrOutputWithContext(context.Background())
}

func (o ClusterPublicApiOutput) ToClusterPublicApiPtrOutputWithContext(ctx context.Context) ClusterPublicApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPublicApi) *ClusterPublicApi {
		return &v
	}).(ClusterPublicApiPtrOutput)
}

// Enable the public endpoint for Kubernetes API.
func (o ClusterPublicApiOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPublicApi) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The list of CIDR that will be allowed to reach the public endpoint for Kubernetes API.
func (o ClusterPublicApiOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterPublicApi) []string { return v.Whitelist }).(pulumi.StringArrayOutput)
}

type ClusterPublicApiPtrOutput struct{ *pulumi.OutputState }

func (ClusterPublicApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPublicApi)(nil)).Elem()
}

func (o ClusterPublicApiPtrOutput) ToClusterPublicApiPtrOutput() ClusterPublicApiPtrOutput {
	return o
}

func (o ClusterPublicApiPtrOutput) ToClusterPublicApiPtrOutputWithContext(ctx context.Context) ClusterPublicApiPtrOutput {
	return o
}

func (o ClusterPublicApiPtrOutput) Elem() ClusterPublicApiOutput {
	return o.ApplyT(func(v *ClusterPublicApi) ClusterPublicApi {
		if v != nil {
			return *v
		}
		var ret ClusterPublicApi
		return ret
	}).(ClusterPublicApiOutput)
}

// Enable the public endpoint for Kubernetes API.
func (o ClusterPublicApiPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterPublicApi) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The list of CIDR that will be allowed to reach the public endpoint for Kubernetes API.
func (o ClusterPublicApiPtrOutput) Whitelist() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterPublicApi) []string {
		if v == nil {
			return nil
		}
		return v.Whitelist
	}).(pulumi.StringArrayOutput)
}

type DashboardType struct {
	// The hostname associated with the dashboard.
	Hostname *string `pulumi:"hostname"`
}

type ExternalDnsType struct {
	// The list of DNS Zone arn to be used by ExternalDns.
	ZoneArns []string `pulumi:"zoneArns"`
}

type FluentbitType struct {
	// The AWS Region.
	AwsRegion string `pulumi:"awsRegion"`
	// The cluster name.
	ClusterName string `pulumi:"clusterName"`
	// Configure logging.
	Logging *FluentbitLogging `pulumi:"logging"`
}

type FluentbitLogging struct {
	// Configure applications logging.
	Applications *FluentbitLoggingItem `pulumi:"applications"`
	// Configure data plane logging.
	Dataplane *FluentbitLoggingItem `pulumi:"dataplane"`
	// Configure host logging.
	Host *FluentbitLoggingItem `pulumi:"host"`
}

// FluentbitLoggingInput is an input type that accepts FluentbitLoggingArgs and FluentbitLoggingOutput values.
// You can construct a concrete instance of `FluentbitLoggingInput` via:
//
//	FluentbitLoggingArgs{...}
type FluentbitLoggingInput interface {
	pulumi.Input

	ToFluentbitLoggingOutput() FluentbitLoggingOutput
	ToFluentbitLoggingOutputWithContext(context.Context) FluentbitLoggingOutput
}

type FluentbitLoggingArgs struct {
	// Configure applications logging.
	Applications FluentbitLoggingItemPtrInput `pulumi:"applications"`
	// Configure data plane logging.
	Dataplane FluentbitLoggingItemPtrInput `pulumi:"dataplane"`
	// Configure host logging.
	Host FluentbitLoggingItemPtrInput `pulumi:"host"`
}

func (FluentbitLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluentbitLogging)(nil)).Elem()
}

func (i FluentbitLoggingArgs) ToFluentbitLoggingOutput() FluentbitLoggingOutput {
	return i.ToFluentbitLoggingOutputWithContext(context.Background())
}

func (i FluentbitLoggingArgs) ToFluentbitLoggingOutputWithContext(ctx context.Context) FluentbitLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingOutput)
}

func (i FluentbitLoggingArgs) ToFluentbitLoggingPtrOutput() FluentbitLoggingPtrOutput {
	return i.ToFluentbitLoggingPtrOutputWithContext(context.Background())
}

func (i FluentbitLoggingArgs) ToFluentbitLoggingPtrOutputWithContext(ctx context.Context) FluentbitLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingOutput).ToFluentbitLoggingPtrOutputWithContext(ctx)
}

// FluentbitLoggingPtrInput is an input type that accepts FluentbitLoggingArgs, FluentbitLoggingPtr and FluentbitLoggingPtrOutput values.
// You can construct a concrete instance of `FluentbitLoggingPtrInput` via:
//
//	        FluentbitLoggingArgs{...}
//
//	or:
//
//	        nil
type FluentbitLoggingPtrInput interface {
	pulumi.Input

	ToFluentbitLoggingPtrOutput() FluentbitLoggingPtrOutput
	ToFluentbitLoggingPtrOutputWithContext(context.Context) FluentbitLoggingPtrOutput
}

type fluentbitLoggingPtrType FluentbitLoggingArgs

func FluentbitLoggingPtr(v *FluentbitLoggingArgs) FluentbitLoggingPtrInput {
	return (*fluentbitLoggingPtrType)(v)
}

func (*fluentbitLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluentbitLogging)(nil)).Elem()
}

func (i *fluentbitLoggingPtrType) ToFluentbitLoggingPtrOutput() FluentbitLoggingPtrOutput {
	return i.ToFluentbitLoggingPtrOutputWithContext(context.Background())
}

func (i *fluentbitLoggingPtrType) ToFluentbitLoggingPtrOutputWithContext(ctx context.Context) FluentbitLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingPtrOutput)
}

type FluentbitLoggingOutput struct{ *pulumi.OutputState }

func (FluentbitLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluentbitLogging)(nil)).Elem()
}

func (o FluentbitLoggingOutput) ToFluentbitLoggingOutput() FluentbitLoggingOutput {
	return o
}

func (o FluentbitLoggingOutput) ToFluentbitLoggingOutputWithContext(ctx context.Context) FluentbitLoggingOutput {
	return o
}

func (o FluentbitLoggingOutput) ToFluentbitLoggingPtrOutput() FluentbitLoggingPtrOutput {
	return o.ToFluentbitLoggingPtrOutputWithContext(context.Background())
}

func (o FluentbitLoggingOutput) ToFluentbitLoggingPtrOutputWithContext(ctx context.Context) FluentbitLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluentbitLogging) *FluentbitLogging {
		return &v
	}).(FluentbitLoggingPtrOutput)
}

// Configure applications logging.
func (o FluentbitLoggingOutput) Applications() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v FluentbitLogging) *FluentbitLoggingItem { return v.Applications }).(FluentbitLoggingItemPtrOutput)
}

// Configure data plane logging.
func (o FluentbitLoggingOutput) Dataplane() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v FluentbitLogging) *FluentbitLoggingItem { return v.Dataplane }).(FluentbitLoggingItemPtrOutput)
}

// Configure host logging.
func (o FluentbitLoggingOutput) Host() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v FluentbitLogging) *FluentbitLoggingItem { return v.Host }).(FluentbitLoggingItemPtrOutput)
}

type FluentbitLoggingPtrOutput struct{ *pulumi.OutputState }

func (FluentbitLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluentbitLogging)(nil)).Elem()
}

func (o FluentbitLoggingPtrOutput) ToFluentbitLoggingPtrOutput() FluentbitLoggingPtrOutput {
	return o
}

func (o FluentbitLoggingPtrOutput) ToFluentbitLoggingPtrOutputWithContext(ctx context.Context) FluentbitLoggingPtrOutput {
	return o
}

func (o FluentbitLoggingPtrOutput) Elem() FluentbitLoggingOutput {
	return o.ApplyT(func(v *FluentbitLogging) FluentbitLogging {
		if v != nil {
			return *v
		}
		var ret FluentbitLogging
		return ret
	}).(FluentbitLoggingOutput)
}

// Configure applications logging.
func (o FluentbitLoggingPtrOutput) Applications() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v *FluentbitLogging) *FluentbitLoggingItem {
		if v == nil {
			return nil
		}
		return v.Applications
	}).(FluentbitLoggingItemPtrOutput)
}

// Configure data plane logging.
func (o FluentbitLoggingPtrOutput) Dataplane() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v *FluentbitLogging) *FluentbitLoggingItem {
		if v == nil {
			return nil
		}
		return v.Dataplane
	}).(FluentbitLoggingItemPtrOutput)
}

// Configure host logging.
func (o FluentbitLoggingPtrOutput) Host() FluentbitLoggingItemPtrOutput {
	return o.ApplyT(func(v *FluentbitLogging) *FluentbitLoggingItem {
		if v == nil {
			return nil
		}
		return v.Host
	}).(FluentbitLoggingItemPtrOutput)
}

type FluentbitLoggingItem struct {
	// Data retention expressed in days.
	DataRetention *float64 `pulumi:"dataRetention"`
	// Enable logging.
	Enabled bool `pulumi:"enabled"`
}

// FluentbitLoggingItemInput is an input type that accepts FluentbitLoggingItemArgs and FluentbitLoggingItemOutput values.
// You can construct a concrete instance of `FluentbitLoggingItemInput` via:
//
//	FluentbitLoggingItemArgs{...}
type FluentbitLoggingItemInput interface {
	pulumi.Input

	ToFluentbitLoggingItemOutput() FluentbitLoggingItemOutput
	ToFluentbitLoggingItemOutputWithContext(context.Context) FluentbitLoggingItemOutput
}

type FluentbitLoggingItemArgs struct {
	// Data retention expressed in days.
	DataRetention pulumi.Float64PtrInput `pulumi:"dataRetention"`
	// Enable logging.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (FluentbitLoggingItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FluentbitLoggingItem)(nil)).Elem()
}

func (i FluentbitLoggingItemArgs) ToFluentbitLoggingItemOutput() FluentbitLoggingItemOutput {
	return i.ToFluentbitLoggingItemOutputWithContext(context.Background())
}

func (i FluentbitLoggingItemArgs) ToFluentbitLoggingItemOutputWithContext(ctx context.Context) FluentbitLoggingItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingItemOutput)
}

func (i FluentbitLoggingItemArgs) ToFluentbitLoggingItemPtrOutput() FluentbitLoggingItemPtrOutput {
	return i.ToFluentbitLoggingItemPtrOutputWithContext(context.Background())
}

func (i FluentbitLoggingItemArgs) ToFluentbitLoggingItemPtrOutputWithContext(ctx context.Context) FluentbitLoggingItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingItemOutput).ToFluentbitLoggingItemPtrOutputWithContext(ctx)
}

// FluentbitLoggingItemPtrInput is an input type that accepts FluentbitLoggingItemArgs, FluentbitLoggingItemPtr and FluentbitLoggingItemPtrOutput values.
// You can construct a concrete instance of `FluentbitLoggingItemPtrInput` via:
//
//	        FluentbitLoggingItemArgs{...}
//
//	or:
//
//	        nil
type FluentbitLoggingItemPtrInput interface {
	pulumi.Input

	ToFluentbitLoggingItemPtrOutput() FluentbitLoggingItemPtrOutput
	ToFluentbitLoggingItemPtrOutputWithContext(context.Context) FluentbitLoggingItemPtrOutput
}

type fluentbitLoggingItemPtrType FluentbitLoggingItemArgs

func FluentbitLoggingItemPtr(v *FluentbitLoggingItemArgs) FluentbitLoggingItemPtrInput {
	return (*fluentbitLoggingItemPtrType)(v)
}

func (*fluentbitLoggingItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FluentbitLoggingItem)(nil)).Elem()
}

func (i *fluentbitLoggingItemPtrType) ToFluentbitLoggingItemPtrOutput() FluentbitLoggingItemPtrOutput {
	return i.ToFluentbitLoggingItemPtrOutputWithContext(context.Background())
}

func (i *fluentbitLoggingItemPtrType) ToFluentbitLoggingItemPtrOutputWithContext(ctx context.Context) FluentbitLoggingItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FluentbitLoggingItemPtrOutput)
}

type FluentbitLoggingItemOutput struct{ *pulumi.OutputState }

func (FluentbitLoggingItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FluentbitLoggingItem)(nil)).Elem()
}

func (o FluentbitLoggingItemOutput) ToFluentbitLoggingItemOutput() FluentbitLoggingItemOutput {
	return o
}

func (o FluentbitLoggingItemOutput) ToFluentbitLoggingItemOutputWithContext(ctx context.Context) FluentbitLoggingItemOutput {
	return o
}

func (o FluentbitLoggingItemOutput) ToFluentbitLoggingItemPtrOutput() FluentbitLoggingItemPtrOutput {
	return o.ToFluentbitLoggingItemPtrOutputWithContext(context.Background())
}

func (o FluentbitLoggingItemOutput) ToFluentbitLoggingItemPtrOutputWithContext(ctx context.Context) FluentbitLoggingItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FluentbitLoggingItem) *FluentbitLoggingItem {
		return &v
	}).(FluentbitLoggingItemPtrOutput)
}

// Data retention expressed in days.
func (o FluentbitLoggingItemOutput) DataRetention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FluentbitLoggingItem) *float64 { return v.DataRetention }).(pulumi.Float64PtrOutput)
}

// Enable logging.
func (o FluentbitLoggingItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FluentbitLoggingItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type FluentbitLoggingItemPtrOutput struct{ *pulumi.OutputState }

func (FluentbitLoggingItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FluentbitLoggingItem)(nil)).Elem()
}

func (o FluentbitLoggingItemPtrOutput) ToFluentbitLoggingItemPtrOutput() FluentbitLoggingItemPtrOutput {
	return o
}

func (o FluentbitLoggingItemPtrOutput) ToFluentbitLoggingItemPtrOutputWithContext(ctx context.Context) FluentbitLoggingItemPtrOutput {
	return o
}

func (o FluentbitLoggingItemPtrOutput) Elem() FluentbitLoggingItemOutput {
	return o.ApplyT(func(v *FluentbitLoggingItem) FluentbitLoggingItem {
		if v != nil {
			return *v
		}
		var ret FluentbitLoggingItem
		return ret
	}).(FluentbitLoggingItemOutput)
}

// Data retention expressed in days.
func (o FluentbitLoggingItemPtrOutput) DataRetention() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FluentbitLoggingItem) *float64 {
		if v == nil {
			return nil
		}
		return v.DataRetention
	}).(pulumi.Float64PtrOutput)
}

// Enable logging.
func (o FluentbitLoggingItemPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FluentbitLoggingItem) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type IamAuthenticatorType struct {
	// List of AWS Accounts allowed to authenticate in the cluster.
	Accounts []string `pulumi:"accounts"`
	// The list of AWS IAM Users names to be configured as cluster-admin.
	ClusterAdmins []string `pulumi:"clusterAdmins"`
	// The EKS Cluster ARN.
	ClusterArn string `pulumi:"clusterArn"`
	// The Kubeconfig to access to the cluster.
	Kubeconfig string `pulumi:"kubeconfig"`
	// The list of AWS IAM Roles for NodeGroups to generate the aws-auth ConfigMap.
	NodeGroupRoles []IamAuthenticatorRole `pulumi:"nodeGroupRoles"`
	// The list of AWS IAM Roles to generate the aws-auth ConfigMap.
	Roles []IamAuthenticatorRole `pulumi:"roles"`
	// The list of AWS IAM Users to generate the aws-auth ConfigMap.
	Users []IamAuthenticatorUser `pulumi:"users"`
}

type IamAuthenticatorRole struct {
	// The list of Kubernetes groups to be associated with the AWS IAM Role.
	Groups []string `pulumi:"groups"`
	// The AWS IAM Role arn.
	Rolearn string `pulumi:"rolearn"`
	// The Kubernetes username to be associated with the AWS IAM Role.
	Username string `pulumi:"username"`
}

// IamAuthenticatorRoleInput is an input type that accepts IamAuthenticatorRoleArgs and IamAuthenticatorRoleOutput values.
// You can construct a concrete instance of `IamAuthenticatorRoleInput` via:
//
//	IamAuthenticatorRoleArgs{...}
type IamAuthenticatorRoleInput interface {
	pulumi.Input

	ToIamAuthenticatorRoleOutput() IamAuthenticatorRoleOutput
	ToIamAuthenticatorRoleOutputWithContext(context.Context) IamAuthenticatorRoleOutput
}

type IamAuthenticatorRoleArgs struct {
	// The list of Kubernetes groups to be associated with the AWS IAM Role.
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// The AWS IAM Role arn.
	Rolearn pulumi.StringInput `pulumi:"rolearn"`
	// The Kubernetes username to be associated with the AWS IAM Role.
	Username pulumi.StringInput `pulumi:"username"`
}

func (IamAuthenticatorRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuthenticatorRole)(nil)).Elem()
}

func (i IamAuthenticatorRoleArgs) ToIamAuthenticatorRoleOutput() IamAuthenticatorRoleOutput {
	return i.ToIamAuthenticatorRoleOutputWithContext(context.Background())
}

func (i IamAuthenticatorRoleArgs) ToIamAuthenticatorRoleOutputWithContext(ctx context.Context) IamAuthenticatorRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuthenticatorRoleOutput)
}

// IamAuthenticatorRoleArrayInput is an input type that accepts IamAuthenticatorRoleArray and IamAuthenticatorRoleArrayOutput values.
// You can construct a concrete instance of `IamAuthenticatorRoleArrayInput` via:
//
//	IamAuthenticatorRoleArray{ IamAuthenticatorRoleArgs{...} }
type IamAuthenticatorRoleArrayInput interface {
	pulumi.Input

	ToIamAuthenticatorRoleArrayOutput() IamAuthenticatorRoleArrayOutput
	ToIamAuthenticatorRoleArrayOutputWithContext(context.Context) IamAuthenticatorRoleArrayOutput
}

type IamAuthenticatorRoleArray []IamAuthenticatorRoleInput

func (IamAuthenticatorRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuthenticatorRole)(nil)).Elem()
}

func (i IamAuthenticatorRoleArray) ToIamAuthenticatorRoleArrayOutput() IamAuthenticatorRoleArrayOutput {
	return i.ToIamAuthenticatorRoleArrayOutputWithContext(context.Background())
}

func (i IamAuthenticatorRoleArray) ToIamAuthenticatorRoleArrayOutputWithContext(ctx context.Context) IamAuthenticatorRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuthenticatorRoleArrayOutput)
}

type IamAuthenticatorRoleOutput struct{ *pulumi.OutputState }

func (IamAuthenticatorRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuthenticatorRole)(nil)).Elem()
}

func (o IamAuthenticatorRoleOutput) ToIamAuthenticatorRoleOutput() IamAuthenticatorRoleOutput {
	return o
}

func (o IamAuthenticatorRoleOutput) ToIamAuthenticatorRoleOutputWithContext(ctx context.Context) IamAuthenticatorRoleOutput {
	return o
}

// The list of Kubernetes groups to be associated with the AWS IAM Role.
func (o IamAuthenticatorRoleOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuthenticatorRole) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The AWS IAM Role arn.
func (o IamAuthenticatorRoleOutput) Rolearn() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuthenticatorRole) string { return v.Rolearn }).(pulumi.StringOutput)
}

// The Kubernetes username to be associated with the AWS IAM Role.
func (o IamAuthenticatorRoleOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuthenticatorRole) string { return v.Username }).(pulumi.StringOutput)
}

type IamAuthenticatorRoleArrayOutput struct{ *pulumi.OutputState }

func (IamAuthenticatorRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuthenticatorRole)(nil)).Elem()
}

func (o IamAuthenticatorRoleArrayOutput) ToIamAuthenticatorRoleArrayOutput() IamAuthenticatorRoleArrayOutput {
	return o
}

func (o IamAuthenticatorRoleArrayOutput) ToIamAuthenticatorRoleArrayOutputWithContext(ctx context.Context) IamAuthenticatorRoleArrayOutput {
	return o
}

func (o IamAuthenticatorRoleArrayOutput) Index(i pulumi.IntInput) IamAuthenticatorRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuthenticatorRole {
		return vs[0].([]IamAuthenticatorRole)[vs[1].(int)]
	}).(IamAuthenticatorRoleOutput)
}

type IamAuthenticatorUser struct {
	// The list of Kubernetes groups to be associated with the AWS IAM User.
	Groups []string `pulumi:"groups"`
	// The AWS IAM User arn.
	Userarn string `pulumi:"userarn"`
	// The Kubernetes username to be associated with the AWS IAM User.
	Username string `pulumi:"username"`
}

// IamAuthenticatorUserInput is an input type that accepts IamAuthenticatorUserArgs and IamAuthenticatorUserOutput values.
// You can construct a concrete instance of `IamAuthenticatorUserInput` via:
//
//	IamAuthenticatorUserArgs{...}
type IamAuthenticatorUserInput interface {
	pulumi.Input

	ToIamAuthenticatorUserOutput() IamAuthenticatorUserOutput
	ToIamAuthenticatorUserOutputWithContext(context.Context) IamAuthenticatorUserOutput
}

type IamAuthenticatorUserArgs struct {
	// The list of Kubernetes groups to be associated with the AWS IAM User.
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	// The AWS IAM User arn.
	Userarn pulumi.StringInput `pulumi:"userarn"`
	// The Kubernetes username to be associated with the AWS IAM User.
	Username pulumi.StringInput `pulumi:"username"`
}

func (IamAuthenticatorUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuthenticatorUser)(nil)).Elem()
}

func (i IamAuthenticatorUserArgs) ToIamAuthenticatorUserOutput() IamAuthenticatorUserOutput {
	return i.ToIamAuthenticatorUserOutputWithContext(context.Background())
}

func (i IamAuthenticatorUserArgs) ToIamAuthenticatorUserOutputWithContext(ctx context.Context) IamAuthenticatorUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuthenticatorUserOutput)
}

// IamAuthenticatorUserArrayInput is an input type that accepts IamAuthenticatorUserArray and IamAuthenticatorUserArrayOutput values.
// You can construct a concrete instance of `IamAuthenticatorUserArrayInput` via:
//
//	IamAuthenticatorUserArray{ IamAuthenticatorUserArgs{...} }
type IamAuthenticatorUserArrayInput interface {
	pulumi.Input

	ToIamAuthenticatorUserArrayOutput() IamAuthenticatorUserArrayOutput
	ToIamAuthenticatorUserArrayOutputWithContext(context.Context) IamAuthenticatorUserArrayOutput
}

type IamAuthenticatorUserArray []IamAuthenticatorUserInput

func (IamAuthenticatorUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuthenticatorUser)(nil)).Elem()
}

func (i IamAuthenticatorUserArray) ToIamAuthenticatorUserArrayOutput() IamAuthenticatorUserArrayOutput {
	return i.ToIamAuthenticatorUserArrayOutputWithContext(context.Background())
}

func (i IamAuthenticatorUserArray) ToIamAuthenticatorUserArrayOutputWithContext(ctx context.Context) IamAuthenticatorUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAuthenticatorUserArrayOutput)
}

type IamAuthenticatorUserOutput struct{ *pulumi.OutputState }

func (IamAuthenticatorUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamAuthenticatorUser)(nil)).Elem()
}

func (o IamAuthenticatorUserOutput) ToIamAuthenticatorUserOutput() IamAuthenticatorUserOutput {
	return o
}

func (o IamAuthenticatorUserOutput) ToIamAuthenticatorUserOutputWithContext(ctx context.Context) IamAuthenticatorUserOutput {
	return o
}

// The list of Kubernetes groups to be associated with the AWS IAM User.
func (o IamAuthenticatorUserOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IamAuthenticatorUser) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The AWS IAM User arn.
func (o IamAuthenticatorUserOutput) Userarn() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuthenticatorUser) string { return v.Userarn }).(pulumi.StringOutput)
}

// The Kubernetes username to be associated with the AWS IAM User.
func (o IamAuthenticatorUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v IamAuthenticatorUser) string { return v.Username }).(pulumi.StringOutput)
}

type IamAuthenticatorUserArrayOutput struct{ *pulumi.OutputState }

func (IamAuthenticatorUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamAuthenticatorUser)(nil)).Elem()
}

func (o IamAuthenticatorUserArrayOutput) ToIamAuthenticatorUserArrayOutput() IamAuthenticatorUserArrayOutput {
	return o
}

func (o IamAuthenticatorUserArrayOutput) ToIamAuthenticatorUserArrayOutputWithContext(ctx context.Context) IamAuthenticatorUserArrayOutput {
	return o
}

func (o IamAuthenticatorUserArrayOutput) Index(i pulumi.IntInput) IamAuthenticatorUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamAuthenticatorUser {
		return vs[0].([]IamAuthenticatorUser)[vs[1].(int)]
	}).(IamAuthenticatorUserOutput)
}

type IngressNginxType struct {
	// The Ingress class name.
	ClassName string `pulumi:"className"`
	// Set this IngressController with the defaul IngressClass.
	Default *bool `pulumi:"default"`
	// Expose the IngressController with a public Load Balancer.
	Public *bool `pulumi:"public"`
	// The domain associated to the IngressController.
	Tls *IngressNginxTls `pulumi:"tls"`
	// The whitelist of CIDR to access to the Ingress Controller.
	Whitelist []string `pulumi:"whitelist"`
}

type IngressNginxTls struct {
	// The domain to be used to create a signed Certificate.
	Domain string `pulumi:"domain"`
	// Enable the signed Certificate.
	Enabled *bool `pulumi:"enabled"`
	// The Zone id.
	ZoneId string `pulumi:"zoneId"`
}

// IngressNginxTlsInput is an input type that accepts IngressNginxTlsArgs and IngressNginxTlsOutput values.
// You can construct a concrete instance of `IngressNginxTlsInput` via:
//
//	IngressNginxTlsArgs{...}
type IngressNginxTlsInput interface {
	pulumi.Input

	ToIngressNginxTlsOutput() IngressNginxTlsOutput
	ToIngressNginxTlsOutputWithContext(context.Context) IngressNginxTlsOutput
}

type IngressNginxTlsArgs struct {
	// The domain to be used to create a signed Certificate.
	Domain pulumi.StringInput `pulumi:"domain"`
	// Enable the signed Certificate.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (IngressNginxTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressNginxTls)(nil)).Elem()
}

func (i IngressNginxTlsArgs) ToIngressNginxTlsOutput() IngressNginxTlsOutput {
	return i.ToIngressNginxTlsOutputWithContext(context.Background())
}

func (i IngressNginxTlsArgs) ToIngressNginxTlsOutputWithContext(ctx context.Context) IngressNginxTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressNginxTlsOutput)
}

func (i IngressNginxTlsArgs) ToIngressNginxTlsPtrOutput() IngressNginxTlsPtrOutput {
	return i.ToIngressNginxTlsPtrOutputWithContext(context.Background())
}

func (i IngressNginxTlsArgs) ToIngressNginxTlsPtrOutputWithContext(ctx context.Context) IngressNginxTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressNginxTlsOutput).ToIngressNginxTlsPtrOutputWithContext(ctx)
}

// IngressNginxTlsPtrInput is an input type that accepts IngressNginxTlsArgs, IngressNginxTlsPtr and IngressNginxTlsPtrOutput values.
// You can construct a concrete instance of `IngressNginxTlsPtrInput` via:
//
//	        IngressNginxTlsArgs{...}
//
//	or:
//
//	        nil
type IngressNginxTlsPtrInput interface {
	pulumi.Input

	ToIngressNginxTlsPtrOutput() IngressNginxTlsPtrOutput
	ToIngressNginxTlsPtrOutputWithContext(context.Context) IngressNginxTlsPtrOutput
}

type ingressNginxTlsPtrType IngressNginxTlsArgs

func IngressNginxTlsPtr(v *IngressNginxTlsArgs) IngressNginxTlsPtrInput {
	return (*ingressNginxTlsPtrType)(v)
}

func (*ingressNginxTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressNginxTls)(nil)).Elem()
}

func (i *ingressNginxTlsPtrType) ToIngressNginxTlsPtrOutput() IngressNginxTlsPtrOutput {
	return i.ToIngressNginxTlsPtrOutputWithContext(context.Background())
}

func (i *ingressNginxTlsPtrType) ToIngressNginxTlsPtrOutputWithContext(ctx context.Context) IngressNginxTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressNginxTlsPtrOutput)
}

type IngressNginxTlsOutput struct{ *pulumi.OutputState }

func (IngressNginxTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressNginxTls)(nil)).Elem()
}

func (o IngressNginxTlsOutput) ToIngressNginxTlsOutput() IngressNginxTlsOutput {
	return o
}

func (o IngressNginxTlsOutput) ToIngressNginxTlsOutputWithContext(ctx context.Context) IngressNginxTlsOutput {
	return o
}

func (o IngressNginxTlsOutput) ToIngressNginxTlsPtrOutput() IngressNginxTlsPtrOutput {
	return o.ToIngressNginxTlsPtrOutputWithContext(context.Background())
}

func (o IngressNginxTlsOutput) ToIngressNginxTlsPtrOutputWithContext(ctx context.Context) IngressNginxTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IngressNginxTls) *IngressNginxTls {
		return &v
	}).(IngressNginxTlsPtrOutput)
}

// The domain to be used to create a signed Certificate.
func (o IngressNginxTlsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v IngressNginxTls) string { return v.Domain }).(pulumi.StringOutput)
}

// Enable the signed Certificate.
func (o IngressNginxTlsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngressNginxTls) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Zone id.
func (o IngressNginxTlsOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v IngressNginxTls) string { return v.ZoneId }).(pulumi.StringOutput)
}

type IngressNginxTlsPtrOutput struct{ *pulumi.OutputState }

func (IngressNginxTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressNginxTls)(nil)).Elem()
}

func (o IngressNginxTlsPtrOutput) ToIngressNginxTlsPtrOutput() IngressNginxTlsPtrOutput {
	return o
}

func (o IngressNginxTlsPtrOutput) ToIngressNginxTlsPtrOutputWithContext(ctx context.Context) IngressNginxTlsPtrOutput {
	return o
}

func (o IngressNginxTlsPtrOutput) Elem() IngressNginxTlsOutput {
	return o.ApplyT(func(v *IngressNginxTls) IngressNginxTls {
		if v != nil {
			return *v
		}
		var ret IngressNginxTls
		return ret
	}).(IngressNginxTlsOutput)
}

// The domain to be used to create a signed Certificate.
func (o IngressNginxTlsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressNginxTls) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// Enable the signed Certificate.
func (o IngressNginxTlsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IngressNginxTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Zone id.
func (o IngressNginxTlsPtrOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressNginxTls) *string {
		if v == nil {
			return nil
		}
		return &v.ZoneId
	}).(pulumi.StringPtrOutput)
}

type IrsaType struct {
	// The OIDC Identity Provider arn used by the IRSA.
	IdentityProvidersArn []string `pulumi:"identityProvidersArn"`
	// The OIDC Identity Provider url used by the IRSA.
	IssuerUrl string `pulumi:"issuerUrl"`
	// Kubernetes provider used by Pulumi.
	K8sProvider *kubernetes.Provider `pulumi:"k8sProvider"`
	// The Namespace name where the addon will be installed.
	Namespace string `pulumi:"namespace"`
	// The list of Policies to be associated to the Irsa.
	Policies []string `pulumi:"policies"`
	// The Service Account name used in Kubernetes.
	ServiceAccountName string `pulumi:"serviceAccountName"`
}

type IrsaApplicationAddon struct {
	// The OIDC Identity Provider arn used by the IRSA.
	IdentityProvidersArn []string `pulumi:"identityProvidersArn"`
	// The OIDC Identity Provider url used by the IRSA.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The Service Account name used in Kubernetes.
	ServiceAccountName string `pulumi:"serviceAccountName"`
}

type NodeGroupType struct {
	// The CA used by the Kubernetes cluster.
	ClusterCA string `pulumi:"clusterCA"`
	// The Kubernetes cluster endpoint.
	ClusterEndpoint string `pulumi:"clusterEndpoint"`
	// The Kubernetes cluster name.
	ClusterName string `pulumi:"clusterName"`
	// The Kubernetes cluster version.
	ClusterVersion string `pulumi:"clusterVersion"`
	// The aws instance type to use for the nodes. Defaults to "t3.medium".
	InstanceType *string `pulumi:"instanceType"`
	// The maxium number of nodes running in the node group. Defaults to 2.
	MaxCount *float64 `pulumi:"maxCount"`
	// The maximum number of nodes unavailable at once during a version update. Defaults to 1.
	MaxUnavailable *float64 `pulumi:"maxUnavailable"`
	// The minimum number of nodes running in the node group. Defaults to 1.
	MinCount *float64 `pulumi:"minCount"`
	// The name that identies the resource.
	Name string `pulumi:"name"`
	// The list of subnets ids where the nodes will be deployed.
	SubnetIds []string `pulumi:"subnetIds"`
}

type ProjectType struct {
	// The list of AWS IAM User arns that can access to this project with 'admin' role.
	AdminUserArns []string `pulumi:"adminUserArns"`
	// The list of AWS IAM User arns that can access to this project with 'edit' role.
	EditUserArns []string `pulumi:"editUserArns"`
	// The kubeconfig to access the kubernetes cluster.
	Kubeconfig string `pulumi:"kubeconfig"`
	// The Project name.
	Name string `pulumi:"name"`
	// The Namespace name where the addon will be installed.
	Namespace string `pulumi:"namespace"`
	// The cluster resources to be assigned to the project.
	Resources *ProjectResources `pulumi:"resources"`
	// The list of AWS IAM User arns that can access to this project with 'view' role.
	ViewUserArns []string `pulumi:"viewUserArns"`
}

type ProjectResources struct {
	// Amount of reserved CPU.
	Cpu *string `pulumi:"cpu"`
	// Amount of CPU limit.
	LimitCpu *string `pulumi:"limitCpu"`
	// Amount of Memory limit.
	LimitMemory *string `pulumi:"limitMemory"`
	// Amount of reserved Memory.
	Memory *string `pulumi:"memory"`
}

// ProjectResourcesInput is an input type that accepts ProjectResourcesArgs and ProjectResourcesOutput values.
// You can construct a concrete instance of `ProjectResourcesInput` via:
//
//	ProjectResourcesArgs{...}
type ProjectResourcesInput interface {
	pulumi.Input

	ToProjectResourcesOutput() ProjectResourcesOutput
	ToProjectResourcesOutputWithContext(context.Context) ProjectResourcesOutput
}

type ProjectResourcesArgs struct {
	// Amount of reserved CPU.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
	// Amount of CPU limit.
	LimitCpu pulumi.StringPtrInput `pulumi:"limitCpu"`
	// Amount of Memory limit.
	LimitMemory pulumi.StringPtrInput `pulumi:"limitMemory"`
	// Amount of reserved Memory.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

func (ProjectResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResources)(nil)).Elem()
}

func (i ProjectResourcesArgs) ToProjectResourcesOutput() ProjectResourcesOutput {
	return i.ToProjectResourcesOutputWithContext(context.Background())
}

func (i ProjectResourcesArgs) ToProjectResourcesOutputWithContext(ctx context.Context) ProjectResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourcesOutput)
}

func (i ProjectResourcesArgs) ToProjectResourcesPtrOutput() ProjectResourcesPtrOutput {
	return i.ToProjectResourcesPtrOutputWithContext(context.Background())
}

func (i ProjectResourcesArgs) ToProjectResourcesPtrOutputWithContext(ctx context.Context) ProjectResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourcesOutput).ToProjectResourcesPtrOutputWithContext(ctx)
}

// ProjectResourcesPtrInput is an input type that accepts ProjectResourcesArgs, ProjectResourcesPtr and ProjectResourcesPtrOutput values.
// You can construct a concrete instance of `ProjectResourcesPtrInput` via:
//
//	        ProjectResourcesArgs{...}
//
//	or:
//
//	        nil
type ProjectResourcesPtrInput interface {
	pulumi.Input

	ToProjectResourcesPtrOutput() ProjectResourcesPtrOutput
	ToProjectResourcesPtrOutputWithContext(context.Context) ProjectResourcesPtrOutput
}

type projectResourcesPtrType ProjectResourcesArgs

func ProjectResourcesPtr(v *ProjectResourcesArgs) ProjectResourcesPtrInput {
	return (*projectResourcesPtrType)(v)
}

func (*projectResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResources)(nil)).Elem()
}

func (i *projectResourcesPtrType) ToProjectResourcesPtrOutput() ProjectResourcesPtrOutput {
	return i.ToProjectResourcesPtrOutputWithContext(context.Background())
}

func (i *projectResourcesPtrType) ToProjectResourcesPtrOutputWithContext(ctx context.Context) ProjectResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectResourcesPtrOutput)
}

type ProjectResourcesOutput struct{ *pulumi.OutputState }

func (ProjectResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectResources)(nil)).Elem()
}

func (o ProjectResourcesOutput) ToProjectResourcesOutput() ProjectResourcesOutput {
	return o
}

func (o ProjectResourcesOutput) ToProjectResourcesOutputWithContext(ctx context.Context) ProjectResourcesOutput {
	return o
}

func (o ProjectResourcesOutput) ToProjectResourcesPtrOutput() ProjectResourcesPtrOutput {
	return o.ToProjectResourcesPtrOutputWithContext(context.Background())
}

func (o ProjectResourcesOutput) ToProjectResourcesPtrOutputWithContext(ctx context.Context) ProjectResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectResources) *ProjectResources {
		return &v
	}).(ProjectResourcesPtrOutput)
}

// Amount of reserved CPU.
func (o ProjectResourcesOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResources) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// Amount of CPU limit.
func (o ProjectResourcesOutput) LimitCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResources) *string { return v.LimitCpu }).(pulumi.StringPtrOutput)
}

// Amount of Memory limit.
func (o ProjectResourcesOutput) LimitMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResources) *string { return v.LimitMemory }).(pulumi.StringPtrOutput)
}

// Amount of reserved Memory.
func (o ProjectResourcesOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectResources) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ProjectResourcesPtrOutput struct{ *pulumi.OutputState }

func (ProjectResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectResources)(nil)).Elem()
}

func (o ProjectResourcesPtrOutput) ToProjectResourcesPtrOutput() ProjectResourcesPtrOutput {
	return o
}

func (o ProjectResourcesPtrOutput) ToProjectResourcesPtrOutputWithContext(ctx context.Context) ProjectResourcesPtrOutput {
	return o
}

func (o ProjectResourcesPtrOutput) Elem() ProjectResourcesOutput {
	return o.ApplyT(func(v *ProjectResources) ProjectResources {
		if v != nil {
			return *v
		}
		var ret ProjectResources
		return ret
	}).(ProjectResourcesOutput)
}

// Amount of reserved CPU.
func (o ProjectResourcesPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectResources) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// Amount of CPU limit.
func (o ProjectResourcesPtrOutput) LimitCpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectResources) *string {
		if v == nil {
			return nil
		}
		return v.LimitCpu
	}).(pulumi.StringPtrOutput)
}

// Amount of Memory limit.
func (o ProjectResourcesPtrOutput) LimitMemory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectResources) *string {
		if v == nil {
			return nil
		}
		return v.LimitMemory
	}).(pulumi.StringPtrOutput)
}

// Amount of reserved Memory.
func (o ProjectResourcesPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectResources) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddonsInput)(nil)).Elem(), AddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddonsPtrInput)(nil)).Elem(), AddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotApplicationMetricsInput)(nil)).Elem(), AdotApplicationMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotApplicationMetricsPtrInput)(nil)).Elem(), AdotApplicationMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsIngressInput)(nil)).Elem(), ClusterAddonsIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsIngressPtrInput)(nil)).Elem(), ClusterAddonsIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsIngressItemInput)(nil)).Elem(), ClusterAddonsIngressItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAddonsIngressItemPtrInput)(nil)).Elem(), ClusterAddonsIngressItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterApiInput)(nil)).Elem(), ClusterApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterApiPtrInput)(nil)).Elem(), ClusterApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthenticationInput)(nil)).Elem(), ClusterAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAuthenticationPtrInput)(nil)).Elem(), ClusterAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingInput)(nil)).Elem(), ClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingPtrInput)(nil)).Elem(), ClusterNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingIngressInput)(nil)).Elem(), ClusterNetworkingIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkingIngressPtrInput)(nil)).Elem(), ClusterNetworkingIngressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupInput)(nil)).Elem(), ClusterNodeGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupArrayInput)(nil)).Elem(), ClusterNodeGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOidcProvidersInput)(nil)).Elem(), ClusterOidcProvidersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOidcProvidersPtrInput)(nil)).Elem(), ClusterOidcProvidersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateApiInput)(nil)).Elem(), ClusterPrivateApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPrivateApiPtrInput)(nil)).Elem(), ClusterPrivateApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicApiInput)(nil)).Elem(), ClusterPublicApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicApiPtrInput)(nil)).Elem(), ClusterPublicApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluentbitLoggingInput)(nil)).Elem(), FluentbitLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluentbitLoggingPtrInput)(nil)).Elem(), FluentbitLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluentbitLoggingItemInput)(nil)).Elem(), FluentbitLoggingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FluentbitLoggingItemPtrInput)(nil)).Elem(), FluentbitLoggingItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuthenticatorRoleInput)(nil)).Elem(), IamAuthenticatorRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuthenticatorRoleArrayInput)(nil)).Elem(), IamAuthenticatorRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuthenticatorUserInput)(nil)).Elem(), IamAuthenticatorUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamAuthenticatorUserArrayInput)(nil)).Elem(), IamAuthenticatorUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngressNginxTlsInput)(nil)).Elem(), IngressNginxTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngressNginxTlsPtrInput)(nil)).Elem(), IngressNginxTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourcesInput)(nil)).Elem(), ProjectResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectResourcesPtrInput)(nil)).Elem(), ProjectResourcesArgs{})
	pulumi.RegisterOutputType(AddonsOutput{})
	pulumi.RegisterOutputType(AddonsPtrOutput{})
	pulumi.RegisterOutputType(AdotApplicationMetricsOutput{})
	pulumi.RegisterOutputType(AdotApplicationMetricsPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsIngressOutput{})
	pulumi.RegisterOutputType(ClusterAddonsIngressPtrOutput{})
	pulumi.RegisterOutputType(ClusterAddonsIngressItemOutput{})
	pulumi.RegisterOutputType(ClusterAddonsIngressItemPtrOutput{})
	pulumi.RegisterOutputType(ClusterApiOutput{})
	pulumi.RegisterOutputType(ClusterApiPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticationOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingIngressOutput{})
	pulumi.RegisterOutputType(ClusterNetworkingIngressPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupArrayOutput{})
	pulumi.RegisterOutputType(ClusterOidcProvidersOutput{})
	pulumi.RegisterOutputType(ClusterOidcProvidersPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrivateApiOutput{})
	pulumi.RegisterOutputType(ClusterPrivateApiPtrOutput{})
	pulumi.RegisterOutputType(ClusterPublicApiOutput{})
	pulumi.RegisterOutputType(ClusterPublicApiPtrOutput{})
	pulumi.RegisterOutputType(FluentbitLoggingOutput{})
	pulumi.RegisterOutputType(FluentbitLoggingPtrOutput{})
	pulumi.RegisterOutputType(FluentbitLoggingItemOutput{})
	pulumi.RegisterOutputType(FluentbitLoggingItemPtrOutput{})
	pulumi.RegisterOutputType(IamAuthenticatorRoleOutput{})
	pulumi.RegisterOutputType(IamAuthenticatorRoleArrayOutput{})
	pulumi.RegisterOutputType(IamAuthenticatorUserOutput{})
	pulumi.RegisterOutputType(IamAuthenticatorUserArrayOutput{})
	pulumi.RegisterOutputType(IngressNginxTlsOutput{})
	pulumi.RegisterOutputType(IngressNginxTlsPtrOutput{})
	pulumi.RegisterOutputType(ProjectResourcesOutput{})
	pulumi.RegisterOutputType(ProjectResourcesPtrOutput{})
}
