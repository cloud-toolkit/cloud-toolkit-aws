// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/cloud-toolkit/cloud-toolkit-aws/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloud-toolkit-aws:kubernetes:AdotApplication":
		r = &AdotApplication{}
	case "cloud-toolkit-aws:kubernetes:AdotOperator":
		r = &AdotOperator{}
	case "cloud-toolkit-aws:kubernetes:ApplicationAddon":
		r = &ApplicationAddon{}
	case "cloud-toolkit-aws:kubernetes:ArgoCD":
		r = &ArgoCD{}
	case "cloud-toolkit-aws:kubernetes:AwsEbsCsiDriver":
		r = &AwsEbsCsiDriver{}
	case "cloud-toolkit-aws:kubernetes:AwsLoadBalancerController":
		r = &AwsLoadBalancerController{}
	case "cloud-toolkit-aws:kubernetes:Calico":
		r = &Calico{}
	case "cloud-toolkit-aws:kubernetes:CertManager":
		r = &CertManager{}
	case "cloud-toolkit-aws:kubernetes:Cluster":
		r = &Cluster{}
	case "cloud-toolkit-aws:kubernetes:ClusterAddons":
		r = &ClusterAddons{}
	case "cloud-toolkit-aws:kubernetes:ClusterAdmins":
		r = &ClusterAdmins{}
	case "cloud-toolkit-aws:kubernetes:ClusterAutoscaler":
		r = &ClusterAutoscaler{}
	case "cloud-toolkit-aws:kubernetes:Dashboard":
		r = &Dashboard{}
	case "cloud-toolkit-aws:kubernetes:ExternalDns":
		r = &ExternalDns{}
	case "cloud-toolkit-aws:kubernetes:Fluentbit":
		r = &Fluentbit{}
	case "cloud-toolkit-aws:kubernetes:IamAuthenticator":
		r = &IamAuthenticator{}
	case "cloud-toolkit-aws:kubernetes:IngressNginx":
		r = &IngressNginx{}
	case "cloud-toolkit-aws:kubernetes:Irsa":
		r = &Irsa{}
	case "cloud-toolkit-aws:kubernetes:NodeGroup":
		r = &NodeGroup{}
	case "cloud-toolkit-aws:kubernetes:Project":
		r = &Project{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloud-toolkit-aws",
		"kubernetes",
		&module{version},
	)
}
