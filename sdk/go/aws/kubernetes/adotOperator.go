// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/apiextensions"
	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/core/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdotOperator struct {
	pulumi.ResourceState

	Application apiextensions.CustomResourceOutput `pulumi:"application"`
	Namespace   corev1.NamespaceOutput             `pulumi:"namespace"`
}

// NewAdotOperator registers a new resource with the given unique name, arguments, and options.
func NewAdotOperator(ctx *pulumi.Context,
	name string, args *AdotOperatorArgs, opts ...pulumi.ResourceOption) (*AdotOperator, error) {
	if args == nil {
		args = &AdotOperatorArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource AdotOperator
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:kubernetes:AdotOperator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type adotOperatorArgs struct {
}

// The set of arguments for constructing a AdotOperator resource.
type AdotOperatorArgs struct {
}

func (AdotOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adotOperatorArgs)(nil)).Elem()
}

type AdotOperatorInput interface {
	pulumi.Input

	ToAdotOperatorOutput() AdotOperatorOutput
	ToAdotOperatorOutputWithContext(ctx context.Context) AdotOperatorOutput
}

func (*AdotOperator) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotOperator)(nil)).Elem()
}

func (i *AdotOperator) ToAdotOperatorOutput() AdotOperatorOutput {
	return i.ToAdotOperatorOutputWithContext(context.Background())
}

func (i *AdotOperator) ToAdotOperatorOutputWithContext(ctx context.Context) AdotOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotOperatorOutput)
}

// AdotOperatorArrayInput is an input type that accepts AdotOperatorArray and AdotOperatorArrayOutput values.
// You can construct a concrete instance of `AdotOperatorArrayInput` via:
//
//	AdotOperatorArray{ AdotOperatorArgs{...} }
type AdotOperatorArrayInput interface {
	pulumi.Input

	ToAdotOperatorArrayOutput() AdotOperatorArrayOutput
	ToAdotOperatorArrayOutputWithContext(context.Context) AdotOperatorArrayOutput
}

type AdotOperatorArray []AdotOperatorInput

func (AdotOperatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdotOperator)(nil)).Elem()
}

func (i AdotOperatorArray) ToAdotOperatorArrayOutput() AdotOperatorArrayOutput {
	return i.ToAdotOperatorArrayOutputWithContext(context.Background())
}

func (i AdotOperatorArray) ToAdotOperatorArrayOutputWithContext(ctx context.Context) AdotOperatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotOperatorArrayOutput)
}

// AdotOperatorMapInput is an input type that accepts AdotOperatorMap and AdotOperatorMapOutput values.
// You can construct a concrete instance of `AdotOperatorMapInput` via:
//
//	AdotOperatorMap{ "key": AdotOperatorArgs{...} }
type AdotOperatorMapInput interface {
	pulumi.Input

	ToAdotOperatorMapOutput() AdotOperatorMapOutput
	ToAdotOperatorMapOutputWithContext(context.Context) AdotOperatorMapOutput
}

type AdotOperatorMap map[string]AdotOperatorInput

func (AdotOperatorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdotOperator)(nil)).Elem()
}

func (i AdotOperatorMap) ToAdotOperatorMapOutput() AdotOperatorMapOutput {
	return i.ToAdotOperatorMapOutputWithContext(context.Background())
}

func (i AdotOperatorMap) ToAdotOperatorMapOutputWithContext(ctx context.Context) AdotOperatorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotOperatorMapOutput)
}

type AdotOperatorOutput struct{ *pulumi.OutputState }

func (AdotOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotOperator)(nil)).Elem()
}

func (o AdotOperatorOutput) ToAdotOperatorOutput() AdotOperatorOutput {
	return o
}

func (o AdotOperatorOutput) ToAdotOperatorOutputWithContext(ctx context.Context) AdotOperatorOutput {
	return o
}

func (o AdotOperatorOutput) Application() apiextensions.CustomResourceOutput {
	return o.ApplyT(func(v *AdotOperator) apiextensions.CustomResourceOutput { return v.Application }).(apiextensions.CustomResourceOutput)
}

func (o AdotOperatorOutput) Namespace() corev1.NamespaceOutput {
	return o.ApplyT(func(v *AdotOperator) corev1.NamespaceOutput { return v.Namespace }).(corev1.NamespaceOutput)
}

type AdotOperatorArrayOutput struct{ *pulumi.OutputState }

func (AdotOperatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdotOperator)(nil)).Elem()
}

func (o AdotOperatorArrayOutput) ToAdotOperatorArrayOutput() AdotOperatorArrayOutput {
	return o
}

func (o AdotOperatorArrayOutput) ToAdotOperatorArrayOutputWithContext(ctx context.Context) AdotOperatorArrayOutput {
	return o
}

func (o AdotOperatorArrayOutput) Index(i pulumi.IntInput) AdotOperatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AdotOperator {
		return vs[0].([]*AdotOperator)[vs[1].(int)]
	}).(AdotOperatorOutput)
}

type AdotOperatorMapOutput struct{ *pulumi.OutputState }

func (AdotOperatorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdotOperator)(nil)).Elem()
}

func (o AdotOperatorMapOutput) ToAdotOperatorMapOutput() AdotOperatorMapOutput {
	return o
}

func (o AdotOperatorMapOutput) ToAdotOperatorMapOutputWithContext(ctx context.Context) AdotOperatorMapOutput {
	return o
}

func (o AdotOperatorMapOutput) MapIndex(k pulumi.StringInput) AdotOperatorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AdotOperator {
		return vs[0].(map[string]*AdotOperator)[vs[1].(string)]
	}).(AdotOperatorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdotOperatorInput)(nil)).Elem(), &AdotOperator{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotOperatorArrayInput)(nil)).Elem(), AdotOperatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotOperatorMapInput)(nil)).Elem(), AdotOperatorMap{})
	pulumi.RegisterOutputType(AdotOperatorOutput{})
	pulumi.RegisterOutputType(AdotOperatorArrayOutput{})
	pulumi.RegisterOutputType(AdotOperatorMapOutput{})
}
