// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudwatch"
	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/apiextensions"
	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/core/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdotApplication struct {
	pulumi.ResourceState

	Application     apiextensions.CustomResourceOutput `pulumi:"application"`
	Irsa            IrsaOutput                         `pulumi:"irsa"`
	LogGroupMetrics cloudwatch.LogGroupOutput          `pulumi:"logGroupMetrics"`
	Namespace       corev1.NamespaceOutput             `pulumi:"namespace"`
}

// NewAdotApplication registers a new resource with the given unique name, arguments, and options.
func NewAdotApplication(ctx *pulumi.Context,
	name string, args *AdotApplicationArgs, opts ...pulumi.ResourceOption) (*AdotApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsRegion'")
	}
	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AdotApplication
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:kubernetes:AdotApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type adotApplicationArgs struct {
	// The AWS Region.
	AwsRegion string `pulumi:"awsRegion"`
	// The cluster name.
	ClusterName string `pulumi:"clusterName"`
	// Configure metrics.
	Metrics *AdotApplicationMetrics `pulumi:"metrics"`
}

// The set of arguments for constructing a AdotApplication resource.
type AdotApplicationArgs struct {
	// The AWS Region.
	AwsRegion pulumi.StringInput
	// The cluster name.
	ClusterName pulumi.StringInput
	// Configure metrics.
	Metrics AdotApplicationMetricsPtrInput
}

func (AdotApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adotApplicationArgs)(nil)).Elem()
}

type AdotApplicationInput interface {
	pulumi.Input

	ToAdotApplicationOutput() AdotApplicationOutput
	ToAdotApplicationOutputWithContext(ctx context.Context) AdotApplicationOutput
}

func (*AdotApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotApplication)(nil)).Elem()
}

func (i *AdotApplication) ToAdotApplicationOutput() AdotApplicationOutput {
	return i.ToAdotApplicationOutputWithContext(context.Background())
}

func (i *AdotApplication) ToAdotApplicationOutputWithContext(ctx context.Context) AdotApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationOutput)
}

// AdotApplicationArrayInput is an input type that accepts AdotApplicationArray and AdotApplicationArrayOutput values.
// You can construct a concrete instance of `AdotApplicationArrayInput` via:
//
//	AdotApplicationArray{ AdotApplicationArgs{...} }
type AdotApplicationArrayInput interface {
	pulumi.Input

	ToAdotApplicationArrayOutput() AdotApplicationArrayOutput
	ToAdotApplicationArrayOutputWithContext(context.Context) AdotApplicationArrayOutput
}

type AdotApplicationArray []AdotApplicationInput

func (AdotApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdotApplication)(nil)).Elem()
}

func (i AdotApplicationArray) ToAdotApplicationArrayOutput() AdotApplicationArrayOutput {
	return i.ToAdotApplicationArrayOutputWithContext(context.Background())
}

func (i AdotApplicationArray) ToAdotApplicationArrayOutputWithContext(ctx context.Context) AdotApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationArrayOutput)
}

// AdotApplicationMapInput is an input type that accepts AdotApplicationMap and AdotApplicationMapOutput values.
// You can construct a concrete instance of `AdotApplicationMapInput` via:
//
//	AdotApplicationMap{ "key": AdotApplicationArgs{...} }
type AdotApplicationMapInput interface {
	pulumi.Input

	ToAdotApplicationMapOutput() AdotApplicationMapOutput
	ToAdotApplicationMapOutputWithContext(context.Context) AdotApplicationMapOutput
}

type AdotApplicationMap map[string]AdotApplicationInput

func (AdotApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdotApplication)(nil)).Elem()
}

func (i AdotApplicationMap) ToAdotApplicationMapOutput() AdotApplicationMapOutput {
	return i.ToAdotApplicationMapOutputWithContext(context.Background())
}

func (i AdotApplicationMap) ToAdotApplicationMapOutputWithContext(ctx context.Context) AdotApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdotApplicationMapOutput)
}

type AdotApplicationOutput struct{ *pulumi.OutputState }

func (AdotApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdotApplication)(nil)).Elem()
}

func (o AdotApplicationOutput) ToAdotApplicationOutput() AdotApplicationOutput {
	return o
}

func (o AdotApplicationOutput) ToAdotApplicationOutputWithContext(ctx context.Context) AdotApplicationOutput {
	return o
}

func (o AdotApplicationOutput) Application() apiextensions.CustomResourceOutput {
	return o.ApplyT(func(v *AdotApplication) apiextensions.CustomResourceOutput { return v.Application }).(apiextensions.CustomResourceOutput)
}

func (o AdotApplicationOutput) Irsa() IrsaOutput {
	return o.ApplyT(func(v *AdotApplication) IrsaOutput { return v.Irsa }).(IrsaOutput)
}

func (o AdotApplicationOutput) LogGroupMetrics() cloudwatch.LogGroupOutput {
	return o.ApplyT(func(v *AdotApplication) cloudwatch.LogGroupOutput { return v.LogGroupMetrics }).(cloudwatch.LogGroupOutput)
}

func (o AdotApplicationOutput) Namespace() corev1.NamespaceOutput {
	return o.ApplyT(func(v *AdotApplication) corev1.NamespaceOutput { return v.Namespace }).(corev1.NamespaceOutput)
}

type AdotApplicationArrayOutput struct{ *pulumi.OutputState }

func (AdotApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdotApplication)(nil)).Elem()
}

func (o AdotApplicationArrayOutput) ToAdotApplicationArrayOutput() AdotApplicationArrayOutput {
	return o
}

func (o AdotApplicationArrayOutput) ToAdotApplicationArrayOutputWithContext(ctx context.Context) AdotApplicationArrayOutput {
	return o
}

func (o AdotApplicationArrayOutput) Index(i pulumi.IntInput) AdotApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AdotApplication {
		return vs[0].([]*AdotApplication)[vs[1].(int)]
	}).(AdotApplicationOutput)
}

type AdotApplicationMapOutput struct{ *pulumi.OutputState }

func (AdotApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdotApplication)(nil)).Elem()
}

func (o AdotApplicationMapOutput) ToAdotApplicationMapOutput() AdotApplicationMapOutput {
	return o
}

func (o AdotApplicationMapOutput) ToAdotApplicationMapOutputWithContext(ctx context.Context) AdotApplicationMapOutput {
	return o
}

func (o AdotApplicationMapOutput) MapIndex(k pulumi.StringInput) AdotApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AdotApplication {
		return vs[0].(map[string]*AdotApplication)[vs[1].(string)]
	}).(AdotApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdotApplicationInput)(nil)).Elem(), &AdotApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotApplicationArrayInput)(nil)).Elem(), AdotApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdotApplicationMapInput)(nil)).Elem(), AdotApplicationMap{})
	pulumi.RegisterOutputType(AdotApplicationOutput{})
	pulumi.RegisterOutputType(AdotApplicationArrayOutput{})
	pulumi.RegisterOutputType(AdotApplicationMapOutput{})
}
