// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/apiextensions"
	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/core/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterAutoscaler struct {
	pulumi.ResourceState

	Application apiextensions.CustomResourceOutput `pulumi:"application"`
	Irsa        IrsaOutput                         `pulumi:"irsa"`
	Namespace   corev1.NamespaceOutput             `pulumi:"namespace"`
}

// NewClusterAutoscaler registers a new resource with the given unique name, arguments, and options.
func NewClusterAutoscaler(ctx *pulumi.Context,
	name string, args *ClusterAutoscalerArgs, opts ...pulumi.ResourceOption) (*ClusterAutoscaler, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ClusterAutoscaler
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:kubernetes:ClusterAutoscaler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type clusterAutoscalerArgs struct {
	// The Cluster name.
	ClusterName string `pulumi:"clusterName"`
}

// The set of arguments for constructing a ClusterAutoscaler resource.
type ClusterAutoscalerArgs struct {
	// The Cluster name.
	ClusterName pulumi.StringInput
}

func (ClusterAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAutoscalerArgs)(nil)).Elem()
}

type ClusterAutoscalerInput interface {
	pulumi.Input

	ToClusterAutoscalerOutput() ClusterAutoscalerOutput
	ToClusterAutoscalerOutputWithContext(ctx context.Context) ClusterAutoscalerOutput
}

func (*ClusterAutoscaler) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoscaler)(nil)).Elem()
}

func (i *ClusterAutoscaler) ToClusterAutoscalerOutput() ClusterAutoscalerOutput {
	return i.ToClusterAutoscalerOutputWithContext(context.Background())
}

func (i *ClusterAutoscaler) ToClusterAutoscalerOutputWithContext(ctx context.Context) ClusterAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerOutput)
}

// ClusterAutoscalerArrayInput is an input type that accepts ClusterAutoscalerArray and ClusterAutoscalerArrayOutput values.
// You can construct a concrete instance of `ClusterAutoscalerArrayInput` via:
//
//	ClusterAutoscalerArray{ ClusterAutoscalerArgs{...} }
type ClusterAutoscalerArrayInput interface {
	pulumi.Input

	ToClusterAutoscalerArrayOutput() ClusterAutoscalerArrayOutput
	ToClusterAutoscalerArrayOutputWithContext(context.Context) ClusterAutoscalerArrayOutput
}

type ClusterAutoscalerArray []ClusterAutoscalerInput

func (ClusterAutoscalerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterAutoscaler)(nil)).Elem()
}

func (i ClusterAutoscalerArray) ToClusterAutoscalerArrayOutput() ClusterAutoscalerArrayOutput {
	return i.ToClusterAutoscalerArrayOutputWithContext(context.Background())
}

func (i ClusterAutoscalerArray) ToClusterAutoscalerArrayOutputWithContext(ctx context.Context) ClusterAutoscalerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerArrayOutput)
}

// ClusterAutoscalerMapInput is an input type that accepts ClusterAutoscalerMap and ClusterAutoscalerMapOutput values.
// You can construct a concrete instance of `ClusterAutoscalerMapInput` via:
//
//	ClusterAutoscalerMap{ "key": ClusterAutoscalerArgs{...} }
type ClusterAutoscalerMapInput interface {
	pulumi.Input

	ToClusterAutoscalerMapOutput() ClusterAutoscalerMapOutput
	ToClusterAutoscalerMapOutputWithContext(context.Context) ClusterAutoscalerMapOutput
}

type ClusterAutoscalerMap map[string]ClusterAutoscalerInput

func (ClusterAutoscalerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterAutoscaler)(nil)).Elem()
}

func (i ClusterAutoscalerMap) ToClusterAutoscalerMapOutput() ClusterAutoscalerMapOutput {
	return i.ToClusterAutoscalerMapOutputWithContext(context.Background())
}

func (i ClusterAutoscalerMap) ToClusterAutoscalerMapOutputWithContext(ctx context.Context) ClusterAutoscalerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAutoscalerMapOutput)
}

type ClusterAutoscalerOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAutoscaler)(nil)).Elem()
}

func (o ClusterAutoscalerOutput) ToClusterAutoscalerOutput() ClusterAutoscalerOutput {
	return o
}

func (o ClusterAutoscalerOutput) ToClusterAutoscalerOutputWithContext(ctx context.Context) ClusterAutoscalerOutput {
	return o
}

func (o ClusterAutoscalerOutput) Application() apiextensions.CustomResourceOutput {
	return o.ApplyT(func(v *ClusterAutoscaler) apiextensions.CustomResourceOutput { return v.Application }).(apiextensions.CustomResourceOutput)
}

func (o ClusterAutoscalerOutput) Irsa() IrsaOutput {
	return o.ApplyT(func(v *ClusterAutoscaler) IrsaOutput { return v.Irsa }).(IrsaOutput)
}

func (o ClusterAutoscalerOutput) Namespace() corev1.NamespaceOutput {
	return o.ApplyT(func(v *ClusterAutoscaler) corev1.NamespaceOutput { return v.Namespace }).(corev1.NamespaceOutput)
}

type ClusterAutoscalerArrayOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterAutoscaler)(nil)).Elem()
}

func (o ClusterAutoscalerArrayOutput) ToClusterAutoscalerArrayOutput() ClusterAutoscalerArrayOutput {
	return o
}

func (o ClusterAutoscalerArrayOutput) ToClusterAutoscalerArrayOutputWithContext(ctx context.Context) ClusterAutoscalerArrayOutput {
	return o
}

func (o ClusterAutoscalerArrayOutput) Index(i pulumi.IntInput) ClusterAutoscalerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterAutoscaler {
		return vs[0].([]*ClusterAutoscaler)[vs[1].(int)]
	}).(ClusterAutoscalerOutput)
}

type ClusterAutoscalerMapOutput struct{ *pulumi.OutputState }

func (ClusterAutoscalerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterAutoscaler)(nil)).Elem()
}

func (o ClusterAutoscalerMapOutput) ToClusterAutoscalerMapOutput() ClusterAutoscalerMapOutput {
	return o
}

func (o ClusterAutoscalerMapOutput) ToClusterAutoscalerMapOutputWithContext(ctx context.Context) ClusterAutoscalerMapOutput {
	return o
}

func (o ClusterAutoscalerMapOutput) MapIndex(k pulumi.StringInput) ClusterAutoscalerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterAutoscaler {
		return vs[0].(map[string]*ClusterAutoscaler)[vs[1].(string)]
	}).(ClusterAutoscalerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalerInput)(nil)).Elem(), &ClusterAutoscaler{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalerArrayInput)(nil)).Elem(), ClusterAutoscalerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAutoscalerMapInput)(nil)).Elem(), ClusterAutoscalerMap{})
	pulumi.RegisterOutputType(ClusterAutoscalerOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalerArrayOutput{})
	pulumi.RegisterOutputType(ClusterAutoscalerMapOutput{})
}
