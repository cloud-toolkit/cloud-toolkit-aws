// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/apiextensions"
	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/core/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AwsLoadBalancerController struct {
	pulumi.ResourceState

	Application apiextensions.CustomResourceOutput `pulumi:"application"`
	Irsa        IrsaOutput                         `pulumi:"irsa"`
	Namespace   corev1.NamespaceOutput             `pulumi:"namespace"`
}

// NewAwsLoadBalancerController registers a new resource with the given unique name, arguments, and options.
func NewAwsLoadBalancerController(ctx *pulumi.Context,
	name string, args *AwsLoadBalancerControllerArgs, opts ...pulumi.ResourceOption) (*AwsLoadBalancerController, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AwsLoadBalancerController
	err := ctx.RegisterRemoteComponentResource("cloud-toolkit-aws:kubernetes:AwsLoadBalancerController", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type awsLoadBalancerControllerArgs struct {
	// The Cluster name.
	ClusterName string `pulumi:"clusterName"`
}

// The set of arguments for constructing a AwsLoadBalancerController resource.
type AwsLoadBalancerControllerArgs struct {
	// The Cluster name.
	ClusterName pulumi.StringInput
}

func (AwsLoadBalancerControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLoadBalancerControllerArgs)(nil)).Elem()
}

type AwsLoadBalancerControllerInput interface {
	pulumi.Input

	ToAwsLoadBalancerControllerOutput() AwsLoadBalancerControllerOutput
	ToAwsLoadBalancerControllerOutputWithContext(ctx context.Context) AwsLoadBalancerControllerOutput
}

func (*AwsLoadBalancerController) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLoadBalancerController)(nil)).Elem()
}

func (i *AwsLoadBalancerController) ToAwsLoadBalancerControllerOutput() AwsLoadBalancerControllerOutput {
	return i.ToAwsLoadBalancerControllerOutputWithContext(context.Background())
}

func (i *AwsLoadBalancerController) ToAwsLoadBalancerControllerOutputWithContext(ctx context.Context) AwsLoadBalancerControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLoadBalancerControllerOutput)
}

// AwsLoadBalancerControllerArrayInput is an input type that accepts AwsLoadBalancerControllerArray and AwsLoadBalancerControllerArrayOutput values.
// You can construct a concrete instance of `AwsLoadBalancerControllerArrayInput` via:
//
//	AwsLoadBalancerControllerArray{ AwsLoadBalancerControllerArgs{...} }
type AwsLoadBalancerControllerArrayInput interface {
	pulumi.Input

	ToAwsLoadBalancerControllerArrayOutput() AwsLoadBalancerControllerArrayOutput
	ToAwsLoadBalancerControllerArrayOutputWithContext(context.Context) AwsLoadBalancerControllerArrayOutput
}

type AwsLoadBalancerControllerArray []AwsLoadBalancerControllerInput

func (AwsLoadBalancerControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLoadBalancerController)(nil)).Elem()
}

func (i AwsLoadBalancerControllerArray) ToAwsLoadBalancerControllerArrayOutput() AwsLoadBalancerControllerArrayOutput {
	return i.ToAwsLoadBalancerControllerArrayOutputWithContext(context.Background())
}

func (i AwsLoadBalancerControllerArray) ToAwsLoadBalancerControllerArrayOutputWithContext(ctx context.Context) AwsLoadBalancerControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLoadBalancerControllerArrayOutput)
}

// AwsLoadBalancerControllerMapInput is an input type that accepts AwsLoadBalancerControllerMap and AwsLoadBalancerControllerMapOutput values.
// You can construct a concrete instance of `AwsLoadBalancerControllerMapInput` via:
//
//	AwsLoadBalancerControllerMap{ "key": AwsLoadBalancerControllerArgs{...} }
type AwsLoadBalancerControllerMapInput interface {
	pulumi.Input

	ToAwsLoadBalancerControllerMapOutput() AwsLoadBalancerControllerMapOutput
	ToAwsLoadBalancerControllerMapOutputWithContext(context.Context) AwsLoadBalancerControllerMapOutput
}

type AwsLoadBalancerControllerMap map[string]AwsLoadBalancerControllerInput

func (AwsLoadBalancerControllerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLoadBalancerController)(nil)).Elem()
}

func (i AwsLoadBalancerControllerMap) ToAwsLoadBalancerControllerMapOutput() AwsLoadBalancerControllerMapOutput {
	return i.ToAwsLoadBalancerControllerMapOutputWithContext(context.Background())
}

func (i AwsLoadBalancerControllerMap) ToAwsLoadBalancerControllerMapOutputWithContext(ctx context.Context) AwsLoadBalancerControllerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLoadBalancerControllerMapOutput)
}

type AwsLoadBalancerControllerOutput struct{ *pulumi.OutputState }

func (AwsLoadBalancerControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLoadBalancerController)(nil)).Elem()
}

func (o AwsLoadBalancerControllerOutput) ToAwsLoadBalancerControllerOutput() AwsLoadBalancerControllerOutput {
	return o
}

func (o AwsLoadBalancerControllerOutput) ToAwsLoadBalancerControllerOutputWithContext(ctx context.Context) AwsLoadBalancerControllerOutput {
	return o
}

func (o AwsLoadBalancerControllerOutput) Application() apiextensions.CustomResourceOutput {
	return o.ApplyT(func(v *AwsLoadBalancerController) apiextensions.CustomResourceOutput { return v.Application }).(apiextensions.CustomResourceOutput)
}

func (o AwsLoadBalancerControllerOutput) Irsa() IrsaOutput {
	return o.ApplyT(func(v *AwsLoadBalancerController) IrsaOutput { return v.Irsa }).(IrsaOutput)
}

func (o AwsLoadBalancerControllerOutput) Namespace() corev1.NamespaceOutput {
	return o.ApplyT(func(v *AwsLoadBalancerController) corev1.NamespaceOutput { return v.Namespace }).(corev1.NamespaceOutput)
}

type AwsLoadBalancerControllerArrayOutput struct{ *pulumi.OutputState }

func (AwsLoadBalancerControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLoadBalancerController)(nil)).Elem()
}

func (o AwsLoadBalancerControllerArrayOutput) ToAwsLoadBalancerControllerArrayOutput() AwsLoadBalancerControllerArrayOutput {
	return o
}

func (o AwsLoadBalancerControllerArrayOutput) ToAwsLoadBalancerControllerArrayOutputWithContext(ctx context.Context) AwsLoadBalancerControllerArrayOutput {
	return o
}

func (o AwsLoadBalancerControllerArrayOutput) Index(i pulumi.IntInput) AwsLoadBalancerControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLoadBalancerController {
		return vs[0].([]*AwsLoadBalancerController)[vs[1].(int)]
	}).(AwsLoadBalancerControllerOutput)
}

type AwsLoadBalancerControllerMapOutput struct{ *pulumi.OutputState }

func (AwsLoadBalancerControllerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLoadBalancerController)(nil)).Elem()
}

func (o AwsLoadBalancerControllerMapOutput) ToAwsLoadBalancerControllerMapOutput() AwsLoadBalancerControllerMapOutput {
	return o
}

func (o AwsLoadBalancerControllerMapOutput) ToAwsLoadBalancerControllerMapOutputWithContext(ctx context.Context) AwsLoadBalancerControllerMapOutput {
	return o
}

func (o AwsLoadBalancerControllerMapOutput) MapIndex(k pulumi.StringInput) AwsLoadBalancerControllerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLoadBalancerController {
		return vs[0].(map[string]*AwsLoadBalancerController)[vs[1].(string)]
	}).(AwsLoadBalancerControllerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLoadBalancerControllerInput)(nil)).Elem(), &AwsLoadBalancerController{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLoadBalancerControllerArrayInput)(nil)).Elem(), AwsLoadBalancerControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLoadBalancerControllerMapInput)(nil)).Elem(), AwsLoadBalancerControllerMap{})
	pulumi.RegisterOutputType(AwsLoadBalancerControllerOutput{})
	pulumi.RegisterOutputType(AwsLoadBalancerControllerArrayOutput{})
	pulumi.RegisterOutputType(AwsLoadBalancerControllerMapOutput{})
}
